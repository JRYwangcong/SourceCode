BYTE code tOSDColorPalette0[] =
{
    0xFF, 0xFF, 0xFF,  // Palette 0 // White
    #if(DisplayLogo==AcerLOGO)
    0x78, 0xBC, 0x29,  // Palette 1 // Red
    #else
    0xFF, 0x00, 0x00,  // Palette 1 // Red
    #endif
    0x00, 0x80, 0xff,  // Palette 2 //lightblue Green
    0x00, 0x00, 0xFF,  // Palette 3 // Blue

    0xF6, 0xB8, 0x0,  // Palette 4 // Envision PowerOnLogo "O"Color
    0xc0, 0xc0, 0xc0,  // Palette 5 //gray
    0x49, 0x56, 0x77,  // Palette 6 //Main Logo Color +AOC power On
    0x00, 0x00, 0x00,  // Palette 7
};

// 2 color = 13 font
#define Luma2FontNum	    2
#define Image2FontNum	    1
#define Colortemp2FontNum	4
#define Picture2FontNum		1
#define OsdSetup2FontNum	2
#define Extra2FontNum		1
#define Reset2FontNum		1
#define Exit2FontNum		1
#if HotExpansionAdjust
#define Expansion_Native2FontNum	3
#define Expansion_Full2FontNum	3
#endif

// 4 color = 93*2=186 font
#define Luma4FontNum	    9
#define Image4FontNum	    13
#define Colortemp4FontNum	8
#define Color4FontNum		9
#define Picture4FontNum	    11
#define OsdSetup4FontNum	10 // 6
#define Extra4FontNum		13
#define Reset4FontNum		9
#define Exit4FontNum		11
#if HotExpansionAdjust
#define Expansion_Native4FontNum	12
#define Expansion_Full4FontNum	12
#endif

// 8 color =18*3 = 54  font
#define Image8FontNum		1
#define Color8FontNum		4
#define OsdSetup8FontNum	2 // 7
#define Colortemp8FontNum   1
#define Picture8FontNum	    3
#define Reset8FontNum		4
#define Exit8FontNum		2
//total Icon font = 13+186 +54 = 253 font.
typedef enum
{ CP_2Color_1=0,// for 2 color
  CP_2Color_2,  // for 2 color
  CP_Color_1, //
  CP_Color_2, //
  CP_Color_3, //
  CP_Color_4, //
  CP_Color_5, //
  CP_Color_6, //
  CP_Color_7, //
  CP_Color_8, //
  CP_Color_9, //
  CP_Color_10, //
  CP_Color_11, //
  CP_Color_12, //
  CP_Color_13, //
  CP_Color_14, //
  CP_Max4Color
} CP_256ColorType;
#define Comm2Color		  (CP_2Color_1<<1)

#define Image8Color       (CP_Color_1<<1)
#define Colortemp8Color   (CP_Color_2<<1) // for 1-2/1-3/1-4/2-3
#define ColorBoost8Color  (CP_Color_3<<1)
#define PictureBoost8Color  (CP_Color_4<<1)
#define OsdSetup8Color      Image8Color  // 共用 image
#define Reset8Color         (CP_Color_5<<1)
#define Reset8Color1a       Image8Color  // 共用 image
#define Exit8Color         (CP_Color_6<<1)

#define Luma4Color        (CP_Color_7<<4) // for all

#define Image4Color1a       ((CP_Color_7<<4)|8) // for 2-5/3-3/3-4/3-5
#define Image4Color1b       ((CP_Color_14<<4)) // keep color for 2-3/2-4

#define Colortemp4Color1a  (CP_Color_8<<4) // for 3-3
#define Colortemp4Color2a  ((CP_Color_8<<4)|8) // for 2-1/2-2/3-1/3-2
#define Colortemp4Color2b  (CP_Color_9<<4) // for 2-4/2-5/3-4/3-5

#define ColorBoost4Color1a  ((CP_Color_9<<4)|8)

#define PictureBoost4Color1a (CP_Color_10<<4) // for 1-1/1-2
#define PictureBoost4Color2c ((CP_Color_10<<4)|8) // for 3-4
#define PictureBoost4Color2a ((CP_Color_13<<4)|8) // keep color for 2-4
#define PictureBoost4Color2b ((CP_Color_13<<4)|12) // keep color for 2-2/2-3

#define OsdSetup4Color       Image4Color1a   // 共用 image // for 2-5/3-4/3-5

#define Extra4Color1a         (CP_Color_12<<4)
#define Extra4Color1b       ((CP_Color_11<<4)|8) // for 3-3

#define Exit4Color1a        ((CP_Color_14<<4)|8) // 2-3
#define Exit4Color1b        ((CP_Color_14<<4)|12) // 2-4
#define Exit4Color1c        (CP_Color_11<<4) // 1-3/2-5/3-3/3-4

#define HotKey4Color1a      (CP_Color_13<<4) // keep color for 2-4
#ifdef TSUMXXT		//110311 Modify
BYTE code tOSDColorPalette256a[] =
{
//=======================================================================================//
// palette  0
//=======================================================================================//
    0x00, 0x00, 0x00,  // 0
    0x55, 0x55, 0x55,  // 1
    0x55, 0x55, 0x55,  // 2 	左上/右上
    0xFF, 0xFF, 0xFF,  // 3

    0x11, 0x11, 0x11,  // 4  	左下/右下
    0x11, 0x11, 0x11,  // 5
    0x00, 0x00, 0x00,  // 0xcc, 0x0c,  // 6  //For Center Text
    0x55, 0x88, 0xDD,  // 7

    0x55, 0x55, 0x55,  // 4  -Gray 0x00, 0x00, // 4
    0xFF, 0xFF, 0x00,  // 5 -Yellow 0x00, 0x00, // 5
    0x11, 0x11, 0x11,  // 0x00, 0x00,  // 10 //For Information Bar At Main Menu
    0x55, 0x88, 0xDD,  //0x37, 0x0f,  //0xCC, 0x0C,  // 11

    0x00, 0x00, 0x00,  //0xCC, 0x0C,  // 12  //Select Item
    0xFF, 0xFF, 0xFF,  // 13
    0x00, 0x00, 0x00,  // 0xcc, 0x0c,  // 14  //Exec item
    0x00, 0xFF, 0x00,  // 15

//=======================================================================================//
// palette  1
//=======================================================================================//
    0x00, 0x00, 0x00,  // 16 	mainmenu icon unselected
    0x00, 0x00, 0x00,  // 17
    0x00, 0x00, 0x00,  // 18   mainmenu icon selected
    0x55, 0x55, 0x55,  // 19

    0x00, 0x00, 0x00,  // 20
    0xAA, 0xAA, 0xAA,  // 21
    0x55, 0x55, 0x55,  // 22
    0x11, 0x11, 0x11,  // 23

    //=======================================================================================//
    // palette  2
    //=======================================================================================//
    0x11, 0x11, 0x11,  // 24
    0x00, 0x00, 0x00,  // 25
    0x00, 0x00, 0x00,  // 26
    0x66, 0x66, 0x66,  // 27

    0x55, 0x88, 0xDD,  // 13
    0x00, 0x00, 0x00,  // 12
    0x00, 0x00, 0x00,  // 12
    0x00, 0x00, 0x00,  // 12

    //=======================================================================================//
    // palette  3
    //=======================================================================================//
#if 0
    0xff, 0x0f,  //16
    0x00, 0x00,
    0x11, 0x01, //17
    0x22, 0x02,

    0xff, 0x0f, //18
    0x33, 0x03,
    0x44, 0x04, //19
    0x55, 0x05,
#else
//AOC
    0xFF, 0xFF, 0xFF,  //16
    0x22, 0x22, 0x22,
    0x22, 0x22, 0x22,
    0xFF, 0xFF, 0xFF,
//Evision
    0x22, 0x22, 0x22, //18
    0xFF, 0xBB, 0x11,


#endif
};

BYTE code tOSDColorPalette256[] =
{
//=======================================================================================//
// palette  0
//=======================================================================================//
    0x00, 0x00, 0x00,  // 0
    0x55, 0x55, 0x55,  // 1
    0x55, 0x55, 0x55,  // 2 	左上/右上
    0xFF, 0xFF, 0xFF,  // 3

    0x11, 0x11, 0x11,  // 4  	左下/右下
    0x11, 0x11, 0x11,  // 5
    0x00, 0x00, 0x00,  // 0xcc, 0x0c,  // 6  //For Center Text
    0x33, 0x99, 0xDD,//0x58, 0x0d,  // 7

    0x55, 0x55, 0x55,  // 8  -Gray 0x00, 0x00, // 4
    0xFF, 0xFF, 0x00,  // 9 -Yellow 0x00, 0x00, // 5
    0x11, 0x11, 0x11,  // 10 0x00, 0x00,  // 10 //For Information Bar At Main Menu
    0x55, 0x88, 0xDD, // 11 0x37, 0x0f,  //0xCC, 0x0C,  // 11

    0x00, 0x00, 0x00,  //12 0xCC, 0x0C,  // 12  //Select Item
    0xFF, 0xFF, 0xFF,  // 13
    0x00, 0x00, 0x00,  // 0xcc, 0x0c,  // 14  //Exec item
    0x00, 0xFF, 0x00,  // 15


//=======================================================================================//
// palette  1
//=======================================================================================//
// for 2 color use
    0x00, 0x00, 0x00,  // 16 	mainmenu icon unselected
    0x00, 0x00, 0x00,  // 17
    0x00, 0x00, 0x00,  // 18   mainmenu icon selected
    0x55, 0x55, 0x55,  // 19

    0x00, 0x00, 0x00,  // 20
    0xAA, 0xAA, 0xAA,  // 21
    0x55, 0x55, 0x55,  // 22
    0x00, 0x00, 0x00,  //0x11, 0x01,  // 23

    0x11, 0x11, 0x11,  // 24
    0x00, 0x00, 0x00,  // 25
    0x00, 0x00, 0x00,  // 26
    0x66, 0x66, 0x66,  // 27

    0x00, 0x00, 0x00,  // 28
    0xFF, 0xFF, 0xFF,  // 29
    0x00, 0x00, 0x00,  // 30
    0xFF, 0xFF, 0xFF,  //0x77, 0x08,  // 31

//=======================================================================================//
// palette  2
    // CP_Color_1
//=======================================================================================//
    // ImageSetUp 8 color
    0x00, 0x00, 0x00,  // 32
    0x33, 0xAA, 0xDD,  // 33
    0x88, 0xDD, 0xEE,  // 34
    0xFF, 0xFF, 0xFF,  // 35

    0xDD, 0x55, 0x00,  // 36
    0xFF, 0xCC, 0x22,  // 37
    0xff, 0xFF, 0xFF,  // 38
    0x00, 0x00, 0x00,  // 39

    //
    0x55, 0x55, 0x55,  // 40
    0x33, 0xAA, 0xDD,  // 41
    0x88, 0xDD, 0xEE,  // 42
    0xFF, 0xFF, 0xFF,  // 43

    0xDD, 0x55, 0x00,   // 44
    0xFF, 0xCC, 0x22,    // 45
    0xFF, 0xFF, 0xFF,  // 46
    0x00, 0x00, 0x00,  // 47

//=======================================================================================//
// palette  3
// CP_Color_2
//=======================================================================================//
    // ColorTemp 8 color
    0x00, 0x00, 0x00,  // 0 // 48
    0xCC, 0x22, 0x22,  // 1 // 49
    0xEE, 0xAA, 0xAA,  // 3 // 50
    0x88, 0xBB, 0x44,  // 2 // 51

    0x33, 0xAA, 0xDD,  // 4 // 52
    0xCC, 0xEE, 0xAA,  // 1 // 53
    0xAA, 0xBB, 0xEE,  // 3 // 53
    0x00, 0x00, 0x00,  // 2 // 54

    0x55, 0x55, 0x55,  // 55
    0xCC, 0x22, 0x22,  // 56
    0xAA, 0xAA, 0xAA,  // 57
    0x88, 0xBB, 0x44,  // 58

    0x33, 0xAA, 0xDD,  // 59
    0xCC, 0xEE, 0xAA,  // 60
    0xAA, 0xBB, 0xEE,  // 61
    0x00, 0x00, 0x00,  // 62

//=======================================================================================//
// palette  4
// CP_Color_3
//=======================================================================================//
    // ColorBoost for 8 color
    0x00, 0x00, 0x00,  // 0 // 63
    0xCC, 0xCC, 0xCC,  //  1 // 64
    0xEE, 0xEE, 0xDD,  // 2 // 65
    0x22, 0x99, 0xEE,  // 3 // 66

    0xEE, 0x22, 0x88,  // 4 // 67
    0xEE, 0x88, 0x33,  // 5 // 68
    0xFF, 0xEE, 0x33,  // 6 // 69
    0x00, 0x00, 0x00,  // 7 // 70

    // selected
    0x55, 0x55, 0x55,  // 0 // 71
    0xcc, 0xCC, 0xCC,  //  1 // 72
    0xEE, 0xEE, 0xDD,  // 2 // 73
    0x22, 0x99, 0xEE,  // 3 // 74

    0xEE, 0x22, 0x88,  // 4 // 75
    0xEE, 0x88, 0x33,  // 5 // 76
    0xFF, 0xEE, 0x33,  // 6 // 77
    0x00, 0x00, 0x00,  // 7 // 78

//=======================================================================================//
// palette  5
// CP_Color_4
//=======================================================================================//
    // picture for 8 color
    0x00, 0x00, 0x00,  // 0 // 79
    0x88, 0xDD, 0x22,   // 1 // 80
    0xBB, 0xDD, 0x77, // 2 // 81
    0x99, 0xDD, 0x55,  // 3 // 82

    0xFF, 0x66, 0x00,  //0xff, 0x03,  // 4 // 83
    0x00, 0x00, 0x00,  // 84
    0x00, 0x00, 0x00,   // 85
    0x00, 0x00, 0x00,  // 86

    // selected
    0x55, 0x55, 0x55,  // 0 // 87
    0x88, 0xBB, 0x22,   // 1 // 88
    0xBB, 0xDD, 0x77, // 2 // 89
    0x99, 0xDD, 0x55,  // 3 // 90

    0xFF, 0x66, 0x00, //0xff, 0x03,  // 4 // 91
    0x00, 0x00, 0x00,   // 92
    0x00, 0x00, 0x00,   // 93
    0x00, 0x00, 0x00,  // 94

//=======================================================================================//
// palette  6
// CP_Color_5
//=======================================================================================//
    // reset for 8 color
    0x00, 0x00, 0x00,  // 0 // 95
    0xCC, 0x33, 0x22,   // 1 // 96
    0xEE, 0x77, 0x66,  // 2 // 97
    0xFF, 0xDD, 0xDD, // 3 // 98

    0x33, 0x88, 0xAA,  // 99
    0x33, 0x99, 0xDD,  // 100
    0x99, 0xDD, 0xEE,  // 101
    0x00, 0x00, 0x00,  // 102

    0x55, 0x55, 0x55,  // 0 // 103
    0xCC, 0x33, 0x22,   // 1 // 104
    0xEE, 0x77, 0x66,  // 2 // 105
    0xFF, 0xDD, 0xDD, // 3 // 106

    0x33, 0x88, 0xAA,  // 107
    0x33, 0x99, 0xDD,  // 108
    0x99, 0xDD, 0xEE,  // 109
    0x00, 0x00, 0x00,  // 110

//=======================================================================================//
// palette  7
// CP_Color_6
//=======================================================================================//
    // exit for 8 color
    0x00, 0x00, 0x00,  // 111
    0x77, 0x77, 0x77,  // 112
    0xDD, 0x99, 0xBB,  // 113
    0xDD, 0x22, 0x77, // 114

    0x44, 0x33, 0x33,  // 115
    0xAA, 0xAA, 0xAA,  // 116
    0xCC, 0xCC, 0xCC, // 117
    0x00, 0x00, 0x00,  // 118

    0x55, 0x55, 0x55,  // 119
    0x77, 0x77, 0x77,  // 120
    0xDD, 0x99, 0xBB,  // 121
    0xDD, 0x22, 0x77, // 122

    0x44, 0x33, 0x33,  // 123
    0xAA, 0xAA, 0xAA,  // 124
    0xCC, 0xCC, 0xCC, // 125
    0x00, 0x00, 0x00,  // 126

//=======================================================================================//
// palette  8
// CP_Color_7
//=======================================================================================//
    // Luminance
    0x00, 0x00, 0x00,  // 127
    0xFF, 0xFF, 0x00,  // 128
    0xFF, 0xFF, 0xFF,  // 129
    0x00, 0x00, 0x00,  // 130

    0x55, 0x55, 0x55,  // 131
    0xFF, 0xFF, 0x00,  // 132
    0xFF, 0xFF, 0xFF, // 133
    0x00, 0x00, 0x00,   // 134

    // ImageSetUp
    0x00, 0x00, 0x00,  // 135
    0x33, 0xAA, 0xDD, // 0x38, 0x0a,  // 136
    0xDD, 0x55, 0x00,  // 0xd8, 0x03,  // 137
    0xFF, 0xCC, 0x22,   // 0xfc, 0x03,  // 138

    0x55, 0x55, 0x55,  // 139
    0x33, 0xAA, 0xDD, // 0x38, 0x0a,  // 140
    0xDD, 0x55, 0x00, // 0xd8, 0x03,  // 141
    0xFF, 0xCC, 0x22,  // 0xfc, 0x03,  // 142

//=======================================================================================//
// palette  9
// CP_Color_8
//=======================================================================================//
    // colortemp for 4 color
    0x00, 0x00, 0x00,  // 143
    0x33, 0xAA, 0xDD,   // 144
    0x88, 0xBB, 0x44, // 145
    0x00, 0x00, 0x00,  // 146

    0x55, 0x55, 0x55,  // 147
    0x33, 0xAA, 0xDD,  // 148
    0x88, 0xBB, 0x44, // 149
    0x00, 0x00, 0x00,  // 150

    //ColorTemp for 4 color
    0x00, 0x00, 0x00,  // 151
    0x88, 0xBB, 0x44,  // 152
    0xCC, 0xEE, 0xAA,  // 153
    0xCC, 0x22, 0x22,  // 154

    0x55, 0x55, 0x55,  // 155
    0x88, 0xBB, 0x44,  // 156
    0xCC, 0xEE, 0xAA,  // 157
    0xCC, 0x22, 0x22,  // 158

//=======================================================================================//
// palette  10
// CP_Color_9
//=======================================================================================//
    // ColorTemp for 4 color
    0x00, 0x00, 0x00,  // 159
    0x33, 0xAA, 0xDD,   // 160
    0xCC, 0x22, 0x22,  // 161
    0xAA, 0xBB, 0xEE,  // 162

    0x55, 0x55, 0x55,  // 163
    0x33, 0xAA, 0xDD,   // 164
    0xCC, 0x22, 0x22,  // 165
    0xAA, 0xBB, 0xEE,  // 166

    // ColorBoost for 4 color
    0x00, 0x00, 0x00,  // 0 // 167
    0xCC, 0xCC, 0xCC,  //  1 // 168
    0xEE, 0x22, 0x88,  // 2 // 169
    0x22, 0x99, 0xEE,  // 3 // 170

    0x55, 0x55, 0x55,  // 0 // 171
    0xCC, 0xCC, 0xCC,  //  1 // 172
    0xEE, 0x22, 0x88,  // 2 // 173
    0x22, 0x99, 0xEE,  // 3 // 174

//=======================================================================================//
// palette  11
// CP_Color_10
//=======================================================================================//
	// picture for 4 color
    0x00, 0x00, 0x00,  // 0 // 175
    0x88, 0xBB, 0x22,   // 1 // 176
    0xFF, 0x66, 0x00, //0xff, 0x03, // 2 // 177
    0xBB, 0xDD, 0x77,  // 3 // 178

    0x55, 0x55, 0x55,  // 179
    0x88, 0xBB, 0x22,   // 1 // 180
    0xFF, 0x66, 0x00, //0xff, 0x03, // 2 // 181
    0xBB, 0xDD, 0x77,  // 3 // 182

	// picture for 4 color
    0x00, 0x00, 0x00,  // 0 // 183
    0x88, 0xBB, 0x22, // 1 // 184
    0x00, 0x00, 0x00,   // 2 // 185
    0x99, 0xDD, 0x55,   // 186

    0x55, 0x55, 0x55,  // 0 // 187
    0x88, 0xBB, 0x22, // // 1 // 188
    0x00, 0x00, 0x00,   // 2 // 189
    0x99, 0xDD, 0x55,  // 190


//=======================================================================================//
// palette  12
// CP_Color_11
//=======================================================================================//
    // exit for 4 color for 1-3/2-5/3-4/3-3
    0x00, 0x00, 0x00,  // 0 // 191
    0x77, 0x77, 0x77,  // 1 // 192
    0x44, 0x33, 0x33,   // 2 // 193
    0xAA, 0xAA, 0xAA, // 3 // 194

    0x55, 0x55, 0x55, // 195
    0x77, 0x77, 0x77,  // 1 // 196
    0x44, 0x33, 0x33,   // 2 // 197
    0xAA, 0xAA, 0xAA, // 3 // 198

    // for extra  4 color
    0x00, 0x00, 0x00,  // 0 // 199
    0xEE, 0xEE, 0xEE,  // 1 // 200
    0x88, 0x77, 0x77,  // 201
    0xCC, 0x44, 0x44,  // 3 // 202

    0x55, 0x55, 0x55,  // 4 // 203
    0xEE, 0xEE, 0xEE,  // 1 // 204
    0x88, 0x77, 0x77,  //
    0xCC, 0x44, 0x44,  // 3 // 206

//=======================================================================================//
// palette  13
// CP_Color_12
//=======================================================================================//
    // for extra  4 color 3-3
    0x00, 0x00, 0x00,  // 0
    0xEE, 0xEE, 0xEE,  // 1 // 208
    0x88, 0x77, 0x77,  //
    0x44, 0x44, 0x44,  // 3 // 210

    0x55, 0x55, 0x55,  // 4
    0xEE, 0xEE, 0xEE,  // 1 // 212
    0x88, 0x77, 0x77,  //
    0x44, 0x44, 0x44,  // 3 // 214

	// for hot key: game, internet, vol, standard, sports
    0x00, 0x00, 0x00,  //
    0x00, 0x99, 0xDD,  // 0x08, 0x0d,  // 216
    0x00, 0x44, 0x77,  // 0x04, 0x08,  //
    0xFF, 0xFF, 0xFF,  // 0xac, 0x0c,  // 218

    0x99, 0x44, 0x33,  //
    0x77, 0xBB, 0x66,  // 220
    0x00, 0x00, 0x00,  //
    0x33, 0x88, 0xAA,  // 222
//=======================================================================================//
// palette  14
    // CP_Color_13
//=======================================================================================//
	// for hot key: text, movie
    0x00, 0x00, 0x00,  // 
    0x44, 0xBB, 0xFF,  //  // (65, 188, 224)=4BD (155, 195, 204)=9BC // 224
    0x33, 0xAA, 0xDD,  //  	// (44, 157, 188)=39B (23, 135, 204)=18C
    0xEE, 0xEE, 0xEE,  //  	// (198, 207, 235)=CEE // 226
	// not used
    0x00, 0x00, 0x00,  //
    0x99, 0xDD, 0xEE,  //  <== can change this color for TEXT // 228
    0x33, 0xAA, 0xDD,  //  <== this color is the "T" word
    0xEE, 0xEE, 0xEE,  //  (198, 207, 235)=CEE // 230


    // keep color , picture for 4 color
    0x00, 0x00, 0x00,  // 0
    0x88, 0xBB, 0x22, // 1 // 232
    0xBB, 0xDD, 0x77,  // 2
    0x99, 0xDD, 0x55,  // 3 // 234

    0xFF, 0x66, 0x00,//0xff, 0x03, // 0
    0xFF, 0x66, 0x00,  // 1 // 236
    0xBB, 0xDD, 0x77,  // 2
    0x00, 0x00, 0x00,  // 3 // 240

//=======================================================================================//
// palette  15
// CP_Color_14
//=======================================================================================//
    //keep color , ImageSetUp  2-3/2-4
    0xDD, 0x55, 0x00,  // 0xd8, 0x03,  //
    0x33, 0x99, 0xCC,  // 0x38, 0x0a,  // 242
    0x88, 0xCC, 0xDD,  // 0x39, 0x0d,  //
    0xFF, 0xCC, 0x22,   // 0xfc, 0x03,  // 244

    //keep color , for iCare icon  use
    0x00, 0x00, 0x00, //  
    0xFF, 0xCC, 0x00, // 
    0x44, 0xBB, 0xFF, //  
    0x00, 0x00, 0x00, //  

    //keep color , exit for 2-3
    0xDD, 0x22, 0x77,  //
    0x77, 0x77, 0x77,  // 250
    0xDD, 0x99, 0xBB,  //
    0x44, 0x33, 0x33,//0xd2, 0x07, // 252

    //keep color ,  exit for 2-4
    0x44, 0x33, 0x33,  // 0
    0x77, 0x77, 0x77,  // 1 254
    0xCC, 0xCC, 0xCC,  // 2
    0xAA, 0xAA, 0xAA,  // 3
};
BYTE code tAutoColorPalette256[] =
{
    0x00, 0x00, 0x00,
    0x00, 0x99, 0xEE,
    0x44, 0xBB, 0xFF,
    0x99, 0xDD, 0xFF,

    0xDD, 0xEE, 0xFF,
    //0x00, 0x00,//no use
   // 0x00, 0x00,//no use
   // 0x00, 0x00,//no use  
};
BYTE code tDCROffColorPalette256[] =
{
    0xDD, 0x11, 0x11, 
};

#if HotExpansionAdjust
BYTE code tExpansionColorPalette256[] =
{
    0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF,
	0x00, 0x99, 0xEE,
	0xFF, 0xFF, 0xFF,

};
#endif
BYTE code tOriginalColorPalette256[] =
{
    0x44, 0xBB, 0xFF,  
};

#else

BYTE code tOSDColorPalette256a[] =
{
    //0xXY, 0x0Z,
    //X-->Red, Y-->Green, Z-->Blue
    //Background Color
    //Foreground Color
    // 2 Color Start

//=======================================================================================//
// palette  0
//=======================================================================================//
    0x00, 0x00,  // 0
    0x55, 0x05,  // 1
    0x55, 0x05,  // 2 	左上/右上
    0xff, 0x0f,  // 3

    0x11, 0x01,  // 4  	左下/右下
    0x11, 0x01,  // 5
    0x00, 0x00,  // 0xcc, 0x0c,  // 6  //For Center Text
    0x58, 0x0d,  // 7

    0x55, 0x05,  // 4  -Gray 0x00, 0x00, // 4
    0xFF, 0x00,  // 5 -Yellow 0x00, 0x00, // 5
    0x11, 0x01,  // 0x00, 0x00,  // 10 //For Information Bar At Main Menu
    0x58, 0x0d,//0x37, 0x0f,  //0xCC, 0x0C,  // 11

    0x00, 0x00,  //0xCC, 0x0C,  // 12  //Select Item
    0xff, 0x0f,  // 13
    0x00, 0x00,  // 0xcc, 0x0c,  // 14  //Exec item
    0x0F, 0x00,  // 15

//=======================================================================================//
// palette  1
//=======================================================================================//
    0x00, 0x00,  // 16 	mainmenu icon unselected
    0x00, 0x00,  // 17
    0x00, 0x00,  // 18   mainmenu icon selected
    0x55, 0x05,  // 19

    0x00, 0x00,  // 20
    0xaa, 0x0a,  // 21
    0x55, 0x05,  // 22
    0x11, 0x01,  // 23

    //=======================================================================================//
    // palette  2
    //=======================================================================================//
    0x11, 0x01,  // 24
    0x00, 0x00,  // 25
    0x00, 0x00,  // 26
    0x66, 0x06,  // 27

    0x58, 0x0d,  // 13
    0x00, 0x00,  // 12
    0x00, 0x00,  // 12
    0x00, 0x00,  // 12

    //=======================================================================================//
    // palette  3
    //=======================================================================================//
#if 0
    0xff, 0x0f,  //16
    0x00, 0x00,
    0x11, 0x01, //17
    0x22, 0x02,

    0xff, 0x0f, //18
    0x33, 0x03,
    0x44, 0x04, //19
    0x55, 0x05,
#else
//AOC
    0xff, 0x0f,  //16
    0x22, 0x02,
    0x22, 0x02,
    0xff, 0x0f,
//Evision
    0x22, 0x02, //18
    0xfb, 0x01,


#endif
};

BYTE code tOSDColorPalette256[] =
{
    //0xXY, 0x0Z,
    //X-->Red, Y-->Green, Z-->Blue
    //Background Color
    //Foreground Color
    // 2 Color Start

//=======================================================================================//
// palette  0
//=======================================================================================//
    0x00, 0x00,  // 0
    0x55, 0x05,  // 1
    0x55, 0x05,  // 2 	左上/右上
    0xff, 0x0f,  // 3

    0x11, 0x01,  // 4  	左下/右下
    0x11, 0x01,  // 5
    0x00, 0x00,  // 0xcc, 0x0c,  // 6  //For Center Text
    0x39, 0x0d,//0x58, 0x0d,  // 7

    0x55, 0x05,  // 8  -Gray 0x00, 0x00, // 4
    0xFF, 0x00,  // 9 -Yellow 0x00, 0x00, // 5
    0x11, 0x01,  // 10 0x00, 0x00,  // 10 //For Information Bar At Main Menu
    0x58, 0x0d, // 11 0x37, 0x0f,  //0xCC, 0x0C,  // 11

    0x00, 0x00,  //12 0xCC, 0x0C,  // 12  //Select Item
    0xff, 0x0f,  // 13
    0x00, 0x00,  // 0xcc, 0x0c,  // 14  //Exec item
    0x0F, 0x00,  // 15


//=======================================================================================//
// palette  1
//=======================================================================================//
// for 2 color use
    0x00, 0x00,  // 16 	mainmenu icon unselected
    0x00, 0x00,  // 17
    0x00, 0x00,  // 18   mainmenu icon selected
    0x55, 0x05,  // 19

    0x00, 0x00,  // 20
    0xaa, 0x0a,  // 21
    0x55, 0x05,  // 22
    0x00, 0x00, //0x11, 0x01,  // 23

    0x11, 0x01,  // 24
    0x00, 0x00,  // 25
    0x00, 0x00,  // 26
    0x66, 0x06,  // 27

    0x00, 0x00,  // 28
    0xff, 0x0f,  // 29
    0x00, 0x00,  // 30
    0xff, 0x0f,  //0x77, 0x08,  // 31

//=======================================================================================//
// palette  2
    // CP_Color_1
//=======================================================================================//
    // ImageSetUp 8 color
    0x00, 0x00,  // 32
    0x3A, 0x0D,  // 33
    0x8d, 0x0e,  // 34
    0xff, 0x0f,  // 35

    0xD5, 0x00,  // 36
    0xfC, 0x02,  // 37
    0xff, 0x0f,  // 38
    0x00, 0x00,  // 39

    //
    0x55, 0x05,  // 40
    0x3A, 0x0D,  // 41
    0x8d, 0x0e,  // 42
    0xff, 0x0f,  // 43

    0xD5, 0x00,   // 44
    0xfC, 0x02,    // 45
    0xff, 0x0f,  // 46
    0x00, 0x00,  // 47

//=======================================================================================//
// palette  3
// CP_Color_2
//=======================================================================================//
    // ColorTemp 8 color
    0x00, 0x00,  // 0 // 48
    0xc2, 0x02,  // 1 // 49
    0xea, 0x0a,  // 3 // 50
    0x8b, 0x04,  // 2 // 51

    0x3A, 0x0D,  // 4 // 52
    0xce, 0x0a,  // 1 // 53
    0xab, 0x0e,  // 3 // 53
    0x00, 0x00,  // 2 // 54

    0x55, 0x05,  // 55
    0xc2, 0x02,  // 56
    0xea, 0x0a,  // 57
    0x8b, 0x04,  // 58

    0x3A, 0x0D,  // 59
    0xce, 0x0a,  // 60
    0xab, 0x0e,  // 61
    0x00, 0x00,  // 62

//=======================================================================================//
// palette  4
// CP_Color_3
//=======================================================================================//
    // ColorBoost for 8 color
    0x00, 0x00,  // 0 // 63
    0xcc, 0x0c,  //  1 // 64
    0xee, 0x0d,  // 2 // 65
    0x29, 0x0e,  // 3 // 66

    0xe2, 0x08,  // 4 // 67
    0xe8, 0x03,  // 5 // 68
    0xfe, 0x03,  // 6 // 69
    0x00, 0x00,  // 7 // 70

    // selected
    0x55, 0x05,  // 0 // 71
    0xcc, 0x0c,  //  1 // 72
    0xee, 0x0d,  // 2 // 73
    0x29, 0x0e,  // 3 // 74

    0xe2, 0x08,  // 4 // 75
    0xe8, 0x03,  // 5 // 76
    0xfe, 0x03,  // 6 // 77
    0x00, 0x00,  // 7 // 78

//=======================================================================================//
// palette  5
// CP_Color_4
//=======================================================================================//
    // picture for 8 color
    0x00, 0x00,  // 0 // 79
    0x8b, 0x02,   // 1 // 80
    0xbd, 0x07, // 2 // 81
    0x9d, 0x05,  // 3 // 82

    0xf6, 0x00,  //0xff, 0x03,  // 4 // 83
    0x00, 0x00,  // 84
    0x00, 0x00,   // 85
    0x00, 0x00,  // 86

    // selected
    0x55, 0x05,  // 0 // 87
    0x8b, 0x02,   // 1 // 88
    0xbd, 0x07, // 2 // 89
    0x9d, 0x05,  // 3 // 90

    0xf6, 0x00, //0xff, 0x03,  // 4 // 91
    0x00, 0x00,   // 92
    0x00, 0x00,   // 93
    0x00, 0x00,  // 94

//=======================================================================================//
// palette  6
// CP_Color_5
//=======================================================================================//
    // reset for 8 color
    0x00, 0x00,  // 0 // 95
    0xc3, 0x02,   // 1 // 96
    0xe7, 0x06,  // 2 // 97
    0xfd, 0x0d, // 3 // 98

    0x38, 0x0a,  // 99
    0x39, 0x0d,  // 100
    0x9d, 0x0e,  // 101
    0x00, 0x00,  // 102

    0x55, 0x05,  // 0 // 103
    0xc3, 0x02,   // 1 // 104
    0xe7, 0x06,  // 2 // 105
    0xfd, 0x0d, // 3 // 106

    0x38, 0x0a,  // 107
    0x39, 0x0d,  // 108
    0x9d, 0x0e,  // 109
    0x00, 0x00,  // 110

//=======================================================================================//
// palette  7
// CP_Color_6
//=======================================================================================//
    // exit for 8 color
    0x00, 0x00,  // 111
    0x77, 0x07,  // 112
    0xd9, 0x0b,  // 113
    0xd2, 0x07, // 114

    0x43, 0x03,  // 115
    0xaa, 0x0a,  // 116
    0xcc, 0x0c, // 117
    0x00, 0x00,  // 118

    0x55, 0x05,  // 119
    0x77, 0x07,  // 120
    0xd9, 0x0b,  // 121
    0xd2, 0x07, // 122

    0x43, 0x03,  // 123
    0xaa, 0x0a,  // 124
    0xcc, 0x0c, // 125
    0x00, 0x00,  // 126

//=======================================================================================//
// palette  8
// CP_Color_7
//=======================================================================================//
    // Luminance
    0x00, 0x00,  // 127
    0xff, 0x00,  // 128
    0xff, 0x0f,  // 129
    0x00, 0x00,  // 130

    0x55, 0x05,  // 131
    0xff, 0x00,  // 132
    0xff, 0x0f, // 133
    0x00, 0x00,   // 134

    // ImageSetUp
    0x00, 0x00,  // 135
    0x3A, 0x0D, // 0x38, 0x0a,  // 136
    0xD5, 0x00,  // 0xd8, 0x03,  // 137
    0xfC, 0x02,   // 0xfc, 0x03,  // 138

    0x55, 0x05,  // 139
    0x3A, 0x0D, // 0x38, 0x0a,  // 140
    0xD5, 0x00, // 0xd8, 0x03,  // 141
    0xfC, 0x02,  // 0xfc, 0x03,  // 142

//=======================================================================================//
// palette  9
// CP_Color_8
//=======================================================================================//
    // colortemp for 4 color
    0x00, 0x00,  // 143
    0x3A, 0x0D,   // 144
    0x8b, 0x04, // 145
    0x00, 0x00,  // 146

    0x55, 0x05,  // 147
    0x3A, 0x0D ,  // 148
    0x8b, 0x04, // 149
    0x00, 0x00,  // 150

    //ColorTemp for 4 color
    0x00, 0x00,  // 151
    0x8b, 0x04,  // 152
    0xce, 0x0a,  // 153
    0xc2, 0x02,  // 154

    0x55, 0x05,  // 155
    0x8b, 0x04,  // 156
    0xce, 0x0a,  // 157
    0xc2, 0x02,  // 158

//=======================================================================================//
// palette  10
// CP_Color_9
//=======================================================================================//
    // ColorTemp for 4 color
    0x00, 0x00,  // 159
        0x3A, 0x0D,   // 160
    0xc2, 0x02,  // 161
    0xab, 0x0e,  // 162

    0x55, 0x05,  // 163
        0x3A, 0x0D,   // 164
    0xc2, 0x02,  // 165
    0xab, 0x0e,  // 166

    // ColorBoost for 4 color
    0x00, 0x00,  // 0 // 167
    0xcc, 0x0c,  //  1 // 168
    0xe2, 0x08,  // 2 // 169
    0x29, 0x0e,  // 3 // 170

    0x55, 0x05,  // 0 // 171
    0xcc, 0x0c,  //  1 // 172
    0xe2, 0x08,  // 2 // 173
    0x29, 0x0e,  // 3 // 174

//=======================================================================================//
// palette  11
// CP_Color_10
//=======================================================================================//
	// picture for 4 color
    0x00, 0x00,  // 0 // 175
    0x8b, 0x02,   // 1 // 176
    0xf6, 0x00,//0xff, 0x03, // 2 // 177
    0xbd, 0x07,  // 3 // 178

    0x55, 0x05,  // 179
    0x8b, 0x02,   // 1 // 180
    0xf6, 0x00,//0xff, 0x03, // 2 // 181
    0xbd, 0x07,  // 3 // 182

	// picture for 4 color
    0x00, 0x00,  // 0 // 183
    0x8b, 0x02, // 1 // 184
    0x00, 0x00,   // 2 // 185
    0x9d, 0x05,   // 186

    0x55, 0x05,  // 0 // 187
    0x8b, 0x02, // // 1 // 188
    0x00, 0x00,   // 2 // 189
    0x9d, 0x05,  // 190


//=======================================================================================//
// palette  12
// CP_Color_11
//=======================================================================================//
    // exit for 4 color for 1-3/2-5/3-4/3-3
    0x00, 0x00,  // 0 // 191
    0x77, 0x07,  // 1 // 192
    0x43, 0x03,   // 2 // 193
    0xaa, 0x0a, // 3 // 194

    0x55, 0x05, // 195
    0x77, 0x07,  // 1 // 196
    0x43, 0x03,   // 2 // 197
    0xaa, 0x0a, // 3 // 198

    // for extra  4 color
    0x00, 0x00,  // 0 // 199
    0xee, 0x0e,  // 1 // 200
    0x87, 0x07,  // 201
    0xc4, 0x04,  // 3 // 202

    0x55, 0x05,  // 4 // 203
    0xee, 0x0e,  // 1 // 204
    0x87, 0x07,  //
    0xc4, 0x04,  // 3 // 206

//=======================================================================================//
// palette  13
// CP_Color_12
//=======================================================================================//
    // for extra  4 color 3-3
    0x00, 0x00,  // 0
    0xee, 0x0e,  // 1 // 208
    0x87, 0x07,  //
    0x44, 0x04,  // 3 // 210

    0x55, 0x05,  // 4
    0xee, 0x0e,  // 1 // 212
    0x87, 0x07,  //
    0x44, 0x04,  // 3 // 214

	// for hot key: game, internet, vol, standard, sports
    0x00, 0x00,  //
    0x09, 0x0D,  // 0x08, 0x0d,  // 216
    0x04, 0x07,  // 0x04, 0x08,  //
    0xFF, 0x0F,  // 0xac, 0x0c,  // 218

    0x94, 0x03,  //
    0x7b, 0x06,  // 220
    0x00, 0x00,  //
    0x38, 0x0a,  // 222
//=======================================================================================//
// palette  14
    // CP_Color_13
//=======================================================================================//
	// for hot key: text, movie
    0x00, 0x00,  // 
    0x4B, 0x0f,  //  // (65, 188, 224)=4BD (155, 195, 204)=9BC // 224
    0x3A, 0x0D,  //  	// (44, 157, 188)=39B (23, 135, 204)=18C
    0xEE, 0x0E,  //  	// (198, 207, 235)=CEE // 226
	// not used
    0x00, 0x00,  //
    0x9d, 0x0e,  //  <== can change this color for TEXT // 228
    0x3A, 0x0D,  //  <== this color is the "T" word
    0xEE, 0x0E,  //  (198, 207, 235)=CEE // 230


    // keep color , picture for 4 color
    0x00, 0x00,  // 0
    0x8b, 0x02, // 1 // 232
    0xbd, 0x07,  // 2
    0x9d, 0x05,  // 3 // 234

    0xf6, 0x00,//0xff, 0x03, // 0
    0xf6, 0x00,  // 1 // 236
    0xbd, 0x07,  // 2
    0x00, 0x00,  // 3 // 240

//=======================================================================================//
// palette  15
// CP_Color_14
//=======================================================================================//
    //keep color , ImageSetUp  2-3/2-4
    0xD5, 0x00,  // 0xd8, 0x03,  //
    0x39, 0x0c,  // 0x38, 0x0a,  // 242
    0x8c, 0x0d,  // 0x39, 0x0d,  //
    0xfC, 0x02,   // 0xfc, 0x03,  // 244

    //keep color , for iCare icon  use
    0x00, 0x00,//  
    0xfc, 0x00,// 
    0x4b, 0x0f,//  
    0x00, 0x00,//  

    //keep color , exit for 2-3
    0xd2, 0x07,  //
    0x77, 0x07,  // 250
    0xd9, 0x0b,  //
    0x43, 0x03,//0xd2, 0x07, // 252

    //keep color ,  exit for 2-4
    0x43, 0x03,  // 0
    0x77, 0x07,  // 1 254
    0xcc, 0x0c,  // 2
    0xaa, 0x0a,  // 3
};


BYTE code tAutoColorPalette256[] =
{
    0x00, 0x00,
    0x09, 0x0E,
    0x4B, 0x0F,
    0x9D, 0x0F,

    0xDE, 0x0F,
    //0x00, 0x00,//no use
   // 0x00, 0x00,//no use
   // 0x00, 0x00,//no use  
};

BYTE code tDCROffColorPalette256[] =
{
    0xd1, 0x01, 
};

#if HotExpansionAdjust
BYTE code tExpansionColorPalette256[] =
{
    0x00, 0x00,
	0xff, 0x0f,
	0x09, 0x0E,
	0xff, 0xff,

};
#endif
BYTE code tOriginalColorPalette256[] =
{
    0x4B, 0x0f,  
};
#endif
#if 0
    BYTE code ASCII2FONT[256] =  /* OSD character table */
    {
         /*           0	      1        2	      3	  4        5        6        7	 8        9       A         B	       C	   D        E        F   */
         /*00H*/0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //                     " "
         /*10H*/0x19, 0x02, 0x27, 0x1c, 0x27, 0x28, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //                     "-"     " . "
         /*20H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*30H*/0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //             0        1        2       3        4        5        6        7        8       9
         /*40H*/0x00, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b,
        //                      A        B        C       D        E        F        G       H        I        J        K        L        M       N        O
         /*50H*/0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00,
        //             P        Q       R        S       T        U        V       W       X        Y       Z
         /*60H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //                      a        b        c        d        e       f         g        h        i         j        k        l         m       n        o
         /*70H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //            p       q         r        s        t         u       v        w       x        y        z
         /*80H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*90H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*A0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*B0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*C0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*D0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*E0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
         /*F0H*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        //
    };
#endif
#if 1//OSD_2008 ICON font

#if DisplayEnergyStar
//=================================================
WORD code tEnergyStar2ColorFont[]=
{
  // 0x000(0) : EnergyStar_01  [0x000(0)]
  0xA000, 0x1003, 0x100E, 0x1018, 0x1070, 0x10C0, 0x1180, 0x1300, 0x1600,
  // 0x001(1) : EnergyStar_02  [0x009(9)]
  0x6000, 0x1007, 0x107F, 0x13F8, 0x1F00, 0x1800, 0x7000,
  // 0x002(2) : EnergyStar_03  [0x010(16)]
  0x6000, 0x1E00, 0x1FE0, 0x11FC, 0x100F, 0x1001, 0x6000, 0x1001,
  // 0x003(3) : EnergyStar_04  [0x018(24)]
  0xA000, 0x1C00, 0x1700, 0x1180, 0x10E0, 0x1430, 0x1E18, 0x1E0C, 0x1B06,
  // 0x004(4) : EnergyStar_05  [0x021(33)]
  0x1C00, 0x2800, 0x1000, 0x101C, 0x1024, 0x104A, 0x1053, 0x10A6, 0x10CE, 0x1F14, 0x10E0, 0x6000,
  // 0x005(5) : EnergyStar_06  [0x02D(45)]
  0x5000, 0x1001, 0x1995, 0x1ABF, 0x1B53, 0x1E91, 0x1003, 0x1005, 0x100A, 0x100C, 0x4000,
  // 0x006(6) : EnergyStar_07  [0x038(56)]
  0x1001, 0x1003, 0x107F, 0x10FC, 0x1C00, 0x14A3, 0x152C, 0x1F70, 0x15E6, 0x18C6, 0x114C, 0x128D, 0x129F, 0x151C, 0x1718, 0x3000,
  // 0x007(7) : EnergyStar_08  [0x048(72)]
  0x1B03, 0x1181, 0x11FC, 0x107E, 0x1E0C, 0x1018, 0x1030, 0x1060, 0x20C0, 0x1E60, 0x1F60, 0x11F0, 0x10F0, 0x1030, 0x3000,
  // 0x008(8) : EnergyStar_09  [0x057(87)]
  0x3000, 0x1FFF, 0x2000, 0x174B, 0x246A, 0x177B, 0x245A, 0x174B, 0x5000,
  // 0x009(9) : EnergyStar_10  [0x060(96)]
  0x3000, 0x1FFF, 0x2000, 0x1BCE, 0x1252, 0x1250, 0x1B96, 0x2252, 0x1A4E, 0x5000,
  // 0x00A(10) : EnergyStar_11  [0x06A(106)]
  0x3000, 0x1FFF, 0x2000, 0x1A33, 0x1A49, 0x1A41, 0x1E31, 0x1409, 0x1449, 0x1431, 0x5000,
  // 0x00B(11) : EnergyStar_12  [0x075(117)]
  0x3000, 0x1FFF, 0x2000, 0x1B3C, 0x1324, 0x14A4, 0x14B8, 0x17A4, 0x24A4, 0x5000,
  // Total  [0x07F(254)]
  // Orginial Total:  12 fonts ,  Size:(324)]
  0x0000

};
#endif
WORD code tStandardEco2ColorFont[]=
{
  // 0x000(0) : standard1_1_1  [0x000(0)]
  0x1000, 0x30FF, 0xE0E0,
  // 0x001(1) : standard1_1_3  [0x003(3)]
  0x1000, 0x3FFF, 0xE000,
  // 0x002(2) : standard1_1_4  [0x006(6)]
  0x1000, 0x3FFF, 0x9000, 0x1060, 0x10E0, 0x11E0, 0x13E0, 0x17E0,
  // 0x003(3) : standard1_1_5  [0x00E(14)]
  0x1000, 0x3FF0, 0xE070,
  // 0x004(4) : standard1_2_1  [0x011(17)]
  0xF0E0, 0x30E0,
  // 0x005(5) : standard1_2_2  [0x013(19)]
  0x3000, 0x10C0, 0x10E0, 0x10F0, 0x10F8, 0x10FC, 0x10FE, 0x60FF, 0x107F, 0x103F, 0x101F,
  // 0x006(6) : standard1_2_3  [0x01E(30)]
  0x1000, 0x1001, 0x1003, 0x1007, 0x100F, 0x101F, 0x103F, 0x107F, 0x10FF, 0x11FF, 0x1BFF, 0x3FFF, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FF0,
  // 0x007(7) : standard1_2_4  [0x02E(46)]
  0x7FE0, 0x1FC0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x5000,
  // 0x008(8) : standard1_2_5  [0x036(54)]
  0xF070, 0x3070,
  // 0x009(9) : standard1_3_1  [0x038(56)]
  0xE0E0, 0x30FF, 0x1000,
  // 0x00A(10) : standard1_3_2  [0x03B(59)]
  0x100F, 0x1007, 0x1003, 0x1001, 0xA000, 0x3FFF, 0x1000,
  // 0x00B(11) : standard1_3_3  [0x042(66)]
  0x1FE0, 0x1FC0, 0x1F80, 0x1F00, 0x1E00, 0x9000, 0x3FFF, 0x1000,
  // 0x00C(12) : standard1_3_4  [0x04A(74)]
  0xE000, 0x3FFF, 0x1000,
  // 0x00D(13) : standard1_3_5  [0x04D(77)]
  0xE070, 0x3FF0, 0x1000,
  // Total  [0x050(160)]
  // Orginial Total:  14 fonts ,  Size:(378)]
  0x0000

};

WORD code tSportEco2ColorFont[]=
{
  // 0x000(0) :   [0x000(0)]
  0x5000, 0x1001, 0x1007, 0x100F, 0x103F, 0x107F, 0x20FF, 0x10FE, 0x10FC, 0x1078, 0x3000,
  // 0x001(1) :   [0x00B(11)]
  0x3000, 0x11E0, 0x17FC, 0x1FFE, 0x3FFF, 0x1F3F, 0x1C0F, 0x1807, 0x1003, 0x1007, 0x100F, 0x101F, 0x107F, 0x10FF,
  // 0x002(2) :   [0x019(25)]
  0x6000, 0x1800, 0x1E00, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF9, 0x1FFD, 0x3FFF, 0x2FFE,
  // 0x003(3) :   [0x023(35)]
  0x7000, 0x13E0, 0x17F0, 0x1FF8, 0x2FFC, 0x3FFE, 0x2FFC, 0x17F8,
  // 0x004(4) :   [0x02B(43)]
  0x2000, 0x1001, 0x1003, 0x2007, 0x100F, 0x201F, 0x203F, 0x207F, 0x20FF, 0x11FF, 0x13FF, 0x17FF,
  // 0x005(5) :   [0x037(55)]
  0x13FF, 0x6FFF, 0x1FFC, 0x1FF8, 0x1FF0, 0x1FE0, 0x2FF0, 0x1FF8, 0x2FFC, 0x2FFE,
  // 0x006(6) :   [0x041(65)]
  0x4FFE, 0x1FFF, 0x1CFF, 0x607F, 0x103F, 0x101F, 0x4000,
  // 0x007(7) :   [0x048(72)]
  0x11E0, 0x6000, 0x1FFE, 0x5FFF, 0x1FFE, 0x4000,
  // 0x008(8) :   [0x04E(78)]
  0x1000, 0x1003, 0x100F, 0x101F, 0x107F, 0x11FF, 0x17FF, 0x1FFF, 0x1FFE, 0x1FF8, 0x1FE0, 0x1F80, 0x1F00, 0x1600, 0x4000,
  // 0x009(9) :   [0x05D(93)]
  0x8FFF, 0x17FE, 0x17F8, 0x13E0, 0x10C0, 0x6000,
  // 0x00A(10) :   [0x063(99)]
  0x2FFC, 0x1FF0, 0x1FE0, 0x1F80, 0x1F00, 0x1C00, 0xB000,
  // Total  [0x06A(212)]
  // Orginial Total:  11 fonts ,  Size:(297)]

  0x0000


};


WORD code tTextEco2ColorFont[]=
{
  // 0x000(0) : text_2_5  [0x000(0)]
  0xF800, 0x3800,
  // 0x001(1) : text_3_1  [0x002(2)]
  0xF003, 0x2003, 0x1000,
  // 0x002(2) : text_3_4  [0x005(5)]
  0xFFFF, 0x2FFF, 0x1000,
  // 0x003(3) : text_3_5  [0x008(8)]
  0xF800, 0x1800, 0x2000,
  // Total  [0x00B(22)]
  // Orginial Total:  4 fonts ,  Size:(108)]
  0x0000
};


#if AudioFunc
WORD code tVol2ColorFont[]=
{
  // 0x000(0) :   [0x000(0)]
  0x6000, 0x1003, 0x1007, 0x100F, 0x101F, 0x103E, 0x107C, 0x10F8, 0x10F0, 0x21E0, 0x23C0,
  // 0x001(1) :   [0x00B(11)]
  0x3000, 0x103F, 0x13FF, 0x2FFF, 0x1F00, 0x1C00, 0x2000, 0x101F, 0x107F, 0x11FF, 0x13FC, 0x17C0, 0x1F80, 0x1F00,
  // 0x002(2) :   [0x019(25)]
  0x4000, 0x2800, 0x5000, 0x3C00, 0x4000,
  // 0x003(3) :   [0x01E(30)]
  0xD000, 0x10C0, 0x11E0, 0x11F0, 0x13F0, 0x13F8,
  // 0x004(4) :   [0x024(36)]
  0x1381, 0x2783, 0x1703, 0x6707, 0x2783, 0x1383, 0x1380, 0x4000,
  // 0x005(5) :   [0x02C(44)]
  0x1E00, 0x1C03, 0x1C07, 0x180F, 0x181F, 0x183E, 0x183C, 0x5838, 0x6000,
  // 0x006(6) :   [0x035(53)]
  0x1000, 0x2F00, 0x1F01, 0x1001, 0x2003, 0x1007, 0x200F, 0x201F, 0x203F, 0x207F, 0x10FF, 0x11FF,
  // 0x007(7) :   [0x041(65)]
  0x17F8, 0x17FC, 0x1FFC, 0x2FFE, 0xDFFF,
  // 0x008(8) :   [0x046(70)]
  0x6000, 0x2800, 0x2C00, 0x2E00, 0x2F00, 0x2F80, 0x1FC0, 0x1FE0,
  // 0x009(9) :   [0x04E(78)]
  0x6000, 0x2001, 0x2003, 0x8000,
  // 0x00A(10) :   [0x052(82)]
  0x11FF, 0x23FF, 0x17FF, 0x6FFF, 0x8000,
  // 0x00B(11) :   [0x057(87)]
  0xAFFF, 0x8000,
  // 0x00C(12) :   [0x059(89)]
  0x1FF8, 0x1FFC, 0x1FFE, 0x1FFC, 0x2FF8, 0x2FF0, 0x2FE0, 0x17C0, 0x1380, 0x6000,
  // Total  [0x063(198)]
  // Orginial Total:  13 fonts ,  Size:(351)]
  0x0000

};
#endif

WORD code tAuto2ColorFont[]=
{
  // 0x000(0) : auto config_2_1  [0x000(0)]
  0x1007, 0x100F, 0x100E, 0x101E, 0x201C, 0x203C, 0x7038, 0x103C, 0x201C, 
  // 0x001(1) : auto config_2_2  [0x009(9)]
  0x4000, 0x101F, 0x107F, 0x10FF, 0x10F0, 0x11E0, 0x51C0, 0x11E0, 0x10F0, 0x10FF, 0x107F, 
  // 0x002(2) : auto config_2_3  [0x014(20)]
  0x4000, 0x181C, 0x1E1C, 0x2F1C, 0x179C, 0x139D, 0x339F, 0x139C, 0x179C, 0x2F1C, 0x1E1C, 
  // 0x003(3) : auto config_2_4  [0x01F(31)]
  0x4000, 0x11C0, 0x13C0, 0x1780, 0x1F00, 0x1E00, 0x2C00, 0x1E00, 0x1F00, 0x1700, 0x1380, 0x11C0, 0x11E0, 0x10E0, 
  // 0x004(4) : auto config_2_5  [0x02D(45)]
  0x1E00, 0x1F00, 0x1700, 0x1780, 0x3380, 0x13C0, 0x71C0, 0x3380, 
  // 0x005(5) : auto config_3_1  [0x035(53)]
  0x101C, 0x101E, 0x100E, 0x100F, 0x2007, 0x1003, 0x2001, 0x9000, 
  // 0x006(6) : auto config_3_2  [0x03D(61)]
  0x101F, 0x4000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x17C0, 0x13F0, 0x10FC, 0x107F, 0x101F, 0x1007, 0x2000, 
  // 0x007(7) : auto config_3_3  [0x04B(75)]
  0x1800, 0xC000, 0x1001, 0x3FFF, 0x1000, 
  // 0x008(8) : auto config_3_4  [0x050(80)]
  0x5000, 0x1001, 0x1003, 0x1007, 0x100F, 0x101F, 0x103E, 0x10F8, 0x13F0, 0x1FE0, 0x1F80, 0x1E00, 0x2000, 
  // 0x009(9) : auto config_3_5  [0x05D(93)]
  0x1380, 0x2700, 0x1F00, 0x2E00, 0x1C00, 0x1800, 0xA000, 
  // 0x00A(10) : auto config_1_1  [0x064(100)]
  0x9000, 0x1003, 0x1001, 0x2000, 0x2001, 0x2003, 0x1007, 
  // 0x00B(11) : auto config_1_2  [0x06B(107)]
  0x7000, 0x1078, 0x17F8, 0x2FF8, 0x4FF0, 0x1CE0, 0x1860, 0x1820, 
  // 0x00C(12) : auto config_1_5  [0x073(115)]
  0xE000, 0x1800, 0x2C00, 0x1E00, 
 #if AutoProcess
  //'%' zjb 20071218
  // 0x00D(13) : persent  [0x077(119)]
  0x4000, 0x1088, 0x1148, 0x2150, 0x10A0, 0x1028, 0x2054, 0x1094, 0x1088, 0x4000, 
  #endif
  // Total  [0x077(238)]
  // Orginial Total:  13 fonts ,  Size:(351)]
  0x0000

};
#if 0
WORD code tDCR2ColorFont[]=
{
  // 0x000(0) : DCR_01_2_2  [0x000(0)]
  0x10FF, 0x103F, 0x181F, 0x1E1F, 0x2F0E, 0x4F8C, 0x2F0E, 0x1E1F, 0x181F, 0x103F, 0x10FF, 0x11FF, 0x1FFF,
  // 0x001(1) : DCR_01_2_3  [0x00D(13)]
  0x13C0, 0x17C0, 0x1FC0, 0x1F3C, 0x1E3E, 0x6C3F, 0x1E3E, 0x1F3C, 0x1FC0, 0x17C0, 0x13C0, 0x10C1, 0x103F,
  // 0x002(2) : DCR_01_2_4  [0x01A(26)]
  0x17C0, 0x13C0, 0x11C0, 0x21C3, 0x3FC3, 0x3FC0, 0x11C0, 0x11C2, 0x11C3, 0x13C3, 0x17C3, 0x1FC3, 0x1FFF,
  // Total  [0x027(78)]
  // Orginial Total:  3 fonts ,  Size:(81)]
  0x0000

};
#endif


//=================================================
//=================================================
//=================================================

WORD code tOSDLumaIcon2ColorFont[]=
{
    // 0x000(0) : luma_2_1  [0x000(0)]
  0x6000, 0x1001, 0x101F, 0x20FF, 0x101F, 0x1001, 0x6000, 
  // 0x001(1) : luma_2_5  [0x007(7)]
  0x6000, 0x1C00, 0x1F80, 0x2FF0, 0x1F80, 0x7000, 
  // Total  [0x00D(26)]
    // Orginial Total:  2 fonts ,  Size:(54)]
  0x0000

};

WORD code tOSDImageIcon2ColorFont[]=
{
    // 0x000(0) : image_3_2  [0x000(0)]
    0x8FFF, 0x10FF, 0x9000,
    // Total  [0x003(6)]
  // Orginial Total:  1 fonts ,  Size:(27)]
  0x0000

};

WORD code tOSDColortempIcon2ColorFont[]=
{
    // 0x000(0) : colortemp-1_3_1  [0x000(0)]
    0x50FF, 0x207F, 0x203F, 0x101F, 0x100F, 0x1007, 0x1001, 0x5000,
    // 0x001(1) : colortemp-1_3_2  [0x008(8)]
    0xCFFF, 0x1FFE, 0x17F0, 0x4000,
    // 0x002(2) : colortemp-1_3_4  [0x00C(12)]
    0xEFFF, 0x13FC, 0x3000,
    // 0x003(3) : colortemp-1_3_5  [0x00F(15)]
    0x5FF0, 0x2FE0, 0x2FC0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x4000,
    // Total  [0x018(48)]
  // Orginial Total:  4 fonts ,  Size:(108)]
  0x0000

};


WORD code tOSDPictureIcon2ColorFont[]=
{
    // 0x000(0) : picture_3_5  [0x000(0)]
    0xBFF8, 0x1FF0, 0x6000,
    // Total  [0x003(6)]
  // Orginial Total:  1 fonts ,  Size:(27)]
  0x0000

};

WORD code tOSDOsdIcon2ColorFont[]=
{
    // 0x000(0) : osdsetup_3_1  [0x000(0)]
    0x1007, 0x1003, 0x1001, 0xF000,
    // 0x001(1) : osdsetup_3_2  [0x004(4)]
    0x4FFF, 0x17FF, 0x13FF, 0x10FF, 0x107F, 0x101F, 0x1001, 0x8000,
    // Total  [0x00C(24)]
    // Orginial Total:  2 fonts ,  Size:(54)]
  0x0000

};


WORD code tOSDExtraIcon2ColorFont[]=
{
    // 0x000(0) : osdsetup_3_1  [0x000(0)]
    0x1007, 0x1003, 0x1001, 0xF000,
    // 0x001(1) : osdsetup_3_2  [0x004(4)]
    0x4FFF, 0x17FF, 0x13FF, 0x10FF, 0x107F, 0x101F, 0x1001, 0x8000,
    // Total  [0x00C(24)]
    // Orginial Total:  2 fonts ,  Size:(54)]
  0x0000
};

WORD code tOSDResetIcon2ColorFont[]=
{
    // 0x000(0) : reset_1_5  [0x000(0)]
    0xA000, 0x1800, 0x1D80, 0x6F80,
    // Total  [0x004(8)]
  // Orginial Total:  1 fonts ,  Size:(27)]
  0x0000
};

WORD code tOSDExitIcon2ColorFont[]=
{
    // 0x000(0) : exit2_3_5  [0x000(0)]
    0x9FF8, 0x1FF0, 0x1FC0, 0x1F00, 0x1C00, 0x5000,
    // Total  [0x006(12)]
    // Orginial Total:  1 fonts ,  Size:(27)]
    0x0000
};


//=================================================
//=================================================
//=================================================
//=================================================
//=================================================

BYTE code tTextEco4ColorFont[]=
{
  0x10, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x03, 0x00, 0x01, 0xF0, 0x03, 0x00, 0x03, 0x10, 0x00, 0x1F, 0xFF, 0x00, 0x00,
  0xDF, 0xFF, 0x1F, 0xFF, 0x0F, 0xE0, 0x2F, 0xE0, 0x0F, 0xDF, 0x10, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xDF, 0xFF, 0x1F, 0xFF,
  0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x10, 0x00, 0x1E, 0x00, 0x01, 0x80, 0x1E, 0x00, 0x0F, 0xC0, 0x1E, 0x00, 0x0F, 0xE0,
  0x1E, 0x00, 0x0F, 0xF0, 0x1E, 0x00, 0x0F, 0xF8, 0x1E, 0x00, 0x0F, 0xFC, 0x1E, 0x00, 0x0F, 0xFE, 0x2E, 0x00, 0x0F, 0xFF,
  0x1F, 0x00, 0x0E, 0xFF, 0x1F, 0xFF, 0x0E, 0x00, 0x1F, 0xFF, 0x0F, 0xE0, 0x1F, 0xFF, 0x0F, 0xC0, 0x1F, 0xFF, 0x0F, 0x00,
  0x1F, 0xFF, 0x00, 0x00, 0x20, 0xFF, 0x0F, 0x00, 0x90, 0x00, 0x20, 0x00, 0x08, 0x00, 0x78, 0x00, 0x00, 0x00, 0xF0, 0x03,
  0x30, 0x03, 0x00, 0x03, 0x1F, 0xE3, 0x0F, 0xDC, 0x6F, 0xE7, 0x0F, 0xDB, 0x1F, 0xFF, 0x0F, 0xE7, 0x1F, 0xFF, 0x1F, 0xFF,
  0x0F, 0xFE, 0x1F, 0xFF, 0x0F, 0xF8, 0x1F, 0xFF, 0x0F, 0xF0, 0x1F, 0xFF, 0x0F, 0xC0, 0x1F, 0xFF, 0x0F, 0x80, 0x1F, 0xFF,
  0x0F, 0x00, 0x1F, 0xFF, 0x0C, 0x00, 0x1F, 0xFF, 0x08, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x1E, 0x0F, 0x01, 0xF0, 0x1E, 0x0F,
  0x0D, 0xFC, 0x1E, 0x0F, 0x0D, 0xF8, 0x5E, 0x0F, 0x0D, 0xF0, 0xAE, 0x0F, 0x01, 0xF0, 0x58, 0xFF, 0x07, 0x00, 0x2C, 0xFF,
  0x03, 0x00, 0xBF, 0xFF, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x10, 0x03, 0x0F, 0xFC, 0x10, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  // Total:  [0x0EE(238)]
  // Orginial Total:  11 fonts ,  Size:(594)]

};

BYTE code tMovieEco4ColorFont[]=
{
  0x90, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x01, 0x00, 0x03, 0x10, 0x03, 0x00, 0x06, 0x10, 0x05, 0x00, 0x06, 0x10, 0x0B,
  0x00, 0x0C, 0x10, 0x0F, 0x00, 0x18, 0x10, 0x17, 0x00, 0x18, 0x10, 0x1F, 0x00, 0x30, 0x10, 0x2F, 0x00, 0x30, 0x20, 0x00,
  0x10, 0x00, 0x00, 0x03, 0x10, 0x06, 0x00, 0x0F, 0x10, 0x33, 0x00, 0x3C, 0x10, 0xCF, 0x00, 0xF0, 0x11, 0x3F, 0x03, 0xC0,
  0x12, 0xFF, 0x07, 0x00, 0x1F, 0xFF, 0x0C, 0x00, 0x1F, 0xFF, 0x08, 0x00, 0x8F, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,
  0x00, 0xF0, 0x1F, 0xFF, 0x17, 0xFE, 0x08, 0x01, 0x5F, 0xFF, 0x00, 0x00, 0x2F, 0xFE, 0x00, 0x01, 0x2F, 0xFC, 0x00, 0x03,
  0x2F, 0xF9, 0x00, 0x07, 0x1F, 0xFD, 0x00, 0x03, 0x1F, 0x0F, 0x00, 0xF0, 0x18, 0x01, 0x07, 0xFE, 0x20, 0x00, 0x10, 0x00,
  0x0C, 0x00, 0x1F, 0x00, 0x1C, 0x80, 0x03, 0xC0, 0x1F, 0x60, 0x00, 0xF0, 0x18, 0x58, 0x07, 0xB8, 0x19, 0xB4, 0x07, 0xCE,
  0x13, 0xDA, 0x0F, 0xE7, 0x13, 0xCD, 0x0F, 0xF3, 0x17, 0x8E, 0x0F, 0xF1, 0x1F, 0x9F, 0x0F, 0xE0, 0x1F, 0x3F, 0x0F, 0xC0,
  0x1E, 0x3F, 0x0F, 0xC0, 0x2E, 0x7F, 0x0F, 0x80, 0x14, 0xFF, 0x0F, 0x00, 0x1C, 0xFF, 0x03, 0x00, 0x90, 0x00, 0x10, 0x00,
  0x08, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x14, 0x00, 0x0C, 0x00, 0x1A, 0x00, 0x06, 0x00, 0x1E, 0x00, 0x03, 0x00, 0x1F, 0x00,
  0x01, 0x00, 0x1E, 0x00, 0x01, 0x80, 0x1F, 0x80, 0x00, 0xC0, 0x1F, 0x00, 0x00, 0xC0, 0x20, 0x3F, 0x00, 0x60, 0x10, 0x5F,
  0x00, 0x60, 0x10, 0x7F, 0x00, 0x40, 0x20, 0x7F, 0x00, 0xC0, 0x10, 0x3F, 0x00, 0xC0, 0x40, 0xBF, 0x00, 0xC0, 0x10, 0x3F,
  0x00, 0xC0, 0x20, 0x7F, 0x00, 0xC0, 0x20, 0x7F, 0x00, 0x40, 0x10, 0x5F, 0x00, 0x60, 0x10, 0x3F, 0x00, 0x60, 0x1F, 0xFF,
  0x00, 0x00, 0x2F, 0xFC, 0x00, 0x03, 0x1F, 0xF8, 0x00, 0x07, 0x1F, 0xF1, 0x00, 0x0F, 0x2F, 0xF3, 0x00, 0x0F, 0x1F, 0xE3,
  0x00, 0x1F, 0x3F, 0xE7, 0x00, 0x1F, 0x3F, 0xF3, 0x00, 0x0F, 0x1F, 0xF9, 0x00, 0x07, 0x1F, 0xF8, 0x00, 0x07, 0x1F, 0xFC,
  0x00, 0x03, 0x1F, 0xFE, 0x00, 0x01, 0x10, 0x00, 0x0F, 0xFF, 0x13, 0xF8, 0x0F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFF, 0x2F, 0xFF,
  0x1F, 0x9F, 0x0F, 0x6F, 0x1F, 0x47, 0x0E, 0xFF, 0x1C, 0xF7, 0x0F, 0xFB, 0x1D, 0xF3, 0x0F, 0xFF, 0x1D, 0xFB, 0x0F, 0xFF,
  0x1C, 0xF3, 0x0F, 0xFF, 0x1F, 0x27, 0x0E, 0xFF, 0x1F, 0x1F, 0x0F, 0xEF, 0x2F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFF, 0x13, 0xFC,
  0x0F, 0xFF, 0x10, 0x60, 0x0F, 0xFF, 0x1F, 0xFF, 0x00, 0x00, 0x23, 0xFF, 0x0C, 0x00, 0x11, 0xFF, 0x0E, 0x00, 0x18, 0xFF,
  0x0F, 0x00, 0x2C, 0xFF, 0x0F, 0x00, 0x4C, 0x7F, 0x0F, 0x80, 0x2C, 0xFF, 0x0F, 0x00, 0x18, 0xFF, 0x0F, 0x00, 0x19, 0xFF,
  0x0E, 0x00, 0x13, 0xFF, 0x0C, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x40, 0x1F, 0xC0,
  0x00, 0x60, 0x1F, 0xA0, 0x00, 0x60, 0x2F, 0xE0, 0x00, 0x20, 0x8F, 0xE0, 0x00, 0x30, 0x2F, 0xE0, 0x00, 0x20, 0x1F, 0xA0,
  0x00, 0x60, 0x1F, 0xC0, 0x00, 0x60, 0x1F, 0xC0, 0x00, 0x40, 0x10, 0x2F, 0x00, 0x30, 0x10, 0x1F, 0x00, 0x30, 0x10, 0x17,
  0x00, 0x18, 0x10, 0x0F, 0x00, 0x18, 0x10, 0x0B, 0x00, 0x0C, 0x10, 0x05, 0x00, 0x0E, 0x10, 0x03, 0x00, 0x06, 0x10, 0x03,
  0x10, 0x01, 0x90, 0x00, 0x00, 0x00, 0x1F, 0xF3, 0x00, 0x0C, 0x1F, 0xF0, 0x00, 0x0F, 0x2F, 0xE7, 0x00, 0x1F, 0x2F, 0xCF,
  0x00, 0x3F, 0x1F, 0x9E, 0x00, 0x7F, 0x1F, 0xBE, 0x00, 0x7F, 0x1F, 0x3C, 0x08, 0xFF, 0x17, 0x3C, 0x0C, 0xFF, 0x16, 0xF9,
  0x07, 0x3E, 0x11, 0x61, 0x03, 0x9E, 0x10, 0xCF, 0x00, 0xF0, 0x10, 0x37, 0x00, 0x78, 0x10, 0x0E, 0x00, 0x1F, 0x10, 0x01,
  0x00, 0x03, 0x20, 0x00, 0x00, 0x00, 0x18, 0x01, 0x07, 0xFE, 0x1F, 0x0F, 0x00, 0xF0, 0x13, 0xFF, 0x0C, 0x00, 0x19, 0xFF,
  0x0E, 0x00, 0x33, 0xFF, 0x0C, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x6F, 0xFF, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x01, 0x1F, 0xDF,
  0x0F, 0xFF, 0x10, 0x00, 0x01, 0xFC, 0x10, 0x00, 0x00, 0x00, 0x8F, 0xFF, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x01, 0x1F, 0xFA,
  0x00, 0x07, 0x1F, 0xF4, 0x00, 0x0E, 0x1F, 0xF8, 0x00, 0x1C, 0x1F, 0xA0, 0x00, 0x70, 0x1C, 0x80, 0x03, 0xC0, 0x17, 0x00,
  0x0F, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1F, 0x40, 0x00, 0xC0, 0x1F, 0x80, 0x00, 0xC0, 0x1E, 0x00,
  0x01, 0x80, 0x1F, 0x00, 0x01, 0x80, 0x1E, 0x00, 0x03, 0x00, 0x1A, 0x00, 0x06, 0x00, 0x14, 0x00, 0x0E, 0x00, 0x18, 0x00,
  0x0C, 0x00, 0x10, 0x00, 0x08, 0x00, 0x90, 0x00, 0x00, 0x00,
  // Total:  [0x29E(670)]
  // Orginial Total:  15 fonts ,  Size:(810)]

};


BYTE code tInternetEco4ColorFont[]=
{
  0xE0, 0x00, 0x10, 0x01, 0x10, 0x01, 0x00, 0x03, 0x10, 0x03, 0x10, 0x07, 0x00, 0x07, 0x60, 0x00, 0x10, 0x03, 0x00, 0x07,
  0x10, 0x0F, 0x00, 0x1F, 0x10, 0x3F, 0x00, 0x7F, 0x10, 0xFF, 0x11, 0xFF, 0x13, 0xFF, 0x17, 0xFF, 0x07, 0xFE, 0x1F, 0xFF,
  0x0F, 0xFC, 0x1F, 0xFF, 0x0F, 0xF8, 0x1F, 0xFF, 0x0F, 0xF0, 0x1F, 0xFF, 0x0F, 0xE0, 0x1F, 0xFF, 0x0F, 0xC1, 0x40, 0x00,
  0x10, 0x01, 0x00, 0x02, 0x11, 0xFF, 0x0F, 0xF8, 0x1F, 0xFF, 0x0F, 0xF0, 0x1F, 0xFF, 0x0F, 0xC1, 0x1F, 0xFF, 0x0F, 0x83,
  0x1F, 0xFF, 0x0E, 0x0F, 0x1F, 0xFF, 0x0C, 0x1E, 0x1F, 0xFF, 0x08, 0x38, 0x1F, 0xFF, 0x00, 0xF0, 0x1F, 0xFF, 0x01, 0xE0,
  0x1F, 0xFF, 0x03, 0xC0, 0x1F, 0xFF, 0x07, 0x00, 0x1F, 0xFF, 0x0E, 0x00, 0x1F, 0x03, 0x0C, 0x84, 0x10, 0x00, 0x10, 0x0F,
  0x00, 0x30, 0x10, 0x7F, 0x01, 0x80, 0x13, 0xF0, 0x04, 0x0C, 0x1F, 0x80, 0x00, 0x60, 0x1E, 0x00, 0x01, 0x00, 0x1C, 0x00,
  0x06, 0x00, 0x1F, 0x00, 0x0E, 0x80, 0x1F, 0xC0, 0x08, 0x20, 0x1F, 0xF0, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x04, 0x1F, 0xFC,
  0x00, 0x02, 0x1F, 0xFE, 0x00, 0x01, 0x5F, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x1F, 0x00, 0x00, 0x80, 0x1F, 0xC0, 0x00, 0x00,
  0x11, 0xC0, 0x02, 0x20, 0x11, 0xE0, 0x00, 0x00, 0x10, 0xE0, 0x01, 0x00, 0x40, 0xE0, 0x00, 0x00, 0x20, 0xC0, 0x01, 0x20,
  0x21, 0xC0, 0x00, 0x00, 0x1B, 0x80, 0x00, 0x40, 0x1B, 0x80, 0x04, 0x00, 0x1F, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00,
  0x10, 0x07, 0x10, 0x07, 0x00, 0x0F, 0x20, 0x0F, 0x20, 0x0F, 0x00, 0x1F, 0x20, 0x1F, 0x20, 0x1F, 0x00, 0x1E, 0x10, 0x1F,
  0x00, 0x1C, 0x10, 0x0F, 0x00, 0x1C, 0x10, 0x0F, 0x00, 0x18, 0x20, 0x0F, 0x00, 0x00, 0x10, 0x0F, 0x00, 0x10, 0x10, 0x1F,
  0x00, 0x00, 0x10, 0x1F, 0x00, 0x20, 0x1F, 0xFF, 0x0F, 0x83, 0x1F, 0xFF, 0x0F, 0x06, 0x1F, 0xFF, 0x0F, 0x0C, 0x1F, 0xFF,
  0x0E, 0x18, 0x1F, 0xFF, 0x0C, 0x00, 0x2F, 0xFF, 0x08, 0x00, 0x5F, 0xFF, 0x00, 0x00, 0x2F, 0xFE, 0x00, 0x01, 0x4F, 0xFF,
  0x00, 0x00, 0x1C, 0x00, 0x0A, 0x01, 0x18, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x07, 0xFF, 0x8F, 0xFF,
  0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x10, 0x00, 0x10, 0x00, 0x08, 0x00, 0x18, 0x00, 0x04, 0x00, 0x1C, 0x00, 0x00, 0x01,
  0x1E, 0x01, 0x01, 0x02, 0x1F, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x08, 0x00,
  0x8F, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x07, 0xFF, 0x17, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x1F, 0xFF,
  0x00, 0x01, 0x1F, 0xFF, 0x00, 0x03, 0x1E, 0x00, 0x01, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x80, 0x6F, 0x80,
  0x00, 0x00, 0x1F, 0x00, 0x00, 0x80, 0x10, 0x00, 0x10, 0x00, 0x0F, 0x00, 0x1F, 0x00, 0x03, 0x00, 0x1F, 0x00, 0x1E, 0x00,
  0x0F, 0x00, 0x1E, 0x00, 0x0E, 0x00, 0x20, 0x3F, 0x00, 0x00, 0x10, 0x3D, 0x00, 0x42, 0x10, 0x3C, 0x00, 0x40, 0x10, 0x7C,
  0x00, 0x00, 0x40, 0x78, 0x00, 0x04, 0x20, 0x78, 0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 0x10, 0x3E, 0x00, 0x40, 0x10, 0x3F,
  0x00, 0x00, 0x10, 0x1F, 0x00, 0x20, 0x10, 0x0F, 0x00, 0x10, 0x10, 0x03, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x4F, 0xFF,
  0x00, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x13, 0xFF, 0x04, 0x00, 0x11, 0xFF, 0x00, 0x00, 0x10, 0xFF, 0x00, 0x00, 0x10, 0x3F,
  0x00, 0x40, 0x10, 0x0F, 0x00, 0x10, 0x10, 0x07, 0x00, 0x00, 0x10, 0x0F, 0x00, 0x10, 0x10, 0x3F, 0x00, 0x40, 0x1F, 0xFC,
  0x00, 0x02, 0x1F, 0xF0, 0x00, 0x08, 0x1F, 0x80, 0x00, 0x60, 0x18, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x8F, 0xFF,
  0x00, 0x00, 0x1F, 0xFF, 0x00, 0x03, 0x1F, 0xFF, 0x00, 0x07, 0x1F, 0xFF, 0x00, 0x0F, 0x1D, 0xFE, 0x02, 0x1F, 0x10, 0x00,
  0x08, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x07, 0x1F, 0xFF, 0x00, 0x1F, 0x1F, 0xFF, 0x00, 0x3F, 0x1F, 0xFF,
  0x00, 0x7F, 0x1F, 0xFE, 0x01, 0xFF, 0x1F, 0xFC, 0x03, 0xFE, 0x1F, 0xF8, 0x07, 0xFC, 0x1F, 0xF0, 0x0F, 0xF8, 0x1F, 0xC0,
  0x0F, 0xE0, 0x1F, 0x80, 0x1C, 0x00, 0x0E, 0x00, 0x70, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x18, 0x00,
  0x10, 0x00, 0x08, 0x00, 0xE0, 0x00, 0x00, 0x00,
  // Total:  [0x274(628)]
  // Orginial Total:  15 fonts ,  Size:(810)]

};

BYTE code tGameEco4ColorFont[]=
{
  0xA0, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x01, 0x00, 0x07, 0x10, 0x07, 0x00, 0x1F, 0x10, 0x1F, 0x00, 0x3F, 0x10, 0x38,
  0x00, 0x7F, 0x10, 0x73, 0x00, 0xEC, 0x10, 0x6F, 0x00, 0xF0, 0x10, 0xEF, 0x01, 0xF0, 0xA0, 0x00, 0x10, 0x00, 0x0F, 0xFF,
  0x3F, 0xFF, 0x1F, 0xFF, 0x07, 0xF3, 0x13, 0xFB, 0x0F, 0xF7, 0x1F, 0xFF, 0x01, 0xFF, 0x1D, 0xFF, 0x03, 0xFF, 0x30, 0x00,
  0x10, 0x00, 0x00, 0x01, 0x10, 0x01, 0x00, 0x0F, 0x10, 0x1F, 0x00, 0x3F, 0x10, 0x3F, 0x00, 0xFF, 0x10, 0xFF, 0x01, 0xFF,
  0x11, 0xFF, 0x03, 0xFF, 0x13, 0xFF, 0x0F, 0xFF, 0x17, 0xFF, 0x0F, 0xFF, 0x1F, 0xFF, 0x0F, 0xCF, 0x1F, 0xDF, 0x0F, 0xEF,
  0x1F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFD, 0x1F, 0xF9, 0x0F, 0xFE, 0x1F, 0xF3, 0x0F, 0xFC, 0x1F, 0xF7, 0x0F, 0xF8, 0x80, 0x00,
  0x10, 0x00, 0x08, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x2E, 0x00, 0x0F, 0x00, 0x1F, 0x00, 0x0F, 0x80,
  0x2F, 0x80, 0x0F, 0xC0, 0x2F, 0xC0, 0x0F, 0xE0, 0x21, 0xEF, 0x03, 0xF0, 0x13, 0xF7, 0x03, 0xE8, 0x13, 0xF8, 0x07, 0xF7,
  0xA3, 0xFF, 0x07, 0xFF, 0x41, 0xFF, 0x03, 0xFF, 0x1D, 0xFF, 0x03, 0xFF, 0x19, 0xF0, 0x07, 0xEF, 0x13, 0xE6, 0x0F, 0xD9,
  0x17, 0xDF, 0x0F, 0xE0, 0x2F, 0xDF, 0x0F, 0xA0, 0x1F, 0xCF, 0x0F, 0xF0, 0x1F, 0xEE, 0x0F, 0xD1, 0x1F, 0xF0, 0x0F, 0xEF,
  0x1F, 0xFF, 0x0F, 0xF1, 0x4F, 0xFF, 0x1F, 0xFF, 0x0F, 0x80, 0x1F, 0xFF, 0x0F, 0x00, 0x1F, 0xC0, 0x0F, 0x3F, 0x1F, 0x00,
  0x0E, 0xC0, 0x1F, 0xF7, 0x0F, 0xE8, 0x1F, 0xF7, 0x0F, 0xF8, 0x17, 0xF3, 0x0F, 0xFC, 0x17, 0xF8, 0x0B, 0xFF, 0x1B, 0xFF,
  0x07, 0xFC, 0x1B, 0xFF, 0x07, 0xFF, 0x17, 0xFF, 0x0B, 0xFF, 0x17, 0xFF, 0x0F, 0xFF, 0x2F, 0xFF, 0x1F, 0xFF, 0x0F, 0x80,
  0x1F, 0xFF, 0x0F, 0x00, 0x1F, 0xC0, 0x0E, 0x3F, 0x1F, 0x80, 0x0C, 0x40, 0x1F, 0x00, 0x00, 0x80, 0x1C, 0x00, 0x03, 0x00,
  0x10, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x00, 0x00, 0x2E, 0xFF, 0x01, 0xFF, 0x1D, 0xFF, 0x02, 0xFF, 0x13, 0xFF, 0x0D, 0xFF,
  0x1F, 0xFF, 0x03, 0xFF, 0x1F, 0xFF, 0x1F, 0xFF, 0x0F, 0xCF, 0x1F, 0xFF, 0x0F, 0x80, 0x1F, 0xEF, 0x0F, 0x10, 0x1F, 0xC7,
  0x0E, 0x28, 0x1F, 0x83, 0x00, 0x44, 0x1F, 0x01, 0x00, 0x82, 0x10, 0x00, 0x0E, 0x01, 0x50, 0x00, 0x00, 0x00, 0x3F, 0xE0,
  0x0F, 0xF0, 0x1F, 0xF0, 0x0F, 0xE8, 0x1F, 0xF8, 0x0F, 0xC0, 0x1F, 0xF8, 0x0F, 0xC4, 0x1F, 0xF8, 0x0F, 0x04, 0x1F, 0xF8,
  0x00, 0x04, 0x5F, 0xFC, 0x00, 0x02, 0x17, 0xFC, 0x08, 0x02, 0x13, 0xFC, 0x04, 0x02, 0x10, 0xFC, 0x03, 0x02, 0x10, 0x00,
  0x00, 0xF8, 0x10, 0x00, 0x00, 0x00, 0x10, 0xFF, 0x01, 0xFF, 0x10, 0xFF, 0x01, 0x7F, 0x20, 0xFF, 0x01, 0x00, 0x20, 0x7F,
  0x00, 0x80, 0x10, 0x7F, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x40, 0x10, 0x1F, 0x00, 0x20, 0x20, 0x0F, 0x00, 0x10, 0x10, 0x07,
  0x00, 0x08, 0x10, 0x03, 0x00, 0x04, 0x10, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x0C, 0x80, 0x2F, 0x00,
  0x00, 0x80, 0x1E, 0x00, 0x01, 0x80, 0x9E, 0x00, 0x01, 0x00, 0x10, 0x00, 0x0E, 0x00, 0x40, 0x00, 0x00, 0x00,
  // Total:  [0x1CA(458)]
  // Orginial Total:  11 fonts ,  Size:(594)]

};
#if HotExpansionAdjust
WORD  code tExpansion_Native2ColorFont[]=
{
#if 1	
	// 0x000(0) : native_2_2  [0x000(0)]
	0x4000, 0x1010, 0x1030, 0x10F0, 0x13FF, 0x2FFF, 0x13FF, 0x10F0, 0x1030, 0x1010, 0x4000, 
	// 0x001(1) : native_2_3  [0x00B(11)]
	0x7000, 0x4FFF, 0x7000, 
	// 0x002(2) : native_2_4  [0x00E(14)]
	0x4000, 0x1080, 0x10C0, 0x10F0, 0x1FFC, 0x2FFF, 0x1FFC, 0x10F0, 0x10C0, 0x1080, 0x4000, 
	// Total  [0x019(50)]
	// Orginial Total:	3 fonts ,  Size:(81)]
	0x0000
#else
// 0x000(0) : native_2_2  [0x000(0)]
0x4000, 0x1010, 0x1030, 0x10F0, 0x13FF, 0x2FFF, 0x13FF, 0x10F0, 0x1030, 0x1010, 0x4000, 
// 0x001(1) : native_2_3  [0x00B(11)]
0x7000, 0x4FFF, 0x7000, 
// 0x002(2) : native_2_4  [0x00E(14)]
0x4000, 0x1080, 0x10C0, 0x10F0, 0x1FFC, 0x2FFF, 0x1FFC, 0x10F0, 0x10C0, 0x1080, 0x4000, 
// Total  [0x019(50)]
// Orginial Total:	3 fonts ,  Size:(81)]
0x0000

#endif

};
BYTE  code tExpansion_Native4ColorFont[]=
{
#if 1	
	0x70, 0x00, 0x10, 0xFF, 0x00, 0x00, 0x11, 0xFF, 0x00, 0x00, 0x13, 0x00, 0x00, 0xFF, 0x83, 0x7F, 0x00, 0x80, 0x70, 0x00, 
	0x2F, 0xFF, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x2F, 0xFF, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 
	0x2F, 0xFF, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x10, 0x0C, 
	0x0F, 0xF0, 0x8F, 0xEC, 0x00, 0x10, 0xF3, 0x7F, 0x00, 0x80, 0x33, 0x7F, 0x00, 0x80, 0xFF, 0xEC, 0x00, 0x10, 0x3F, 0xEC, 
	0x00, 0x10, 0x83, 0x7F, 0x00, 0x80, 0x13, 0x00, 0x00, 0xFF, 0x11, 0xFF, 0x00, 0x00, 0x10, 0xFF, 0x00, 0x00, 0x70, 0x00, 
	0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 
	0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x8F, 0xEC, 
	0x00, 0x10, 0x10, 0x0C, 0x0F, 0xF0, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
	// Total:  [0x09E(158)]
	// Orginial Total:	12 fonts ,	Size:(648)]
#else
0x70, 0x00, 0x10, 0x00, 0x00, 0xFF, 0x10, 0x00, 0x01, 0xFF, 0x10, 0xFF, 0x03, 0x00, 0x80, 0x80, 0x03, 0x7F, 0x70, 0x00, 
0x20, 0x00, 0x0F, 0xFF, 0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 
0x20, 0x00, 0x0F, 0xFF, 0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x10, 0x00, 0x0F, 0xF0, 0x10, 0x00, 0x0F, 0xF8, 0x1F, 0xF0, 
0x00, 0x0C, 0x80, 0x10, 0x0F, 0xEC, 0xF0, 0x80, 0x03, 0x7F, 0x30, 0x80, 0x03, 0x7F, 0xF0, 0x10, 0x0F, 0xEC, 0x30, 0x10, 
0x0F, 0xEC, 0x80, 0x80, 0x03, 0x7F, 0x10, 0xFF, 0x03, 0x00, 0x10, 0x00, 0x01, 0xFF, 0x10, 0x00, 0x00, 0xFF, 0x70, 0x00, 
0x00, 0x00, 0x9F, 0xFF, 0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0x00, 0x00, 0x20, 0x00, 
0x0F, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x80, 0x10, 
0x0F, 0xEC, 0x1F, 0xF0, 0x00, 0x0C, 0x10, 0x00, 0x0F, 0xF8, 0x10, 0x00, 0x0F, 0xF0, 0x70, 0x00, 0x00, 0x00, 
// Total:  [0x09E(158)]
// Orginial Total:	12 fonts ,	Size:(648)]

#endif
};
WORD  code tExpansion_Full2ColorFont[]=
{
	#if 1
	// 0x000(0) : full_2_2	[0x000(0)]
	0x4000, 0x1400, 0x2C00, 0x4FFF, 0x2C00, 0x1400, 0x4000, 
	// 0x001(1) : full_2_3	[0x007(7)]
	0x7000, 0x4FFF, 0x7000, 
	// 0x002(2) : full_2_4	[0x00A(10)]
	0x4000, 0x1002, 0x2003, 0x4FFF, 0x2003, 0x1002, 0x4000, 
	// Total  [0x011(34)]
	// Orginial Total:	3 fonts ,  Size:(81)]
	0x0000
	#else
	// 0x000(0) : full_2_2	[0x000(0)]
	0x4000, 0x1400, 0x2C00, 0x4FFF, 0x2C00, 0x1400, 0x4000, 
	// 0x001(1) : full_2_3	[0x007(7)]
	0x7000, 0x4FFF, 0x7000, 
	// 0x002(2) : full_2_4	[0x00A(10)]
	0x4000, 0x1002, 0x2003, 0x4FFF, 0x2003, 0x1002, 0x4000, 
	// Total  [0x011(34)]
	// Orginial Total:	3 fonts ,  Size:(81)]
	0x0000
	#endif	
};
BYTE  code tExpansion_Full4ColorFont[]=
{
	#if 1
	0x70, 0x00, 0x10, 0xFF, 0x00, 0x00, 0x11, 0xFF, 0x00, 0x00, 0x93, 0x00, 0x00, 0xFF, 0x70, 0x00, 0x2F, 0xFF, 0x00, 0x00, 
	0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x2F, 0xFF, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x2F, 0xFF, 0x00, 0x00, 
	0x90, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x90, 0x0C, 0x0F, 0xF0, 0x53, 0x00, 
	0x00, 0xFF, 0x13, 0x01, 0x00, 0xFE, 0x13, 0x07, 0x00, 0xF8, 0x13, 0x1F, 0x00, 0xE0, 0x23, 0x7F, 0x00, 0x80, 0x13, 0x1F, 
	0x00, 0xE0, 0x13, 0x07, 0x00, 0xF8, 0x13, 0x01, 0x00, 0xFE, 0x53, 0x00, 0x00, 0xFF, 0x50, 0x0C, 0x0F, 0xF0, 0x18, 0x0C, 
	0x07, 0xF0, 0x1E, 0x0C, 0x01, 0xF0, 0x1F, 0x8C, 0x00, 0x70, 0x2F, 0xEC, 0x00, 0x10, 0x1F, 0x8C, 0x00, 0x70, 0x1E, 0x0C, 
	0x01, 0xF0, 0x18, 0x0C, 0x07, 0xF0, 0x50, 0x0C, 0x0F, 0xF0, 0x93, 0x00, 0x00, 0xFF, 0x11, 0xFF, 0x00, 0x00, 0x10, 0xFF, 
	0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 
	0x0F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x90, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x70, 0x00, 
	0x00, 0x00, 0x90, 0x0C, 0x0F, 0xF0, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
	// Total:  [0x0C6(198)]
	// Orginial Total:	12 fonts ,	Size:(648)]
	#else
	0x70, 0x00, 0x10, 0x00, 0x00, 0xFF, 0x10, 0x00, 0x01, 0xFF, 0x90, 0xFF, 0x03, 0x00, 0x70, 0x00, 0x20, 0x00, 0x0F, 0xFF, 
	0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x20, 0x00, 0x0F, 0xFF, 
	0x9F, 0xFF, 0x00, 0x00, 0x70, 0x00, 0x10, 0x00, 0x0F, 0xF0, 0x10, 0x00, 0x0F, 0xF8, 0x9F, 0xF0, 0x00, 0x0C, 0x50, 0xFF, 
	0x03, 0x00, 0x10, 0xFE, 0x03, 0x01, 0x10, 0xF8, 0x03, 0x07, 0x10, 0xE0, 0x03, 0x1F, 0x20, 0x80, 0x03, 0x7F, 0x10, 0xE0, 
	0x03, 0x1F, 0x10, 0xF8, 0x03, 0x07, 0x10, 0xFE, 0x03, 0x01, 0x50, 0xFF, 0x03, 0x00, 0x5F, 0xF0, 0x00, 0x0C, 0x17, 0xF0, 
	0x08, 0x0C, 0x11, 0xF0, 0x0E, 0x0C, 0x10, 0x70, 0x0F, 0x8C, 0x20, 0x10, 0x0F, 0xEC, 0x10, 0x70, 0x0F, 0x8C, 0x11, 0xF0, 
	0x0E, 0x0C, 0x17, 0xF0, 0x08, 0x0C, 0x5F, 0xF0, 0x00, 0x0C, 0x90, 0xFF, 0x03, 0x00, 0x10, 0x00, 0x01, 0xFF, 0x10, 0x00, 
	0x00, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xFF, 
	0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x70, 0x00, 0x00, 0x00, 0x9F, 0xFF, 0x00, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0x70, 0x00, 
	0x00, 0x00, 0x9F, 0xF0, 0x00, 0x0C, 0x10, 0x00, 0x0F, 0xF8, 0x10, 0x00, 0x0F, 0xF0, 0x70, 0x00, 0x00, 0x00, 
	// Total:  [0x0C6(198)]
	// Orginial Total:	12 fonts ,	Size:(648)]
	
	#endif
};

#endif
BYTE  code tDCR_On4ColorFont[]=
{
  0x20, 0x00, 0x10, 0x00, 0x01, 0xFF, 0x10, 0x00, 0x03, 0xFF, 0x10, 0xFF, 0x03, 0xFF, 0xC1, 0xFF, 0x03, 0xFF, 0x11, 0xC0,
  0x03, 0xFF, 0x20, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0xDF, 0xFF, 0x13, 0xFF, 0x0F, 0xFF, 0x20, 0x00, 0x20, 0x3F, 0x0F, 0xFF,
  0xDF, 0xC0, 0x0F, 0xFF, 0x1F, 0x3E, 0x0F, 0xFF, 0x20, 0x00, 0x2F, 0xFF, 0xD0, 0x00, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFF,
  0x20, 0x00, 0x1F, 0xF8, 0x1F, 0xFC, 0x10, 0x0C, 0x0F, 0xFC, 0xC0, 0x04, 0x0F, 0xFC, 0x1C, 0x04, 0x0F, 0xFC, 0x21, 0xC0,
  0x03, 0xFF, 0xC1, 0xC7, 0x03, 0xFF, 0x31, 0xC0, 0x03, 0xFF, 0x11, 0xFF, 0x03, 0xFF, 0x10, 0xFF, 0x0F, 0xFF, 0x10, 0x3F,
  0x0F, 0xFF, 0x18, 0x1F, 0x0F, 0xFF, 0x1E, 0x1F, 0x0F, 0xFF, 0x2F, 0x0E, 0x0F, 0xFF, 0x4F, 0x8C, 0x0F, 0xFF, 0x2F, 0x0E,
  0x0F, 0xFF, 0x1E, 0x1F, 0x0F, 0xFF, 0x18, 0x1F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFF, 0x10, 0xFF, 0x0F, 0xFF, 0x11, 0xFF,
  0x0F, 0xFF, 0x1F, 0xFF, 0x0F, 0xFF, 0x1C, 0x3F, 0x0F, 0xFF, 0x18, 0x3F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFF, 0x10, 0xC3,
  0x0F, 0xFF, 0x11, 0xC1, 0x0F, 0xFF, 0x63, 0xC0, 0x0F, 0xFF, 0x11, 0xC1, 0x0F, 0xFF, 0x10, 0xC3, 0x0F, 0xFF, 0x10, 0x3F,
  0x0F, 0xFF, 0x18, 0x3F, 0x0F, 0xFF, 0x1C, 0x3F, 0x0F, 0xFF, 0x1F, 0x3E, 0x0F, 0xFF, 0x1F, 0xC0, 0x0F, 0xFF, 0x18, 0x3F,
  0x0F, 0xFF, 0x1C, 0x3F, 0x0F, 0xFF, 0x1E, 0x3F, 0x0F, 0xFF, 0x2E, 0x3C, 0x0F, 0xFF, 0x30, 0x3C, 0x0F, 0xFF, 0x30, 0x3F,
  0x0F, 0xFF, 0x1E, 0x3F, 0x0F, 0xFF, 0x1E, 0x3D, 0x0F, 0xFF, 0x1E, 0x3C, 0x0F, 0xFF, 0x1C, 0x3C, 0x0F, 0xFF, 0x18, 0x3C,
  0x0F, 0xFF, 0x10, 0x3C, 0x0F, 0xFF, 0x10, 0x00, 0x0F, 0xFF, 0x1F, 0x04, 0x0F, 0xFC, 0x1F, 0x84, 0x0F, 0xFC, 0x1F, 0xC4,
  0x0F, 0xFC, 0x13, 0xC4, 0x0F, 0xFC, 0x21, 0xC4, 0x0F, 0xFC, 0x13, 0xC4, 0x0F, 0xFC, 0x17, 0xC4, 0x0F, 0xFC, 0x1F, 0x84,
  0x0F, 0xFC, 0x1F, 0x04, 0x0F, 0xFC, 0x1C, 0x04, 0x0F, 0xFC, 0x1E, 0x04, 0x0F, 0xFC, 0x2F, 0x04, 0x0F, 0xFC, 0x1F, 0x84,
  0x0F, 0xFC, 0x17, 0xC4, 0x0F, 0xFC, 0x13, 0xC4, 0x0F, 0xFC, 0x10, 0x04, 0x0F, 0xFC, 0xC1, 0xFF, 0x03, 0xFF, 0x10, 0xFF,
  0x03, 0xFF, 0x10, 0x00, 0x03, 0xFF, 0x10, 0x00, 0x01, 0xFF, 0x30, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0x20, 0x00, 0x0F, 0xFF,
  0x30, 0x00, 0x00, 0x00, 0xDF, 0xC0, 0x0F, 0xFF, 0x20, 0x3F, 0x0F, 0xFF, 0x30, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x0F, 0xFF,
  0x2F, 0xFF, 0x30, 0x00, 0x00, 0x00, 0xC0, 0x04, 0x0F, 0xFC, 0x10, 0x0C, 0x0F, 0xFC, 0x1F, 0xFC, 0x1F, 0xF8, 0x30, 0x00,
  0x00, 0x00,
  // Total:  [0x17E(382)]
  // Orginial Total:  15 fonts ,  Size:(810)]

};

BYTE  code tDCR_Off4ColorFont[]=
{
  0x20, 0x00, 0x20, 0x00, 0x0F, 0xFF, 0xBF, 0xFF, 0x1F, 0xFF, 0x0F, 0xE3, 0x1F, 0xFF, 0x0F, 0xE1, 0x13, 0xFF, 0x0F, 0xF0, 
  0x20, 0x00, 0x2F, 0xFF, 0xB0, 0x00, 0x0F, 0xFF, 0x13, 0x00, 0x0C, 0xFF, 0x17, 0x00, 0x08, 0xFF, 0x1F, 0x3F, 0x00, 0xFF, 
  0x10, 0xFF, 0x0F, 0xF8, 0x10, 0x3F, 0x0F, 0xFC, 0x18, 0x1F, 0x0F, 0xFE, 0x1E, 0x1F, 0x0F, 0xFF, 0x2F, 0x0E, 0x0F, 0xFF, 
  0x4F, 0x8C, 0x0F, 0xFF, 0x2F, 0x0E, 0x0F, 0xFF, 0x1E, 0x1F, 0x0F, 0xFF, 0x18, 0x1F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFE, 
  0x10, 0xFF, 0x0F, 0xFC, 0x11, 0xFF, 0x0F, 0xF8, 0x1F, 0xFF, 0x0F, 0xF0, 0x1C, 0x3F, 0x07, 0xFE, 0x1C, 0x3F, 0x03, 0xFC, 
  0x1E, 0x3F, 0x01, 0xF8, 0x1F, 0xCF, 0x00, 0xF0, 0x17, 0xDF, 0x08, 0x61, 0x13, 0xDC, 0x0C, 0x23, 0x13, 0xFC, 0x0E, 0x03, 
  0x23, 0xF8, 0x0F, 0x07, 0x13, 0xFC, 0x0E, 0x03, 0x13, 0xDE, 0x0C, 0x21, 0x17, 0xCF, 0x08, 0x70, 0x17, 0xC7, 0x08, 0xF8, 
  0x1F, 0x3F, 0x00, 0xFC, 0x1E, 0x3F, 0x01, 0xFE, 0x1C, 0x3F, 0x03, 0xFF, 0x1F, 0x3E, 0x07, 0xFF, 0x1F, 0xC0, 0x0F, 0xFF, 
  0x1E, 0x3F, 0x01, 0xFF, 0x1C, 0x3F, 0x03, 0xFF, 0x1E, 0x3F, 0x07, 0xFF, 0x2E, 0x3C, 0x0F, 0xFF, 0x30, 0x3C, 0x0F, 0xFF, 
  0x30, 0x3F, 0x0F, 0xFF, 0x1E, 0x3F, 0x0F, 0xFF, 0x1E, 0x3D, 0x07, 0xFF, 0x1E, 0x3C, 0x03, 0xFF, 0x1E, 0x3C, 0x01, 0xFF, 
  0x1F, 0x3C, 0x00, 0xFF, 0x17, 0xBC, 0x08, 0x7F, 0x13, 0x80, 0x0C, 0x7F, 0x1F, 0xFF, 0x0F, 0xF1, 0xCF, 0xFF, 0x20, 0x00, 
  0x0F, 0xFF, 0x30, 0x00, 0x00, 0x00, 0x11, 0x80, 0x0E, 0x7F, 0xC0, 0x00, 0x0F, 0xFF, 0x2F, 0xFF, 0x30, 0x00, 0x00, 0x00, 
  // Total:  [0x0F0(240)]
  // Orginial Total:  7 fonts ,  Size:(378)]
};
#if Enable_Lightsensor // 090416
BYTE  code tiCare4ColorFont[]=
{
  0x40, 0x00, 0x30, 0x01, 0x00, 0x00, 0xB0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 
  0x1F, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x17, 0xC0, 0x00, 0x00, 0x13, 0xE0, 0x00, 0x00, 0x11, 0xE0, 0x00, 0x00, 
  0x10, 0xE0, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x20, 0x0F, 0x00, 0x00, 0x10, 0x1F, 0x00, 0x00, 
  0x10, 0x3E, 0x00, 0x00, 0x30, 0x00, 0x10, 0x00, 0x00, 0x0F, 0x20, 0x00, 0x00, 0x1F, 0x10, 0x00, 0x00, 0x0F, 0x20, 0x00, 
  0x10, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x2F, 0xFF, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 
  0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x0F, 0x80, 0x10, 0x00, 
  0x0F, 0xE0, 0x10, 0x00, 0x0F, 0xF8, 0x10, 0x00, 0x0F, 0xFC, 0x10, 0x00, 0x00, 0xFF, 0x18, 0x00, 0x00, 0x3F, 0x1F, 0x00, 
  0x00, 0x1F, 0x1F, 0x80, 0x00, 0x0F, 0x1F, 0xE0, 0x00, 0x07, 0x17, 0xF0, 0x00, 0x03, 0x11, 0xF0, 0x00, 0x01, 0x10, 0xF8, 
  0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 0x10, 0x3C, 0x00, 0x00, 0x90, 0x00, 0x10, 0x00, 0x08, 0x00, 0x20, 0x00, 0x0C, 0x00, 
  0x10, 0x00, 0x0E, 0x00, 0x20, 0x00, 0x0F, 0x00, 0x20, 0x00, 0x0F, 0x80, 0x10, 0x00, 0x07, 0x80, 0x40, 0x00, 0x10, 0xFF, 
  0x00, 0x00, 0x21, 0xFF, 0x00, 0x00, 0x10, 0xFF, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x20, 0x3C, 0x00, 0x00, 0x10, 0x7C, 
  0x00, 0x00, 0x10, 0x78, 0x00, 0x00, 0x18, 0x78, 0x00, 0x00, 0x2C, 0x78, 0x00, 0x00, 0x18, 0x78, 0x00, 0x00, 0x20, 0x78, 
  0x00, 0x00, 0x20, 0x3C, 0x00, 0x00, 0x10, 0x3E, 0x00, 0x00, 0x20, 0x1F, 0x00, 0x00, 0x10, 0x0F, 0x00, 0x00, 0x10, 0x07, 
  0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0xF0, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1F, 0xE3, 0x00, 0x00, 
  0x10, 0x3E, 0x00, 0x00, 0x20, 0x1E, 0x00, 0x00, 0x60, 0x0F, 0x00, 0x00, 0x10, 0x1F, 0x00, 0x00, 0x20, 0x1E, 0x00, 0x00, 
  0x10, 0x3E, 0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 0x10, 0xF8, 0x00, 0x00, 0x11, 0xF8, 0x00, 0x01, 0x17, 0xF0, 0x00, 0x01, 
  0x1F, 0xE0, 0x00, 0x03, 0x10, 0x00, 0x07, 0xC0, 0x30, 0x00, 0x03, 0xC0, 0x40, 0x00, 0x03, 0xE0, 0x30, 0x00, 0x03, 0xC0, 
  0x20, 0x00, 0x07, 0xC0, 0x10, 0x00, 0x07, 0x80, 0x10, 0x00, 0x0F, 0x80, 0x20, 0x00, 0x0F, 0x00, 0x10, 0x00, 0x0E, 0x00, 
  0x50, 0x00, 0x30, 0x01, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x10, 0xE1, 0x00, 0x00, 0x11, 0xE0, 0x00, 0x00, 0x13, 0xE0, 
  0x00, 0x00, 0x17, 0xC0, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1C, 0x00, 
  0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x11, 0xFF, 0x00, 0x00, 0x10, 0x1C, 
  0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x1F, 0x60, 0x00, 0x00, 0x1E, 0x10, 0x00, 0x00, 0x0E, 0x20, 0x00, 0x00, 0x00, 
  0x1F, 0xC0, 0x00, 0x07, 0x1F, 0x00, 0x00, 0x0F, 0x1C, 0x00, 0x00, 0x3F, 0x10, 0x00, 0x00, 0xFF, 0x10, 0x00, 0x03, 0xFE, 
  0x10, 0x00, 0x0F, 0xFC, 0x10, 0x00, 0x0F, 0xF0, 0x10, 0x00, 0x0F, 0xC0, 0x10, 0x00, 0x0E, 0x00, 0x90, 0x00, 0x00, 0x00, 
  0x10, 0x00, 0x0E, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x08, 0x00, 0xF0, 0x00, 0x00, 0x00, 
  // Total:  [0x1F0(496)]
  // Orginial Total:  15 fonts ,  Size:(810)]
};
#endif
#if !AudioFunc
BYTE  code tHotKeyCon4ColorFont[]=
{
  0x70, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x01, 0x00, 0x03, 0x10, 0x02, 0x00, 0x07, 0x10, 0x05, 0x00, 0x0F, 0x10, 0x0B, 
  0x00, 0x1F, 0x10, 0x17, 0x00, 0x1F, 0x10, 0x17, 0x00, 0x3F, 0x10, 0x2F, 0x00, 0x3F, 0x10, 0x2F, 0x00, 0x7F, 0x10, 0x5F, 
  0x00, 0x7F, 0x10, 0x5F, 0x00, 0xFF, 0x10, 0x00, 0x10, 0x01, 0x00, 0x07, 0x10, 0x0E, 0x00, 0x1F, 0x10, 0x31, 0x00, 0x7F, 
  0x10, 0xCF, 0x01, 0xFF, 0x13, 0x3F, 0x07, 0xFF, 0x14, 0xFF, 0x0F, 0xFF, 0x1B, 0xFF, 0x0F, 0xFF, 0x17, 0xFF, 0x0F, 0xFF, 
  0x9F, 0xFF, 0x0F, 0xFF, 0x10, 0x00, 0x0F, 0xFC, 0x1F, 0xFF, 0x10, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0x10, 0x00, 
  0x10, 0x00, 0x0C, 0x00, 0x1E, 0x00, 0x0F, 0x00, 0x11, 0x80, 0x0F, 0xC0, 0x10, 0x60, 0x0F, 0xF0, 0x10, 0x18, 0x0F, 0xF8, 
  0x10, 0x0C, 0x0F, 0xFE, 0x10, 0x02, 0x0F, 0xFF, 0x10, 0x01, 0x0F, 0xFF, 0x90, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x10, 0x00, 
  0x08, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x14, 0x00, 0x0E, 0x00, 0x12, 0x00, 0x0E, 0x00, 0x11, 0x00, 0x0F, 0x00, 0x11, 0x00, 
  0x0F, 0x80, 0x10, 0x80, 0x0F, 0x80, 0x10, 0x80, 0x0F, 0xC0, 0x10, 0x40, 0x0F, 0xC0, 0x10, 0x40, 0x0F, 0xE0, 0x10, 0xDF, 
  0x00, 0xFF, 0x10, 0xBF, 0x00, 0xFF, 0x30, 0xBF, 0x01, 0xFF, 0x91, 0x7F, 0x01, 0xFF, 0x30, 0xBF, 0x01, 0xFF, 0x10, 0xBF, 
  0x00, 0xFF, 0xFF, 0xFF, 0x3F, 0xFF, 0x0F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0x3F, 0x80, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 
  0x30, 0x00, 0x0F, 0xFF, 0x10, 0x40, 0x0F, 0xE0, 0x10, 0x20, 0x0F, 0xE0, 0x30, 0x20, 0x0F, 0xF0, 0x80, 0x10, 0x0F, 0xF0, 
  0x30, 0x20, 0x0F, 0xF0, 0x10, 0x20, 0x0F, 0xE0, 0x10, 0x60, 0x0F, 0xE0, 0x10, 0xDF, 0x00, 0xFF, 0x10, 0x5F, 0x00, 0xFF, 
  0x10, 0x5F, 0x00, 0x7F, 0x10, 0x2F, 0x00, 0x7F, 0x10, 0x2F, 0x00, 0x3F, 0x10, 0x17, 0x00, 0x3F, 0x10, 0x17, 0x00, 0x1F, 
  0x10, 0x0B, 0x00, 0x1F, 0x10, 0x05, 0x00, 0x0F, 0x10, 0x02, 0x00, 0x07, 0x10, 0x01, 0x00, 0x03, 0x10, 0x00, 0x00, 0x01, 
  0x60, 0x00, 0x00, 0x00, 0xAF, 0xFF, 0x17, 0xFF, 0x0F, 0xFF, 0x19, 0xFF, 0x0F, 0xFF, 0x16, 0x7F, 0x0F, 0xFF, 0x11, 0x9F, 
  0x03, 0xFF, 0x10, 0x63, 0x00, 0xFF, 0x10, 0x1C, 0x00, 0x3F, 0x10, 0x03, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0xFF, 0x80, 
  0x0F, 0xFF, 0x10, 0x00, 0x0F, 0xFF, 0x1F, 0xFF, 0x10, 0x00, 0x0F, 0xFE, 0x90, 0x00, 0x0F, 0xFF, 0x10, 0x01, 0x0F, 0xFF, 
  0x10, 0x02, 0x0F, 0xFF, 0x10, 0x04, 0x0F, 0xFE, 0x10, 0x08, 0x0F, 0xFC, 0x10, 0x30, 0x0F, 0xF0, 0x10, 0xC0, 0x0F, 0xE0, 
  0x1F, 0x00, 0x0F, 0x80, 0x18, 0x00, 0x0E, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x40, 0x0F, 0xE0, 0x10, 0x40, 0x0F, 0xC0, 
  0x10, 0x80, 0x0F, 0xC0, 0x10, 0x80, 0x0F, 0x80, 0x11, 0x00, 0x0F, 0x80, 0x13, 0x00, 0x0F, 0x00, 0x12, 0x00, 0x0E, 0x00, 
  0x14, 0x00, 0x0E, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x10, 0x00, 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 
  // Total:  [0x1B4(436)]
  // Orginial Total:  15 fonts ,  Size:(810)]

};
#endif
BYTE code tAuto4ColorFont[]=
{
  0x30, 0x00, 0x18, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x08, 0x00, 0x17, 0x00, 0x08, 0x00, 0x1F, 0xC0, 
  0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x19, 0xF8, 0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 0x10, 0x3E, 0x00, 0x00, 0x10, 0x0F, 
  0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 
  // Total:  [0x036(54)]
  // Orginial Total:  1 fonts ,  Size:(54)]

};

BYTE code tOSDLumaIcon4ColorFont[]=
{
  0x90, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x17, 0xE0, 0x00, 0x00, 0x17, 0xF0, 
  0x00, 0x00, 0x13, 0xFC, 0x00, 0x00, 0x11, 0xF8, 0x00, 0x00, 0x11, 0xF0, 0x00, 0x01, 0x10, 0xE0, 0x00, 0x03, 0x10, 0x00, 
  0x30, 0xC0, 0x00, 0x00, 0x10, 0xE0, 0x00, 0x00, 0x31, 0xE0, 0x00, 0x00, 0x21, 0xF0, 0x00, 0x00, 0x13, 0xF0, 0x00, 0x00, 
  0x23, 0xF8, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0xF0, 0x10, 0x00, 0x07, 0xFE, 0x13, 0x80, 0x0F, 0xFF, 0x1F, 0x80, 
  0x0F, 0xFF, 0x80, 0x00, 0x10, 0x06, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x10, 0x1E, 0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 
  0x10, 0xFC, 0x00, 0x00, 0x13, 0xF8, 0x00, 0x00, 0x17, 0xF8, 0x00, 0x00, 0x13, 0xF0, 0x00, 0x00, 0x11, 0xE0, 0x08, 0x00, 
    0x10, 0xE0, 0x0C, 0x00, 0x10, 0x41, 0x00, 0x07, 0x10, 0x03, 0x00, 0x0F, 0x10, 0x07, 0x00, 0x1F, 0x10, 0x0F, 0x00, 0x1F,
    0x10, 0x0F, 0x00, 0x3F, 0x10, 0x1F, 0x00, 0x3F, 0x6F, 0x1F, 0x00, 0x3F, 0x10, 0x0F, 0x00, 0x3F, 0x10, 0x0F, 0x00, 0x1F,
    0x10, 0x07, 0x00, 0x1F, 0x10, 0x07, 0x00, 0x0F, 0x10, 0x03, 0x00, 0x0F, 0x10, 0x61, 0x00, 0x07, 0xFF, 0x80, 0x0F, 0xFF,
    0x3F, 0x80, 0x0F, 0xFF, 0x10, 0x40, 0x0E, 0x00, 0x10, 0x00, 0x0F, 0x00, 0x20, 0x00, 0x0F, 0x80, 0x10, 0x00, 0x0F, 0xC0,
    0x10, 0x0C, 0x0F, 0xC0, 0x50, 0x0F, 0x0F, 0xC0, 0x10, 0x08, 0x0F, 0xC0, 0x10, 0x00, 0x0F, 0xC0, 0x20, 0x00, 0x0F, 0x80,
    0x10, 0x00, 0x0F, 0x00, 0x10, 0x20, 0x0F, 0x00, 0x10, 0x60, 0x0E, 0x00, 0x10, 0xF0, 0x00, 0x01, 0x10, 0xF8, 0x00, 0x00,
    0x21, 0xFC, 0x00, 0x00, 0x13, 0xF0, 0x00, 0x00, 0x17, 0xE0, 0x00, 0x00, 0x17, 0x80, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x17, 0x80, 0x0F, 0xFF, 0x11, 0x80, 0x0F, 0xFF, 0x10, 0x00, 0x03, 0xFC,
  0x20, 0x00, 0x41, 0xF8, 0x00, 0x00, 0x40, 0xF0, 0x00, 0x00, 0x30, 0x60, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0xF0, 
    0x0C, 0x00, 0x11, 0xF0, 0x00, 0x00, 0x13, 0xF8, 0x00, 0x00, 0x11, 0xFC, 0x00, 0x00, 0x10, 0xFC, 0x00, 0x00, 0x10, 0x3E,
  0x00, 0x00, 0x10, 0x1E, 0x00, 0x00, 0x10, 0x0F, 0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x00, 
  // Total:  [0x156(342)]
    // Orginial Total:  9 fonts ,  Size:(486)]

};


#if 0
BYTE code tOSDImageIcon4ColorFont[]=
{
    0x70, 0x00, 0x10, 0xC7, 0x00, 0x3F, 0x37, 0xFF, 0x17, 0xFC, 0x07, 0xFF, 0x17, 0xC0, 0x07, 0xFF, 0x50, 0x00, 0x07, 0xFF,
    0x50, 0x00, 0x10, 0x01, 0x00, 0x00, 0x17, 0x1F, 0x00, 0xFF, 0x2F, 0xFF, 0x1F, 0xF0, 0x0F, 0xFF, 0x1E, 0x00, 0x0F, 0xFF,
    0x70, 0x00, 0x0F, 0xFF, 0x40, 0x00, 0x10, 0x07, 0x00, 0x00, 0x1C, 0x7F, 0x03, 0xFF, 0x1F, 0xFF, 0x1F, 0xE0, 0x0F, 0xFF,
    0x1C, 0x00, 0x0F, 0xFF, 0x40, 0x00, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFC, 0x10, 0x0E, 0x0F, 0xF1, 0x10, 0x38, 0x0F, 0xC7,
    0x10, 0xE1, 0x0F, 0x1E, 0x13, 0xC3, 0x0C, 0x3C, 0x30, 0x00, 0x1E, 0x00, 0x0C, 0x00, 0x1A, 0x00, 0x0C, 0x00, 0x22, 0x00,
    0x0C, 0x00, 0x16, 0x00, 0x08, 0x00, 0xAE, 0x00, 0x00, 0x00, 0x80, 0x00, 0x07, 0xFF, 0x10, 0x03, 0x07, 0xFC, 0x10, 0x07,
    0x07, 0xF8, 0x10, 0x1F, 0x07, 0xE0, 0x10, 0x3F, 0x07, 0xC0, 0x10, 0xFE, 0x07, 0x01, 0x11, 0xF8, 0x06, 0x07, 0x17, 0xF0,
    0x00, 0x0F, 0x17, 0xE1, 0x00, 0x1E, 0x17, 0xC3, 0x00, 0x3C, 0x17, 0x07, 0x00, 0xF8, 0x10, 0x00, 0x0F, 0xFF, 0x10, 0x01,
    0x0F, 0xFE, 0x10, 0x07, 0x0F, 0xF8, 0x10, 0x1E, 0x0F, 0xE1, 0x10, 0x7C, 0x0F, 0x83, 0x11, 0xF0, 0x0E, 0x0F, 0x13, 0xE1,
    0x0C, 0x1E, 0x1F, 0x83, 0x00, 0x7C, 0x1F, 0x0F, 0x00, 0xF0, 0x1C, 0x1F, 0x03, 0xE0, 0x18, 0x3F, 0x07, 0xC0, 0x10, 0xFF,
    0x0F, 0x00, 0x11, 0xFF, 0x0E, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x4F, 0xFF, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0xF0, 0x1C, 0x3F,
    0x03, 0xC0, 0x18, 0x7F, 0x07, 0x80, 0x10, 0xFF, 0x0F, 0x00, 0x13, 0xFF, 0x0C, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x5F, 0xFF,
    0x00, 0x00, 0x1F, 0xDF, 0x00, 0x00, 0x1F, 0x9F, 0x00, 0x00, 0x1E, 0x60, 0x00, 0x60, 0x1C, 0xFF, 0x00, 0xFF, 0x2B, 0xFF,
    0x03, 0xFF, 0x1D, 0xFF, 0x01, 0xFF, 0x1F, 0x6F, 0x00, 0x60, 0x1E, 0x77, 0x00, 0x70, 0x1E, 0xF7, 0x00, 0xF0, 0x1D, 0xFB,
    0x01, 0xF8, 0x19, 0xF9, 0x01, 0xF8, 0x5E, 0xF7, 0x00, 0xF0, 0x1F, 0x07, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0x9F,
    0x00, 0x00, 0x1E, 0x67, 0x00, 0x60, 0x16, 0xF6, 0x00, 0xF0, 0x25, 0xFA, 0x01, 0xF8, 0x16, 0xF6, 0x00, 0xF0, 0xBE, 0x00,
    0x00, 0x00, 0x1E, 0x00, 0x00, 0x40, 0x1E, 0x00, 0x00, 0x70, 0x10, 0x20, 0x0F, 0xF8, 0x1F, 0xF8, 0x0F, 0xFC, 0x2F, 0xFC,
    0x0F, 0xFE, 0x1F, 0xF8, 0x0F, 0xFC, 0x16, 0x1F, 0x01, 0xE0, 0x14, 0x3F, 0x03, 0xC0, 0x10, 0x7F, 0x07, 0x80, 0x10, 0xFF,
    0x07, 0x00, 0x11, 0xFF, 0x06, 0x00, 0x13, 0xFF, 0x04, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x10, 0x7F, 0x00, 0x00, 0xA0, 0x00,
    0x00, 0x00, 0x1E, 0x60, 0x01, 0xFF, 0x1F, 0x9F, 0x00, 0x60, 0x1F, 0xDF, 0x00, 0x20, 0x6F, 0xFF, 0x00, 0x00, 0x13, 0xFF,
    0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x16, 0x67, 0x09, 0xF8, 0x1F, 0x9F, 0x00, 0x60, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0x0F,
    0x00, 0xF0, 0x5E, 0xF7, 0x01, 0xF8, 0x18, 0xF1, 0x07, 0xFE, 0x15, 0xFB, 0x03, 0xFC, 0x10, 0xF0, 0x03, 0xFC, 0x10, 0xF0,
    0x01, 0xF8, 0x10, 0x60, 0x00, 0xF0, 0x10, 0x00, 0x00, 0x60, 0x30, 0x00, 0x00, 0x00, 0x10, 0x20, 0x0F, 0xF8, 0x1E, 0x00,
    0x00, 0x70, 0x1E, 0x00, 0x00, 0x40, 0x8E, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
    // Total:  [0x1DE(478)]
    // Orginial Total:  13 fonts ,  Size:(702)]
};
#else
BYTE code tOSDImageIcon4ColorFont[]=
{
  0x70, 0x00, 0x10, 0xC7, 0x00, 0x3F, 0x37, 0xFF, 0x17, 0xFC, 0x07, 0xFF, 0x17, 0xC0, 0x07, 0xFF, 0x50, 0x00, 0x07, 0xFF, 
  0x50, 0x00, 0x10, 0x01, 0x00, 0x00, 0x17, 0x1F, 0x00, 0xFF, 0x2F, 0xFF, 0x1F, 0xF0, 0x0F, 0xFF, 0x1E, 0x00, 0x0F, 0xFF, 
  0x70, 0x00, 0x0F, 0xFF, 0x40, 0x00, 0x10, 0x07, 0x00, 0x00, 0x1C, 0x7F, 0x03, 0xFF, 0x1F, 0xFF, 0x1F, 0xE0, 0x0F, 0xFF, 
  0x1C, 0x00, 0x0F, 0xFF, 0x40, 0x00, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFC, 0x10, 0x0E, 0x0F, 0xF1, 0x10, 0x38, 0x0F, 0xC7, 
  0x10, 0xE1, 0x0F, 0x1E, 0x13, 0xC3, 0x0C, 0x3C, 0x30, 0x00, 0x1E, 0x00, 0x0C, 0x00, 0x1A, 0x00, 0x0C, 0x00, 0x22, 0x00, 
  0x0C, 0x00, 0x16, 0x00, 0x08, 0x00, 0xAE, 0x00, 0x00, 0x00, 0x80, 0x00, 0x07, 0xFF, 0x10, 0x03, 0x07, 0xFC, 0x10, 0x07, 
  0x07, 0xF8, 0x10, 0x1F, 0x07, 0xE0, 0x10, 0x3F, 0x07, 0xC0, 0x10, 0xFE, 0x07, 0x01, 0x11, 0xF8, 0x06, 0x07, 0x17, 0xF0, 
  0x00, 0x0F, 0x17, 0xE1, 0x00, 0x1E, 0x17, 0xC3, 0x00, 0x3C, 0x17, 0x07, 0x00, 0xF8, 0x10, 0x00, 0x0F, 0xFF, 0x10, 0x01, 
  0x0F, 0xFE, 0x10, 0x07, 0x0F, 0xF8, 0x10, 0x1E, 0x0F, 0xE1, 0x10, 0x7C, 0x0F, 0x83, 0x11, 0xF0, 0x0E, 0x0F, 0x13, 0xE1, 
  0x0C, 0x1E, 0x1F, 0x83, 0x00, 0x7C, 0x1F, 0x0F, 0x00, 0xF0, 0x1C, 0x1F, 0x03, 0xE0, 0x18, 0x3F, 0x07, 0xC0, 0x10, 0xFF, 
  0x0F, 0x00, 0x11, 0xFF, 0x0E, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x4F, 0xFF, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0xF0, 0x1C, 0x3F, 
  0x03, 0xC0, 0x18, 0x7F, 0x07, 0x80, 0x10, 0xFF, 0x0F, 0x00, 0x13, 0xFF, 0x0C, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x5F, 0xFF, 
  0x00, 0x00, 0x1F, 0xFF, 0x00, 0x20, 0x1F, 0xFF, 0x00, 0x60, 0x1F, 0xFF, 0x01, 0xFF, 0x1F, 0xFF, 0x03, 0xFF, 0x2F, 0xFF, 
  0x07, 0xFF, 0x1F, 0xFF, 0x03, 0xFF, 0x1F, 0x6F, 0x00, 0xF0, 0x1E, 0x77, 0x01, 0xF8, 0x1E, 0xF7, 0x01, 0xF8, 0x1D, 0xFB, 
  0x03, 0xFC, 0x19, 0xF9, 0x07, 0xFE, 0x5E, 0xF7, 0x01, 0xF8, 0x1F, 0x07, 0x00, 0xF8, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0x9F, 
  0x00, 0x60, 0x1E, 0x67, 0x01, 0xF8, 0x16, 0xF6, 0x09, 0xF9, 0x25, 0xFA, 0x0B, 0xFD, 0x16, 0xF6, 0x09, 0xF9, 0xBE, 0x00, 
  0x00, 0x00, 0x1E, 0x00, 0x00, 0x40, 0x1E, 0x00, 0x00, 0x70, 0x10, 0x20, 0x0F, 0xF8, 0x1F, 0xF8, 0x0F, 0xFC, 0x2F, 0xFC, 
  0x0F, 0xFE, 0x1F, 0xF8, 0x0F, 0xFC, 0x16, 0x1F, 0x01, 0xE0, 0x14, 0x3F, 0x03, 0xC0, 0x10, 0x7F, 0x07, 0x80, 0x10, 0xFF, 
  0x07, 0x00, 0x11, 0xFF, 0x06, 0x00, 0x13, 0xFF, 0x04, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x10, 0x7F, 0x00, 0x00, 0xA0, 0x00, 
  0x00, 0x00, 0x1E, 0x60, 0x01, 0xFF, 0x1F, 0x9F, 0x00, 0x60, 0x1F, 0xDF, 0x00, 0x20, 0x6F, 0xFF, 0x00, 0x00, 0x13, 0xFF, 
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x16, 0x67, 0x09, 0xF8, 0x1F, 0x9F, 0x00, 0x60, 0x1F, 0xFF, 0x00, 0x00, 0x1F, 0x0F, 
  0x00, 0xF0, 0x5E, 0xF7, 0x01, 0xF8, 0x18, 0xF1, 0x07, 0xFE, 0x15, 0xFB, 0x03, 0xFC, 0x10, 0xF0, 0x03, 0xFC, 0x10, 0xF0, 
  0x01, 0xF8, 0x10, 0x60, 0x00, 0xF0, 0x10, 0x00, 0x00, 0x60, 0x30, 0x00, 0x00, 0x00, 0x10, 0x20, 0x0F, 0xF8, 0x1E, 0x00, 
  0x00, 0x70, 0x1E, 0x00, 0x00, 0x40, 0x8E, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 
  // Total:  [0x1DE(478)]
  // Orginial Total:  13 fonts ,  Size:(702)]

};
#endif
BYTE code tOSDColortempIcon4ColorFont[]=
{
    0x40, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x01, 0x20, 0x1C,
    0x00, 0x03, 0x20, 0x3C, 0x00, 0x03, 0x10, 0x3F, 0x00, 0x00, 0x40, 0x7F, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x20, 0x00,
    0x11, 0xF8, 0x00, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x1E, 0x03, 0x01, 0xFC, 0x18, 0x00, 0x07, 0xFF, 0x60, 0x00, 0x0F, 0xFF,
    0x6F, 0xFF, 0x00, 0x00, 0x40, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x17, 0x00, 0x08, 0x00, 0x23, 0x80,
    0x0C, 0x00, 0x23, 0xC0, 0x0C, 0x00, 0x13, 0xE0, 0x0C, 0x00, 0x6F, 0xE0, 0x00, 0x00, 0x70, 0x00, 0x10, 0x01, 0x00, 0x00,
    0x10, 0x07, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x01, 0x10, 0x1C, 0x00, 0x03, 0x10, 0x38, 0x00, 0x07, 0x10, 0x30, 0x00, 0x0F,
    0x10, 0x70, 0x00, 0x0F, 0x10, 0x60, 0x00, 0x1F, 0x20, 0xE0, 0x00, 0x1F, 0x10, 0xFF, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x1F,
    0x10, 0x0F, 0x10, 0x07, 0x13, 0xF7, 0x00, 0x07, 0x1F, 0xFF, 0x00, 0x01, 0x18, 0x07, 0x07, 0xF8, 0x10, 0x01, 0x0F, 0xFE,
    0x70, 0x00, 0x0F, 0xFF, 0x1F, 0xFF, 0x00, 0x00, 0x20, 0x00, 0x0F, 0xE0, 0x20, 0x00, 0x0F, 0xC0, 0x10, 0x00, 0x0F, 0x80,
    0x10, 0x00, 0x0F, 0x00, 0x11, 0xF8, 0x0E, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x1F, 0xFF, 0x00, 0x70, 0x1F, 0xFF, 0x03, 0xFE,
    0x6F, 0xFF, 0x2F, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x08, 0x00,
    0x1F, 0x00, 0x0C, 0x00, 0x1F, 0x80, 0x0C, 0x00, 0x1F, 0xC0, 0x0E, 0x00, 0x2F, 0xE0, 0x0E, 0x00, 0x1F, 0xE0, 0x00, 0x00,
    0x1F, 0xF0, 0x00, 0x00, 0x40, 0x3F, 0x0F, 0xC0, 0x20, 0x3F, 0x0F, 0x80, 0x10, 0x3F, 0x0F, 0x00, 0x10, 0x1F, 0x0F, 0x00,
    0x10, 0x1F, 0x0E, 0x00, 0x10, 0x0F, 0x0C, 0x00, 0x10, 0x07, 0x08, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00,
    0x50, 0x00, 0x00, 0x00,
    // Total:  [0x11C(284)]
  // Orginial Total:  8 fonts ,  Size:(432)]

};

BYTE code tOSDColorIcon4ColorFont[]=
{
    0xE0, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x03, 0x10, 0x04, 0x00, 0x03, 0x30, 0x00,
    0x14, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x17, 0x80, 0x00, 0x00, 0x16, 0x80, 0x00, 0x00,
    0x12, 0xC0, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00, 0x13, 0x60, 0x00, 0x00, 0x13, 0xA0, 0x04, 0x00, 0x10, 0x70, 0x0F, 0x80,
    0x10, 0x30, 0x0F, 0xC0, 0x10, 0x38, 0x0F, 0xC0, 0x10, 0x3F, 0x0F, 0xC0, 0x10, 0x3E, 0x0F, 0xC1, 0xF0, 0x00, 0x13, 0xFF,
    0x00, 0x7F, 0x1F, 0xFF, 0x07, 0xFF, 0x1F, 0xCF, 0x08, 0x30, 0xF0, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x0E, 0x00,
    0x1F, 0xC0, 0x0F, 0x80, 0x10, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x0F, 0x10, 0x10, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x1F,
    0x10, 0x00, 0x00, 0x3F, 0x10, 0x40, 0x00, 0x3F, 0x10, 0x80, 0x00, 0x7F, 0x10, 0x01, 0x00, 0xFE, 0x11, 0x01, 0x00, 0xFE,
    0x12, 0x03, 0x01, 0xFC, 0x10, 0x07, 0x03, 0xF8, 0x14, 0x07, 0x03, 0xF8, 0x18, 0x0F, 0x07, 0xF0, 0x10, 0x1F, 0x0F, 0xE0,
    0x10, 0x3F, 0x0F, 0xC0, 0x18, 0x7F, 0x07, 0x80, 0x12, 0x7F, 0x01, 0x80, 0x11, 0x3F, 0x00, 0xC0, 0x10, 0x7F, 0x0F, 0x80,
    0x10, 0xFF, 0x0F, 0x00, 0x11, 0xFF, 0x0E, 0x00, 0x23, 0xFF, 0x0C, 0x00, 0x17, 0xFF, 0x08, 0x00, 0x5F, 0xFF, 0x00, 0x00,
    0x2F, 0xFE, 0x00, 0x01, 0x1F, 0xFC, 0x00, 0x03, 0x2F, 0xF8, 0x00, 0x07, 0x1F, 0xF0, 0x00, 0x0F, 0x1F, 0xE0, 0x00, 0x1E,
    0x50, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x08, 0x00, 0x1E, 0x00, 0x0C, 0x00, 0x1E, 0x00, 0x1F, 0x00, 0x0E, 0x00,
    0x1F, 0x80, 0x0F, 0x00, 0x1F, 0x80, 0x07, 0x80, 0x1F, 0xC0, 0x07, 0x80, 0x17, 0xC0, 0x0B, 0xC0, 0x17, 0xE0, 0x0B, 0xC0,
    0x13, 0xE0, 0x0D, 0xE0, 0x13, 0xF0, 0x0D, 0xE0, 0x13, 0xF0, 0x0D, 0xF0, 0x10, 0x5F, 0x00, 0x20, 0x10, 0x2F, 0x00, 0x10,
    0x10, 0x07, 0x00, 0x08, 0x10, 0x05, 0x00, 0x02, 0x10, 0x00, 0x00, 0x01, 0xD0, 0x00, 0x00, 0x00, 0x1F, 0xC2, 0x00, 0x3C,
    0x1F, 0x80, 0x00, 0x7C, 0x1F, 0x80, 0x00, 0x78, 0x1F, 0x08, 0x00, 0xF0, 0x1E, 0x00, 0x01, 0xF0, 0x1A, 0x00, 0x05, 0xE0,
    0x10, 0x20, 0x03, 0xC0, 0x11, 0x00, 0x00, 0xC0, 0xA0, 0x00, 0x00, 0x00,
    // Total:  [0x14C(332)]
    // Orginial Total:  9 fonts ,  Size:(486)]

};

#if 0//Enable_OsdEngine1
BYTE code tOSDPictureIcon4ColorFont[]=
{
  0x60, 0x00, 0xC0, 0x00, 0x00, 0xFF, 0x60, 0x00, 0xC0, 0x00, 0x0F, 0xFF, 0x60, 0x00, 0x1C, 0x00, 0x0F, 0xFF, 0x18, 0x00,
  0x0F, 0xFF, 0xA0, 0x00, 0x0F, 0xFF, 0x60, 0x00, 0x10, 0x00, 0x0F, 0xF0, 0x20, 0x08, 0x0F, 0xF8, 0x20, 0x18, 0x0F, 0xF8,
  0x10, 0x38, 0x0F, 0xF8, 0x20, 0x78, 0x0F, 0xF8, 0x10, 0xF8, 0x0F, 0xF8, 0x11, 0xF8, 0x0F, 0xF8, 0x13, 0xF8, 0x0F, 0xF8,
  0x13, 0xF8, 0x0F, 0xF0, 0xA0, 0x00, 0x10, 0x00, 0x0F, 0xFF, 0x1C, 0x10, 0x0F, 0xFF, 0x1F, 0xF8, 0x0F, 0xFF, 0x2F, 0xE0,
  0x0F, 0xFF, 0x1F, 0xC0, 0x0F, 0xFF, 0x1F, 0x80, 0x0F, 0xFF, 0x1F, 0x00, 0x0F, 0xFF, 0xA0, 0x00, 0x00, 0x3F, 0x20, 0x00,
  0x0F, 0xFF, 0x10, 0x0C, 0x0F, 0xF3, 0x10, 0x08, 0x0F, 0xF7, 0x10, 0x01, 0x0F, 0xFE, 0x10, 0x03, 0x0F, 0xFC, 0x10, 0x07,
  0x0F, 0xF8, 0x10, 0x03, 0x0F, 0xFC, 0x20, 0x00, 0x0F, 0xFF, 0x20, 0x01, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFF, 0x10, 0x07,
  0x0F, 0xFF, 0x20, 0x0F, 0x0F, 0xFF, 0x20, 0x1F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFF, 0x10, 0x7F, 0x0F, 0xFF, 0x10, 0xFF,
  0x0F, 0xFF, 0x10, 0xFF, 0x0F, 0xFE, 0x11, 0xFF, 0x07, 0xFC, 0x13, 0xFF, 0x03, 0xFC, 0x11, 0xFF, 0x01, 0xF8, 0x10, 0xFF,
  0x00, 0xF0, 0x17, 0xF8, 0x0F, 0xF0, 0x1F, 0xF8, 0x0F, 0xF0, 0x2F, 0xF8, 0x0F, 0xE0, 0x1F, 0xF8, 0x0F, 0xC0, 0x1F, 0xF8,
  0x0F, 0x80, 0x2F, 0xF8, 0x0F, 0x00, 0x1F, 0xF8, 0x0E, 0x00, 0x1F, 0xF8, 0x0C, 0x00, 0x2F, 0xF8, 0x08, 0x00, 0x6F, 0xF8,
  0x00, 0x00, 0x10, 0xFF, 0x00, 0x7F, 0x50, 0xFF, 0x20, 0xFE, 0x00, 0xFF, 0x10, 0xFC, 0x00, 0xFF, 0x20, 0xF8, 0x00, 0xFF,
  0x10, 0x7F, 0x60, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x0F, 0xFF, 0x1E, 0x00, 0x0F, 0xFF, 0x2C, 0x00, 0x0F, 0xFF, 0x18, 0x00,
  0x0F, 0xFF, 0x70, 0x00, 0x0F, 0xFF, 0x60, 0x00, 0x00, 0x00, 0x10, 0x7F, 0x0F, 0xF0, 0x10, 0x3F, 0x0F, 0xE0, 0x18, 0x5F,
  0x0F, 0xE0, 0x1C, 0x9F, 0x0F, 0xE0, 0x1E, 0x3F, 0x0F, 0xC0, 0x1F, 0x7F, 0x0F, 0x80, 0x1F, 0xFF, 0x0E, 0x00, 0x2F, 0xFF,
  0x0C, 0x00, 0x1F, 0xFF, 0x08, 0x00, 0x2F, 0xFF, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  // Total:  [0x13A(314)]
  // Orginial Total:  11 fonts ,  Size:(594)]

};
#else
BYTE code tOSDPictureIcon4ColorFont[]=
{
  0x60, 0x00, 0x10, 0x00, 0x00, 0x7F, 0xB0, 0x00, 0x00, 0xFF, 0x60, 0x00, 0xC0, 0x00, 0x0F, 0xFF, 0x60, 0x00, 0x1C, 0x00, 
  0x0F, 0xFF, 0x18, 0x00, 0x0F, 0xFF, 0xA0, 0x00, 0x0F, 0xFF, 0x60, 0x00, 0x10, 0x00, 0x0F, 0xF0, 0x20, 0x08, 0x0F, 0xF8, 
  0x20, 0x18, 0x0F, 0xF8, 0x10, 0x38, 0x0F, 0xF8, 0x20, 0x78, 0x0F, 0xF8, 0x10, 0xF8, 0x0F, 0xF8, 0x11, 0xF8, 0x0F, 0xF8, 
  0x13, 0xF8, 0x0F, 0xF8, 0x13, 0xF8, 0x0F, 0xF0, 0xAF, 0xFF, 0x00, 0x00, 0x80, 0x00, 0x0F, 0xFF, 0xAF, 0xC0, 0x00, 0x3F, 
  0x20, 0x00, 0x0F, 0xFF, 0x10, 0x0C, 0x0F, 0xFF, 0x10, 0x08, 0x0F, 0xFF, 0x10, 0x01, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFF, 
  0x10, 0x07, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFF, 0x20, 0x00, 0x0F, 0xFF, 0x20, 0x01, 0x0F, 0xFF, 0x10, 0x03, 0x0F, 0xFF, 
  0x10, 0x07, 0x0F, 0xFF, 0x20, 0x0F, 0x0F, 0xFF, 0x20, 0x1F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xFF, 0x10, 0x7F, 0x0F, 0xFF, 
  0x10, 0xFF, 0x0F, 0xFF, 0x10, 0xFF, 0x0F, 0xFE, 0x11, 0xFF, 0x07, 0xFC, 0x13, 0xFF, 0x03, 0xFC, 0x11, 0xFF, 0x01, 0xF8, 
  0x10, 0xFF, 0x00, 0xF0, 0x17, 0xF8, 0x0F, 0xF0, 0x1F, 0xF8, 0x0F, 0xF0, 0x2F, 0xF8, 0x0F, 0xE0, 0x1F, 0xF8, 0x0F, 0xC0, 
  0x1F, 0xF8, 0x0F, 0x80, 0x2F, 0xF8, 0x0F, 0x00, 0x1F, 0xF8, 0x0E, 0x00, 0x1F, 0xF8, 0x0C, 0x00, 0x2F, 0xF8, 0x08, 0x00, 
  0x6F, 0xF8, 0x00, 0x00, 0x10, 0xFF, 0x00, 0x7F, 0x20, 0xFE, 0x00, 0xFF, 0x10, 0xFC, 0x00, 0xFF, 0x20, 0xF8, 0x00, 0xFF, 
  0x20, 0xF0, 0x00, 0xFF, 0x10, 0xE0, 0x00, 0xFF, 0x20, 0xC0, 0x00, 0xFF, 0x10, 0x7F, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x00, 
  0x0F, 0xFF, 0x60, 0x00, 0x00, 0x00, 0x10, 0x7F, 0x0F, 0xF0, 0x10, 0x3F, 0x0F, 0xE0, 0x18, 0x5F, 0x0F, 0xE0, 0x1C, 0x9F, 
  0x0F, 0xE0, 0x1E, 0x3F, 0x0F, 0xC0, 0x1F, 0x7F, 0x0F, 0x80, 0x1F, 0xFF, 0x0E, 0x00, 0x2F, 0xFF, 0x0C, 0x00, 0x1F, 0xFF, 
  0x08, 0x00, 0x2F, 0xFF, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 
  // Total:  [0x122(290)]
  // Orginial Total:  11 fonts ,  Size:(594)]
};
#endif

BYTE code tOSDOsdSetupIcon4ColorFont[]=
{
    0x90, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x06, 0x00, 0x01, 0x10, 0x05, 0x00, 0x03, 0x10, 0x0F,
    0x00, 0x03, 0x10, 0x1B, 0x00, 0x07, 0x10, 0x1F, 0x00, 0x07, 0x10, 0x1B, 0x00, 0x07, 0x10, 0x3F, 0x00, 0x07, 0x20, 0x00,
    0x10, 0x01, 0x00, 0x00, 0x10, 0x1F, 0x00, 0x00, 0x10, 0x7F, 0x00, 0x00, 0x10, 0xFC, 0x00, 0x03, 0x13, 0xEF, 0x00, 0x1F,
    0x17, 0xDF, 0x00, 0x3F, 0x1F, 0x3F, 0x00, 0xFF, 0x1E, 0x07, 0x01, 0xFF, 0x1E, 0x73, 0x01, 0xFF, 0x14, 0x71, 0x0B, 0xFF,
    0x19, 0xFC, 0x0F, 0xFF, 0x1F, 0xD8, 0x0F, 0xFF, 0x1F, 0xBF, 0x0F, 0xFF, 0x1F, 0x1F, 0x0F, 0xFF, 0x1F, 0x8F, 0x0F, 0xFF,
    0x1F, 0xEF, 0x0F, 0xFF, 0x20, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x17, 0xCF,
    0x0F, 0xF0, 0x1F, 0xF9, 0x0F, 0xFE, 0x1F, 0xFE, 0x0F, 0xFF, 0x1F, 0x80, 0x0F, 0xFF, 0x18, 0x00, 0x0F, 0xFF, 0x2C, 0x00,
    0x0F, 0xFF, 0x20, 0x00, 0x0F, 0xFF, 0x1C, 0x02, 0x0F, 0xFD, 0x1D, 0x0F, 0x0F, 0xF0, 0x1E, 0xFF, 0x0F, 0x00, 0x19, 0xFF,
    0x06, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00,
    0x11, 0xC0, 0x0E, 0x00, 0x12, 0xE0, 0x0F, 0x00, 0x13, 0x70, 0x0F, 0x80, 0x11, 0xB8, 0x0F, 0xC0, 0x11, 0xFC, 0x0F, 0xC0,
    0x10, 0xFC, 0x0F, 0xE0, 0x10, 0x7E, 0x0F, 0xF0, 0x12, 0x76, 0x0D, 0xF8, 0x1F, 0xBF, 0x00, 0x78, 0x1F, 0xFB, 0x00, 0x3C,
    0x30, 0x3F, 0x00, 0x07, 0x10, 0x7B, 0x00, 0x07, 0x20, 0x7F, 0x00, 0x03, 0x10, 0x7B, 0x00, 0x07, 0x20, 0x7F, 0x00, 0x03,
    0x10, 0x3D, 0x00, 0x03, 0x10, 0x3F, 0x00, 0x01, 0x20, 0x3F, 0x00, 0x00, 0x30, 0x1F, 0x00, 0x00, 0x10, 0x0F, 0x00, 0x00,
    0x10, 0x07, 0x00, 0x00, 0x3F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFF, 0x1F, 0xFF, 0x0F, 0xFE, 0x1F, 0xF5, 0x0F, 0xFE, 0x1F, 0xFF,
    0x0F, 0xE0, 0x1F, 0xDF, 0x0F, 0xE0, 0x2F, 0xFF, 0x0F, 0xE0, 0x1F, 0xDF, 0x0F, 0xE0, 0x1F, 0xBF, 0x0F, 0xC0, 0x1F, 0xBF,
    0x07, 0xC0, 0x1B, 0xFB, 0x07, 0xCC, 0x1D, 0xFD, 0x03, 0xFE, 0x1E, 0xFE, 0x01, 0xFF, 0x1F, 0x83, 0x00, 0x7F, 0x1F, 0xFF,
    0x00, 0x01, 0x1F, 0xFF, 0x08, 0x00, 0x17, 0xFF, 0x08, 0x00, 0xBF, 0xFF, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0x1F, 0x7E,
    0x00, 0xFE, 0x1F, 0xFF, 0x01, 0xFF, 0x1F, 0xFF, 0x17, 0xFF, 0x0F, 0xFF, 0x10, 0x00, 0x98, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x20, 0x00, 0x08, 0x00, 0x10, 0x00, 0x09, 0xC0, 0x11, 0x00, 0x03, 0xC0, 0x13, 0x80, 0x0F, 0xE0, 0x1F, 0x80, 0x0F, 0xE0,
    0x1F, 0x00, 0x0F, 0xE0, 0x10, 0x03, 0x0F, 0xFF, 0x10, 0x01, 0x0F, 0xFB, 0x10, 0x01, 0x0F, 0xE1, 0x11, 0x01, 0x0F, 0xC1,
    0x13, 0x01, 0x0F, 0xC3, 0x17, 0x03, 0x0F, 0x83, 0x17, 0x07, 0x0F, 0x87, 0x1F, 0x8F, 0x0F, 0xDF, 0x1F, 0xFC, 0x0F, 0xFF,
    0x1F, 0xF8, 0x0F, 0xFF, 0x11, 0xF0, 0x0F, 0xFF, 0x10, 0xC0, 0x0D, 0xFF, 0x10, 0x80, 0x09, 0xFF, 0x10, 0x00, 0x01, 0xF3,
    0x20, 0x00, 0x01, 0xF1, 0x10, 0x00, 0x00, 0xE0, 0x10, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x0F, 0x80, 0x2E, 0x00, 0x0F, 0x00,
    0x1E, 0x00, 0x0F, 0xC0, 0x1F, 0x00, 0x0F, 0xF0, 0x1E, 0x00, 0x0F, 0xF0, 0x18, 0x00, 0x0F, 0xF0, 0x10, 0x00, 0x0F, 0xF0,
    0x10, 0x00, 0x0E, 0x60, 0x20, 0x00, 0x0C, 0x00, 0x40, 0x00, 0x0E, 0x00, 0x10, 0x00, 0x0C, 0x00, 0x20, 0x00, 0x00, 0x00,
    // Total:  [0x1F4(500)]
    // Orginial Total:  10 fonts ,  Size:(540)]
};

BYTE code tOSDExtraIcon4ColorFont[]=
{
    0x70, 0x00, 0x20, 0x1C, 0x00, 0x00, 0x10, 0x1E, 0x00, 0x00, 0x10, 0x1E, 0x00, 0x01, 0x40, 0x1F, 0x00, 0x00, 0x20, 0x0F,
    0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x10, 0x00, 0x13, 0xF8, 0x00, 0x00, 0x13, 0xFE, 0x00, 0x00, 0x11, 0xFF, 0x00, 0x00,
    0x10, 0xFF, 0x01, 0x00, 0x10, 0x7F, 0x00, 0x80, 0x10, 0x7F, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x10, 0x1F, 0x00, 0x20,
    0x20, 0x1F, 0x00, 0x00, 0x10, 0x3F, 0x08, 0x00, 0x18, 0x7F, 0x00, 0x80, 0x1C, 0x8F, 0x03, 0x70, 0x1F, 0x07, 0x00, 0xF8,
    0x1C, 0x03, 0x03, 0xFC, 0x1E, 0x01, 0x01, 0xFE, 0x1F, 0x00, 0x00, 0xFF, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x1F, 0x00,
    0x00, 0x80, 0x60, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x01,
    0x10, 0x0C, 0x00, 0x13, 0x10, 0x18, 0x00, 0x07, 0x10, 0x10, 0x00, 0x0F, 0x10, 0x33, 0x00, 0x0C, 0x10, 0x7C, 0x00, 0x02,
    0x10, 0xF0, 0x00, 0x08, 0x11, 0xE0, 0x00, 0x10, 0x13, 0xC0, 0x00, 0x20, 0x20, 0x00, 0x10, 0x00, 0x01, 0x00, 0x13, 0x00,
    0x00, 0x80, 0x17, 0x80, 0x00, 0x40, 0x1E, 0xC0, 0x01, 0x20, 0x1C, 0x20, 0x03, 0xD0, 0x18, 0x60, 0x07, 0x80, 0x10, 0xC0,
    0x0F, 0x00, 0x11, 0x80, 0x0E, 0x00, 0x13, 0x00, 0x0C, 0x00, 0x16, 0x00, 0x08, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x7F, 0x1F, 0xC0, 0x00, 0x3F, 0x1F, 0xF4, 0x00, 0x0B, 0x13, 0xFE,
    0x00, 0x01, 0x10, 0x73, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x03,
    0x10, 0x02, 0x00, 0x07, 0x10, 0x05, 0x00, 0x0F, 0x10, 0x0B, 0x00, 0x1F, 0x10, 0x17, 0x00, 0x3F, 0x10, 0x2F, 0x00, 0x7F,
    0x10, 0x5E, 0x00, 0xFF, 0x10, 0xBC, 0x01, 0xFF, 0x11, 0x79, 0x03, 0xFE, 0x17, 0x80, 0x08, 0x40, 0x13, 0xC0, 0x0C, 0x20,
    0x11, 0xE1, 0x0E, 0x10, 0x10, 0xF3, 0x0F, 0x08, 0x10, 0x7F, 0x0F, 0x80, 0x18, 0xFF, 0x07, 0x00, 0x1F, 0xFE, 0x00, 0x01,
    0x17, 0xCF, 0x08, 0x30, 0x1F, 0x0F, 0x08, 0xF0, 0x15, 0x03, 0x0E, 0xFC, 0x1F, 0x83, 0x0E, 0x7C, 0x1E, 0xC6, 0x0F, 0x39,
    0x1C, 0xE6, 0x0F, 0x19, 0x19, 0xFC, 0x0E, 0x03, 0x13, 0xFC, 0x0C, 0x33, 0x17, 0xFE, 0x08, 0x79, 0x1F, 0xF3, 0x00, 0xF0,
    0x1F, 0xE1, 0x01, 0xE0, 0x17, 0x80, 0x00, 0x40, 0x1F, 0x00, 0x00, 0x80, 0x1E, 0x00, 0x01, 0x00, 0x1C, 0x00, 0x02, 0x00,
    0x18, 0x00, 0x04, 0x00, 0x10, 0x00, 0x08, 0x00, 0x10, 0x00, 0x10, 0x00, 0x08, 0x00, 0x18, 0x00, 0x04, 0x00, 0x1C, 0x00,
    0x02, 0x00, 0x1E, 0x00, 0x01, 0x00, 0x1F, 0x00, 0x00, 0x80, 0x17, 0x80, 0x08, 0x40, 0x13, 0xC0, 0x0C, 0x20, 0x11, 0xE0,
    0x0E, 0x10, 0x10, 0xF0, 0x0F, 0x00, 0x10, 0x78, 0x0F, 0x80, 0x18, 0x3C, 0x07, 0xC0, 0x20, 0x00, 0x10, 0x00, 0x00, 0x01,
    0x10, 0x03, 0x10, 0x06, 0x00, 0x07, 0x10, 0x0D, 0x00, 0x0F, 0x10, 0x0B, 0x00, 0x1F, 0x10, 0x17, 0x00, 0x3F, 0x10, 0x2F,
    0x00, 0x3F, 0x10, 0x1E, 0x00, 0x7F, 0x10, 0x3C, 0x00, 0x3F, 0x10, 0x39, 0x00, 0x3E, 0x10, 0x33, 0x00, 0x3C, 0x10, 0x1F,
    0x00, 0x18, 0x10, 0x0F, 0x00, 0x08, 0x10, 0x07, 0x10, 0x01, 0x10, 0x00, 0x00, 0x00, 0x12, 0xF3, 0x07, 0xFC, 0x15, 0xE7,
    0x0F, 0xF8, 0x1B, 0xCF, 0x0F, 0xF0, 0x17, 0x9F, 0x0F, 0xE1, 0x1F, 0x3F, 0x0F, 0xC3, 0x1E, 0x7F, 0x0F, 0x87, 0x1C, 0xFF,
    0x0F, 0x0F, 0x19, 0xFE, 0x0E, 0x1E, 0x13, 0xFC, 0x0C, 0x3C, 0x17, 0xF8, 0x08, 0x78, 0x1F, 0xF0, 0x00, 0xF0, 0x1F, 0xE0,
    0x01, 0xE0, 0x1F, 0xC0, 0x03, 0xC0, 0x1F, 0x80, 0x07, 0x80, 0x1F, 0x00, 0x1E, 0x00, 0x1C, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x1F, 0xC0, 0x03, 0xC0, 0x1F, 0x80, 0x07, 0x80, 0x1F, 0x00, 0x1E, 0x00, 0x1C, 0x00, 0x18, 0x00, 0xC0, 0x00, 0x00, 0x00,
    0x1C, 0x1E, 0x03, 0xE0, 0x16, 0x0F, 0x01, 0xF0, 0x13, 0x07, 0x00, 0xF8, 0x11, 0x83, 0x00, 0x7C, 0x10, 0xC1, 0x01, 0x3E,
    0x10, 0x60, 0x00, 0x9F, 0x10, 0x30, 0x00, 0x4F, 0x10, 0x18, 0x00, 0x27, 0x10, 0x0C, 0x00, 0x13, 0x10, 0x06, 0x00, 0x09,
    0x10, 0x03, 0x00, 0x04, 0x10, 0x01, 0x00, 0x02, 0x10, 0x00, 0x00, 0x01, 0x50, 0x00, 0x00, 0x00, 0x20, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x17, 0x80, 0x08, 0x00, 0x13, 0xC0,
    0x0C, 0x00, 0x11, 0xE0, 0x0E, 0x00, 0x10, 0xF0, 0x0F, 0x00, 0x10, 0x70, 0x0F, 0x80, 0x18, 0x30, 0x07, 0xC0, 0x1C, 0x20,
    0x03, 0xD0, 0x16, 0x40, 0x09, 0xA0, 0x13, 0x80, 0x04, 0x40, 0x10, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00,
    // Total:  [0x2BA(698)]
    // Orginial Total:  13 fonts ,  Size:(702)]
};

BYTE code tOSDResetIcon4ColorFont[]=
{
    0xB0, 0x00, 0x10, 0x01, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x10, 0x03, 0x00, 0x01, 0x10, 0x05, 0x00, 0x03, 0x10, 0x07,
    0x00, 0x03, 0x10, 0x0B, 0x00, 0x07, 0x10, 0x0F, 0x00, 0x07, 0x30, 0x00, 0x10, 0x07, 0x00, 0x00, 0x10, 0x19, 0x00, 0x07,
    0x10, 0x67, 0x00, 0x1F, 0x10, 0xDF, 0x00, 0x3F, 0x11, 0x7F, 0x00, 0xFF, 0x12, 0xFF, 0x01, 0xFF, 0x1D, 0xFF, 0x03, 0xFF,
    0x1B, 0xFF, 0x07, 0xFF, 0x17, 0xFD, 0x0F, 0xFE, 0x1F, 0xF7, 0x0F, 0xF8, 0x1F, 0xEC, 0x0F, 0xF0, 0x1F, 0xD8, 0x0F, 0xE0,
    0x1F, 0xB0, 0x0F, 0xC0, 0x1F, 0xE0, 0x0F, 0x80, 0x1F, 0x40, 0x0F, 0x80, 0x10, 0x00, 0x10, 0x70, 0x00, 0x00, 0x1F, 0xFF,
    0x00, 0x00, 0x10, 0x40, 0x0F, 0xFF, 0x3F, 0x80, 0x0F, 0xFF, 0x2F, 0xC0, 0x0F, 0xFF, 0x1F, 0x00, 0x0F, 0xFF, 0x17, 0xFE,
    0x08, 0x01, 0x1C, 0x01, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x20, 0x00, 0x18, 0x00, 0x00, 0x00, 0x17, 0x00, 0x08, 0x00,
    0x10, 0xC0, 0x0F, 0x00, 0x10, 0x30, 0x0F, 0xC0, 0x10, 0x18, 0x0F, 0xE0, 0x10, 0x0C, 0x0F, 0xF0, 0x10, 0x06, 0x0F, 0xF8,
    0x20, 0x03, 0x0F, 0xFC, 0x1F, 0xFF, 0x00, 0x00, 0x17, 0xFF, 0x00, 0x00, 0x11, 0xFF, 0x00, 0x00, 0x20, 0xFF, 0x00, 0x00,
    0x23, 0xFF, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x0F, 0x10, 0x22, 0x00, 0x1F, 0x20, 0x20, 0x00, 0x1F, 0x10, 0x21, 0x00, 0x1E,
    0x10, 0x2E, 0x00, 0x11, 0x10, 0x34, 0x00, 0x03, 0x10, 0x02, 0x00, 0x01, 0x10, 0x01, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
    0x10, 0x08, 0x0F, 0xF0, 0x10, 0x1C, 0x0F, 0xE0, 0x10, 0xE0, 0x0F, 0x00, 0x13, 0x30, 0x0C, 0xC0, 0x18, 0x18, 0x07, 0xE0,
    0x10, 0x06, 0x0F, 0xF8, 0x10, 0x03, 0x0F, 0xFC, 0x10, 0x00, 0x0F, 0xFF, 0x10, 0xFF, 0x0F, 0xFF, 0x18, 0xFF, 0x07, 0xFF,
    0x14, 0x7F, 0x03, 0xFF, 0x13, 0x3F, 0x00, 0xFF, 0x10, 0x9F, 0x00, 0x7F, 0x10, 0x67, 0x00, 0x1F, 0x10, 0x1C, 0x00, 0x03,
    0x10, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x50, 0x00, 0x10, 0x01, 0x00, 0x00, 0x18, 0x0E, 0x00, 0x01, 0x13, 0xF3,
    0x0C, 0x0F, 0x6F, 0xFF, 0x17, 0xFC, 0x0F, 0xFF, 0x1C, 0x1F, 0x03, 0xE0, 0x11, 0xE0, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x10, 0x5F, 0x00, 0x3F, 0x10, 0xBF, 0x00, 0x7F, 0x10, 0xFF, 0x00, 0x7F, 0x13, 0xFF, 0x00, 0xFF, 0x17, 0xFF, 0x01, 0xFF,
    0x1B, 0xFF, 0x07, 0xFF, 0x1F, 0xFF, 0x0F, 0xFE, 0x1F, 0xFD, 0x0F, 0xFE, 0x1F, 0xFA, 0x0F, 0xFC, 0x1F, 0xF4, 0x0F, 0xF8,
    0x1F, 0xE8, 0x0F, 0xF0, 0x1F, 0xB0, 0x0F, 0xC0, 0x1F, 0x40, 0x0F, 0x80, 0x19, 0x80, 0x0E, 0x00, 0x1E, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x0E, 0x00, 0x1E, 0x00, 0x0C, 0x00, 0x1A, 0x00, 0x0C, 0x00, 0x1C, 0x00, 0x08, 0x00,
    0x14, 0x00, 0x08, 0x00, 0x18, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
    // Total:  [0x19C(412)]
    // Orginial Total:  9 fonts ,  Size:(486)]
};

#if 0//Enable_OsdEngine1
BYTE code tOSDExitIcon4ColorFont[]=
{
    0xD0, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x80, 0x01, 0x00, 0x10, 0x80, 0x03, 0x00, 0x11, 0x40, 0x03, 0x80, 0x11, 0xA0,
    0x03, 0xC0, 0x30, 0x00, 0x90, 0x01, 0x00, 0x00, 0x10, 0xC1, 0x00, 0x00, 0x10, 0x21, 0x00, 0xC0, 0x10, 0x09, 0x00, 0xF0,
    0x10, 0x05, 0x00, 0xF8, 0x10, 0x03, 0x00, 0xFC, 0x10, 0x00, 0x00, 0xFF, 0x20, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x18, 0x00,
    0x07, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0x11, 0xD0, 0x03, 0xE0, 0x11, 0xE7, 0x03, 0xF8, 0x11, 0xFC, 0x03, 0xFF, 0x22, 0xFF,
    0x01, 0xFF, 0x10, 0xFF, 0x01, 0xFF, 0x11, 0x7F, 0x00, 0xFF, 0x10, 0x7F, 0x00, 0xFF, 0x10, 0xBF, 0x00, 0x7F, 0x10, 0x5F,
    0x00, 0x3F, 0x10, 0x2F, 0x00, 0x1F, 0x10, 0x17, 0x00, 0x0F, 0x10, 0x09, 0x00, 0x07, 0x10, 0x02, 0x00, 0x01, 0x40, 0x00,
    0x00, 0x00, 0x10, 0x00, 0x00, 0xFF, 0x1E, 0x00, 0x01, 0xFF, 0x10, 0x00, 0x0F, 0xFF, 0x1E, 0x00, 0x0F, 0xFF, 0x2F, 0x00,
    0x0F, 0xFF, 0x1F, 0x80, 0x0F, 0xFF, 0x1F, 0xC0, 0x0F, 0xFF, 0x1F, 0xE0, 0x0F, 0xFF, 0x1F, 0xF0, 0x0F, 0xFF, 0x1F, 0xFC,
    0x0F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFF, 0x1F, 0xFF, 0x13, 0xFF, 0x0F, 0xFF, 0x1E, 0x7F, 0x01, 0xFF, 0x11, 0x7E, 0x00, 0xFF,
    0x11, 0x79, 0x00, 0xFE, 0x11, 0x75, 0x00, 0xF8, 0x10, 0x00, 0x08, 0x00, 0x12, 0x00, 0x0C, 0x00, 0x11, 0x00, 0x0E, 0x00,
    0x10, 0x00, 0x0F, 0x80, 0x10, 0x20, 0x0F, 0xC0, 0x10, 0x10, 0x0F, 0xE0, 0x10, 0x00, 0x0F, 0xF8, 0x20, 0x00, 0x0F, 0xFC,
    0x10, 0x04, 0x0F, 0xF8, 0x10, 0x00, 0x0F, 0xF0, 0x10, 0x20, 0x0F, 0xC0, 0x10, 0x40, 0x0F, 0x80, 0x1D, 0x00, 0x0E, 0x00,
    0x12, 0x00, 0x0C, 0x00, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x14, 0x03, 0x03, 0xFF, 0x14, 0x0F, 0x03, 0xFF,
    0x14, 0x1F, 0x03, 0xFF, 0x14, 0x3F, 0x03, 0xFF, 0x14, 0x7F, 0x03, 0xFF, 0x14, 0xFF, 0x03, 0xFF, 0x25, 0xFF, 0x03, 0xFE,
    0x17, 0xFF, 0x03, 0xFC, 0x17, 0xFF, 0x03, 0xF8, 0x27, 0xFF, 0x03, 0xF0, 0x27, 0xFF, 0x03, 0xE0, 0x27, 0xFF, 0x03, 0xC0,
    0x27, 0xFF, 0x03, 0x80, 0x1F, 0xF8, 0x0F, 0x80, 0x1F, 0xF8, 0x0F, 0x00, 0x1F, 0xF8, 0x0E, 0x00, 0x1F, 0xF8, 0x0C, 0x00,
    0x1F, 0xF8, 0x08, 0x00, 0xDF, 0xF8, 0x00, 0x00, 0x11, 0x49, 0x00, 0xF0, 0x10, 0x21, 0x00, 0xC0, 0x10, 0xC1, 0x00, 0x00,
    0x60, 0x01, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0F, 0xFF, 0x18, 0x00, 0x07, 0xFF, 0x1F, 0xFF, 0x00, 0x00,
    0x80, 0x00, 0x00, 0x00, 0x27, 0xFF, 0x0B, 0x00, 0x27, 0xFF, 0x0A, 0x00, 0x57, 0xFF, 0x08, 0x00, 0x1F, 0xFF, 0x00, 0x00,
    0x47, 0xFF, 0x00, 0x00, 0x17, 0xF8, 0x00, 0x00, 0x17, 0xE0, 0x00, 0x00, 0x17, 0x80, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    // Total:  [0x190(400)]
    // Orginial Total:  11 fonts ,  Size:(594)]

};
#else

BYTE code tOSDExitIcon4ColorFont[]=
{
  0xD0, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x80, 0x01, 0x00, 0x10, 0x80, 0x03, 0x00, 0x11, 0x40, 0x03, 0x80, 0x11, 0xA0, 
  0x03, 0xC0, 0x30, 0x00, 0x90, 0x01, 0x00, 0x00, 0x10, 0xC1, 0x00, 0x00, 0x10, 0x21, 0x00, 0xC0, 0x10, 0x09, 0x00, 0xF0, 
  0x10, 0x05, 0x00, 0xF8, 0x10, 0x03, 0x00, 0xFC, 0x10, 0x00, 0x00, 0xFF, 0x20, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x18, 0x00, 
  0x07, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0x11, 0xD0, 0x03, 0xE0, 0x11, 0xE7, 0x03, 0xF8, 0x11, 0xFC, 0x03, 0xFF, 0x22, 0xFF, 
  0x01, 0xFF, 0x10, 0xFF, 0x01, 0xFF, 0x11, 0x7F, 0x00, 0xFF, 0x10, 0x7F, 0x00, 0xFF, 0x10, 0xBF, 0x00, 0x7F, 0x10, 0x5F, 
  0x00, 0x3F, 0x10, 0x2F, 0x00, 0x1F, 0x10, 0x17, 0x00, 0x0F, 0x10, 0x09, 0x00, 0x07, 0x10, 0x02, 0x00, 0x01, 0x40, 0x00, 
  0x00, 0x00, 0x10, 0x00, 0x00, 0xFF, 0x1E, 0x00, 0x01, 0xFF, 0x10, 0x00, 0x0F, 0xFF, 0x1C, 0x00, 0x0F, 0xFF, 0x1E, 0x00, 
  0x0F, 0xFF, 0x2F, 0x00, 0x0F, 0xFF, 0x1F, 0x80, 0x0F, 0xFF, 0x1F, 0xC0, 0x0F, 0xFF, 0x1F, 0xE0, 0x0F, 0xFF, 0x1F, 0xF8, 
  0x0F, 0xFF, 0x1F, 0xFC, 0x0F, 0xFF, 0x1F, 0xFE, 0x0F, 0xFF, 0x13, 0xFF, 0x0F, 0xFF, 0x1E, 0x7F, 0x01, 0xFF, 0x11, 0x7E, 
  0x00, 0xFF, 0x11, 0x79, 0x00, 0xFE, 0x11, 0x75, 0x00, 0xF8, 0x17, 0xFF, 0x0F, 0xFF, 0x13, 0xFF, 0x0D, 0xFF, 0x11, 0xFF, 
  0x0E, 0xFF, 0x10, 0x7F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xDF, 0x10, 0x1F, 0x0F, 0xEF, 0x10, 0x07, 0x0F, 0xFF, 0x20, 0x03, 
  0x0F, 0xFF, 0x10, 0x07, 0x0F, 0xFB, 0x10, 0x0F, 0x0F, 0xFF, 0x10, 0x3F, 0x0F, 0xDF, 0x10, 0x7F, 0x0F, 0xBF, 0x11, 0xFF, 
  0x0E, 0xFF, 0x13, 0xFF, 0x0D, 0xFF, 0x1F, 0xFF, 0x07, 0xFF, 0x2F, 0xFF, 0x0F, 0xFF, 0x18, 0x03, 0x07, 0xFF, 0x18, 0x0F, 
  0x07, 0xFF, 0x18, 0x1F, 0x07, 0xFF, 0x18, 0x3F, 0x07, 0xFF, 0x18, 0x7F, 0x07, 0xFF, 0x18, 0xFF, 0x07, 0xFF, 0x29, 0xFF, 
  0x07, 0xFE, 0x1B, 0xFF, 0x07, 0xFC, 0x1F, 0xFF, 0x07, 0xF8, 0x2F, 0xFF, 0x07, 0xF0, 0x2F, 0xFF, 0x07, 0xE0, 0x2F, 0xFF, 
  0x07, 0xC0, 0x2F, 0xFF, 0x07, 0x80, 0x1F, 0xF8, 0x0F, 0x80, 0x1F, 0xF8, 0x0F, 0x00, 0x1F, 0xF8, 0x0E, 0x00, 0x1F, 0xF8, 
  0x0C, 0x00, 0x1F, 0xF8, 0x08, 0x00, 0xDF, 0xF8, 0x00, 0x00, 0x11, 0x49, 0x00, 0xF0, 0x10, 0x21, 0x00, 0xC0, 0x10, 0xC1, 
  0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0F, 0xFF, 0x18, 0x00, 0x07, 0xFF, 0x1F, 0xFF, 
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x2F, 0xFF, 0x07, 0x00, 0x2F, 0xFF, 0x06, 0x00, 0x2F, 0xFF, 0x04, 0x00, 0x8F, 0xFF, 
  0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
  // Total:  [0x18E(398)]
  // Orginial Total:  11 fonts ,  Size:(594)]

};

#endif

//=================================================
//=================================================
//=================================================
//=================================================
//=================================================
//=================================================

BYTE code tGameEco8ColorFont[]=
{
    // game2_1_4
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00,
    0xFF, 0xC0, 0xF8, 0xF0, 0x00, 0xF8,
    0x0F, 0xFC, 0x00, 0x99, 0xFC, 0xFE,
    0x06, 0x00, 0xFE, 0xF0, 0xFF, 0x00,
    0x00, 0xFF, 0xFF, 0x9F, 0x00, 0xFF,
    0x69, 0xFF, 0x00, 0xFF, 0xFF, 0xE7,
    0xF0, 0x18, 0xFF, 0x0F, 0xC3, 0x3C,
    0xFF, 0xFF, 0xC3, 0xF0, 0x3C, 0xFF,
    0x0F, 0xE7, 0x18, 0xB7, 0xFF, 0xFF,
    0xB0, 0x00, 0xFF, 0x05, 0xFF, 0x00,
    0x2D, 0xFF, 0xFF, 0xE0, 0x00, 0xFF,
    0x01, 0xFF, 0x00

};


BYTE code tAuto8ColorFont[]=
{
  // auto config_1_3
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 
  0x00, 0x00, 0x00, 0x01, 0xC7, 0x38, 
  0x30, 0x00, 0x01, 0x00, 0xFE, 0x00, 
  0x12, 0x38, 0xFF, 0x60, 0x00, 0x7C, 
  0x01, 0xFF, 0x00, 0x16, 0x66, 0xE7, 
  0x60, 0x18, 0x46, 0x01, 0xC7, 0x38, 
  0x16, 0x6C, 0xEF, 0x20, 0x10, 0x3C, 
  0x01, 0xFF, 0x00, 0x03, 0x01, 0xFE, 
  0x10, 0x00, 0x83, 0x00, 0x7C, 0x00, 
  0x00, 0xFE, 0x00, 0x00, 0x00, 0x38, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00


};

BYTE code tOSDImageIcon8ColorFont[]=
{
    // image_1_4
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x03, 0x00,
    0xF1, 0xFF, 0xFF, 0xF0, 0x00, 0xE0,
    0x0F, 0xFF, 0x00, 0xF8, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0xF0, 0x00, 0xFF, 0x00, 0x00, 0x03,
    0x0F, 0xFC, 0x00, 0xF0, 0xC7, 0x38,
    0x30, 0x00, 0x1F, 0x0C, 0xE0, 0x00,
    0x3C, 0x7F, 0x80, 0x80, 0x00, 0xFF,
    0x07, 0x00, 0x00, 0xC3, 0xFF, 0x00,
    0x70, 0x00, 0xFF, 0x08, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0x9F,
    0x00, 0x00, 0x60
};

BYTE code tOSDPictureIcon8ColorFont[]=
{
    // picture_1_3

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F,
  0x0F, 0xC0, 0x1F, 0xF0, 0x3F, 0xC0,
  0x00, 0x0F, 0x3F, 0x0F, 0xC0, 0x1E,
  0xF0, 0x3F, 0xC0, 0x00, 0x0E, 0x3F,
  0x0F, 0xC0, 0x0C, 0xF0, 0x3F, 0xC0,
  0x00, 0x18, 0x3F, 0x0F, 0xC0, 0x10,
  0xF0, 0x3F, 0xC0, 0x00, 0x00, 0x3F,
  0x0F, 0xC0, 0x00, 0xF0, 0x3F, 0xC0,
  0x00, 0x00, 0x3F, 0x0F, 0xC0, 0x00,

    // picture_2_1
    0xF0, 0x3F, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
  0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
  0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x60,
    0x00, 0xFF, 0x00, 0x00, 0xFF, 0x07,
    0x00, 0x00, 0xFF, 0x00, 0x07, 0x00,
    0x00, 0xFF, 0x0F, 0x00, 0x00, 0xFF,
    0x00, 0x1F, 0x00, 0x00, 0xFF, 0x3F,
    0x00, 0x00, 0xFF, 0x00, 0x3F, 0x00,
    // picture_3_3
    0xF0, 0x01, 0xFE, 0x00, 0x01, 0x01,
    0x0F, 0xFF, 0x00, 0xF0, 0x03, 0xFF,
    0x00, 0x00, 0x03, 0x0F, 0xFF, 0x00,
    0xF0, 0x03, 0xFF, 0x00, 0x00, 0x0F,
    0x0F, 0xFF, 0x00, 0xF0, 0x0F, 0xFF,
    0x00, 0x00, 0x1F, 0x0F, 0xFF, 0x00,
    0xF0, 0x3F, 0xFF, 0x00, 0x00, 0x7F,
    0x0F, 0xFF, 0x00, 0xF0, 0x7F, 0xFF,
    0xF0, 0x00, 0xFF, 0x0F, 0xFC, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00
};

BYTE code tOSDColortempIcon8ColorFont[]=
{
    // colortemp-1_2_3
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0xF0, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0xF0, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0x90, 0x00, 0xFC,
    0x08, 0x00, 0x03, 0xCC, 0x00, 0x00,
    0xE0, 0x07, 0x00, 0x86, 0x01, 0x0F,
    0x7F, 0x00, 0x03, 0xF8, 0x1F, 0x00,
    0xC3, 0x03, 0x1F, 0x3F, 0x80, 0x83,
    0xFC, 0x3F, 0x80, 0xC3, 0x83, 0x3F,
    0x3F, 0xC0, 0xC0, 0xFC, 0x3F, 0xC0,
    0x0F, 0xC0, 0x3F
};

BYTE code tOSDColorIcon8ColorFont[]=
{
    // color_2_3
    0x84, 0xF8, 0x00, 0x93, 0x07, 0xFF,
    0x16, 0x00, 0xFC, 0x1E, 0x07, 0xF8,
    0xF0, 0x7F, 0x01, 0x00, 0xFE, 0x3F,
    0x0F, 0x08, 0xE7, 0xF0, 0x07, 0x04,
    0x00, 0xE3, 0x03, 0x1E, 0x02, 0xE1,
    0xC0, 0x01, 0x00, 0x03, 0xC1, 0x00,
    0x3C, 0x41, 0x80, 0x80, 0x00, 0x80,
    0x07, 0x00, 0x00, 0xF0, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0xC2, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0C, 0x00, 0x00, 0x84, 0x00, 0x00,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // color_2_4
    0x00, 0x00, 0x00, 0x3F, 0xF0, 0xE0,
    0x30, 0x00, 0xF8, 0xC0, 0xF0, 0x00,
    0x0C, 0xFC, 0x78, 0xE7, 0x00, 0x7E,
    0xD0, 0x1E, 0x80, 0x0F, 0x1F, 0x0F,
    0x7E, 0xE0, 0x8F, 0xF8, 0x07, 0x70,
    0xC3, 0xCF, 0x07, 0x1F, 0xB0, 0xC7,
    0xFE, 0x03, 0xF8, 0xE1, 0xE3, 0x01,
    0x0F, 0xDC, 0xF1, 0x7F, 0x01, 0xFE,
    0xF0, 0xF1, 0x00, 0x87, 0xFE, 0x78,
    0x77, 0x80, 0xF7, 0x78, 0x78, 0x80,
    0x07, 0xFF, 0x7C, 0x77, 0x80, 0xFF,
    0x70, 0x3C, 0xC0, 0x03, 0xFB, 0x3C,
    0x37, 0xC0, 0xFF, 0x70, 0x3E, 0xC0,
    0x43, 0xFD, 0x1E, 0x33, 0xE0, 0xFD,
    // color_3_4
    0x34, 0x1E, 0xE0, 0x43, 0xFF, 0x1F,
    0x33, 0xE0, 0xFE, 0x34, 0x1F, 0xE0,
    0x03, 0xFE, 0x1F, 0x33, 0xE0, 0xFE,
    0x30, 0x1F, 0xE0, 0x03, 0xFF, 0x1F,
    0x33, 0xE0, 0xFF, 0x30, 0x0F, 0xF0,
    0x03, 0xFF, 0x0F, 0x33, 0xF0, 0xFF,
    0x30, 0x0F, 0xF0, 0x03, 0xFF, 0x0F,
    0x13, 0xF0, 0xFF, 0x30, 0x0F, 0xF0,
    0x03, 0xFF, 0x0F, 0x13, 0xF0, 0xFF,
    0x03, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // color_3_5
    0x00, 0x00, 0x00, 0x01, 0xF8, 0xF0,
    0x1E, 0x00, 0xF8, 0xE0, 0xF0, 0x00,
    0x01, 0xF8, 0xF8, 0x0E, 0x00, 0xFC,
    0xF0, 0x78, 0x00, 0x00, 0xFC, 0x78,
    0x0F, 0x00, 0xFC, 0xF0, 0x7C, 0x00,
    0x08, 0x7E, 0x3C, 0x87, 0x80, 0x7E,
    0x70, 0x3C, 0x80, 0x08, 0x7E, 0x3E,
    0x87, 0x80, 0x7F, 0xF0, 0x3E, 0x80,
    0x08, 0x3F, 0x3E, 0xCF, 0xC0, 0x7F,
    0xB0, 0x1F, 0x80, 0x0F, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

BYTE code tOSDOsdSetupIcon8ColorFont[]=
{
    // osdsetup_2_4
    0x0F, 0xDF, 0x3C, 0xF0, 0x00, 0xED,
    0x00, 0x1E, 0x00, 0x0F, 0xF5, 0x0E,
    0xF0, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0xF0, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xF1, 0x00,
    0xF0, 0x0E, 0xE0, 0x00, 0x00, 0x1F,
    0x81, 0xA0, 0x60, 0x06, 0x1F, 0x60,
    0xF0, 0x60, 0x9F, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0xF0, 0x00, 0xFF,
    0x88, 0x03, 0x00, 0x87, 0xFF, 0x07,
    // osdsetup_3_3
    0x78, 0x00, 0xFF, 0x1F, 0xFB, 0xFB,
    0xD0, 0x04, 0xF0, 0x03, 0xF0, 0x0F,
    0x1F, 0xF0, 0xF0, 0xE0, 0x0F, 0xF0,
    0x01, 0xF0, 0x0F, 0x0F, 0x70, 0xF0,
    0xF0, 0x0F, 0xFE, 0x00, 0x0E, 0x01,
    0x0F, 0xFF, 0x07, 0xF0, 0x00, 0xFE,
    0x00, 0x06, 0x01, 0x0F, 0xF9, 0x00,
    0xF0, 0x07, 0xE3, 0x00, 0x00, 0x07,
    0x00, 0x03, 0x00, 0x00, 0x07, 0x00,
    0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};


BYTE code tOSDResetIcon8ColorFont[]=
{
    // reset_2_1
    0x00, 0x1F, 0x07, 0x00, 0x00, 0x1F,
    0x00, 0x07, 0x00, 0x00, 0x17, 0x0F,
    0x00, 0x00, 0x1F, 0x00, 0x0F, 0x00,
    0x00, 0x1F, 0x0F, 0x00, 0x00, 0x3F,
    0x00, 0x0F, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x04, 0x00, 0x00, 0x0E,
    0x00, 0x08, 0x06, 0x00, 0x1F, 0x08,
    0x00, 0x07, 0x1F, 0x00, 0x00, 0x0F,
    0x00, 0x1F, 0x00, 0x00, 0x0F, 0x1F,
    0x00, 0x00, 0x0F, 0x00, 0x1F, 0x00,
    // reset_2_2
    0x00, 0x0F, 0x1F, 0xFF, 0xC0, 0x00,
    0xE0, 0x00, 0x80, 0x0F, 0x00, 0x00,
    0xEF, 0x80, 0x00, 0xD0, 0x00, 0x00,
    0x0E, 0x00, 0x00, 0xED, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x0C, 0x00, 0x00,
    0x4B, 0x00, 0x00, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x00, 0xC0, 0x00, 0x00,
    0xC0, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0xFE, 0x00, 0x80, 0xF0, 0x80, 0x00,
    0x0F, 0xC0, 0x00, 0xFF, 0xC0, 0xF0,
    // reset_2_4
    0x00, 0xC0, 0x3F, 0x00, 0x00, 0x60,
    0x00, 0x1F, 0x00, 0x00, 0x10, 0x0F,
    0x00, 0x00, 0x0C, 0x00, 0x03, 0x00,
    0x00, 0x02, 0x01, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1F, 0x08, 0x00, 0x07, 0x1F,
    0x00, 0x08, 0x07, 0x00, 0x1F, 0x08,
    0x00, 0x07, 0x1F, 0x00, 0x00, 0x0F,
    0x00, 0x1F, 0x10, 0x00, 0x0F, 0x3F,
    0x00, 0x10, 0x0F, 0x00, 0x3F, 0x00,
    // reset_2_5
    0x00, 0x1F, 0x3F, 0x0F, 0x80, 0x00,
    0x10, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0xE1, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x0E, 0x00, 0x00, 0xE1, 0x00, 0x00,
    0x50, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x2D, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0x80, 0x00,
    0xF0, 0x00, 0x80, 0xE1, 0x00, 0x00,
    0x1F, 0x80, 0x00, 0xFE, 0x00, 0x80,
    0xE1, 0x00, 0x00, 0x0F, 0x80, 0x00,
    0xFE, 0x00, 0x00, 0xE0, 0x00, 0x00,
    0x2F, 0x00, 0x00, 0xFC, 0x00, 0x00,
};
#if 0//Enable_OsdEngine1
BYTE code tOSDExitIcon8ColorFont[]=
{
    // exit2_1_4
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0xF0, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x03,
    0xF0, 0x00, 0xFC, 0x00, 0x0C, 0x03,
    0x0F, 0xF3, 0x30, 0xF0, 0x0F, 0xCF,
    0x00, 0xC0, 0x3F, 0x3F, 0x3F, 0x00,
    0xC0, 0xFF, 0xFF, 0x34, 0x00, 0xFF,
    0x4B, 0xFF, 0x00, 0xB3, 0xFF, 0xFF,
    0x34, 0x00, 0xFF, 0x4B, 0xFF, 0x00,
    0xB3, 0xFF, 0xFF, 0x34, 0x00, 0xFF,
    0x4B, 0xFF, 0x00, 0xB3, 0xFF, 0xFF,
    0x34, 0x00, 0xFF, 0x4B, 0xFF, 0x01,
    // exit2_1_5
    0xB3, 0xFE, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xF0, 0x00, 0x10, 0x00, 0x88,
    0xE0, 0x70, 0x70, 0x16, 0x08, 0xF0,
    0x89, 0xF0, 0x08, 0x77, 0xF0, 0xF0,
    0xF0, 0x08, 0xF0, 0x0F, 0xF0, 0x08,
    0xFF, 0xF0, 0xF0, 0xF0, 0x08, 0xF0,
    0x0F, 0xF0, 0x08, 0xFF, 0xF0, 0xF0,
    0xF0, 0x08, 0xF0, 0x0F, 0xF0, 0x08,
    0xFF, 0xF0, 0xF0, 0xF0, 0x08, 0xF0,
    0x0F, 0xF0, 0x38, 0xFF, 0xC0, 0xF0,
    0xF0, 0xF8, 0x00, 0x3F, 0xF0, 0xF8,
    0xFC, 0x00, 0xF0, 0x0F, 0xF8, 0x00,
    0xFF, 0xE0, 0xF8, 0xF0, 0x00, 0xC0,
};
#else
BYTE code tOSDExitIcon8ColorFont[]=
{
  // exit3_1_4
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0x00, 0xFF, 
  0x00, 0x00, 0x00, 0x0F, 0xFF, 0x03, 
  0xF0, 0x00, 0xFC, 0x00, 0x0C, 0x03, 
  0x0F, 0xF3, 0x30, 0xF0, 0x0F, 0xCF, 
  0x00, 0xC0, 0x3F, 0x7F, 0x3F, 0x00, 
  0x80, 0xFF, 0xFF, 0x3C, 0x00, 0xFF, 
  0x83, 0xFF, 0x00, 0x77, 0xFF, 0xFF, 
  0x78, 0x00, 0xFF, 0x87, 0xFF, 0x00, 
  0x77, 0xFF, 0xFF, 0x78, 0x00, 0xFF, 
  0x87, 0xFF, 0x00, 0x77, 0xFF, 0xFF, 
  0x78, 0x00, 0xFF, 0x87, 0xFF, 0x01, 
  // exit3_1_5
  0x77, 0xFE, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0F, 0xF0, 0x00, 0x10, 0x00, 0x88, 
  0xE0, 0x70, 0x70, 0x16, 0x08, 0xF0, 
  0x89, 0xF0, 0x08, 0x77, 0xF0, 0xF0, 
  0xF0, 0x08, 0xF0, 0x0F, 0xF0, 0x08, 
  0xFF, 0xF0, 0xF0, 0xF0, 0x08, 0xF0, 
  0x0F, 0xF0, 0x08, 0xFF, 0xF0, 0xF0, 
  0xF0, 0x08, 0xF0, 0x0F, 0xF0, 0x08, 
  0xFF, 0xF0, 0xF0, 0xF0, 0x08, 0xF0, 
  0x0F, 0xF0, 0x38, 0xFF, 0xC0, 0xF0, 
  0xF0, 0xF8, 0x00, 0x3F, 0xF0, 0xF8, 
  0xFC, 0x00, 0xF0, 0x0F, 0xF8, 0x00, 
  0xFF, 0xE0, 0xF8, 0xF0, 0x00, 0xC0, 

};
#endif
#endif


//=================================================
//=================================================
//=================================================
//=================================================
//=================================================

#if (DisplayLogo==EnvisionLOGO)
  WORD code tOSDLogoFont[] =  // Envision logo
  {
  // 0x000(0) :   [0x000(0)]
  0x5FFF, 0xD000,
  // 0x001(1) :   [0x002(2)]
  0x5FFF, 0xA000, 0x3FFF,
  // 0x002(2) :   [0x005(5)]
  0x5FFF, 0xA0FF, 0x3FFF,
  // 0x003(3) :   [0x008(8)]
  0x5FFF, 0xDFF8,
  // 0x004(4) :   [0x00A(10)]
  0x5FFF, 0xB000, 0x1004, 0x1006,
  // 0x005(5) :   [0x00E(14)]
  0x5FFF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x4000,
  // 0x006(6) :   [0x019(25)]
  0xFFFF, 0x17FF, 0x13FF, 0x11FF,
  // 0x007(7) :   [0x01D(29)]
  0xFFFF, 0x3FFF,
  // 0x008(8) :   [0x01F(31)]
  0x5FFF, 0xDFFC,
  // 0x009(9) :   [0x021(33)]
  0x5FFF, 0xD001,
  // 0x00A(10) :   [0x023(35)]
  0x5FFF, 0x1000, 0x2800, 0x2C00, 0x2E00, 0x1F00, 0x4F80, 0x1FC0,
  // 0x00B(11) :   [0x02B(43)]
  0x5FFF, 0x27FF, 0x13FF, 0x21FF, 0x20FF, 0x207F, 0x103F, 0x201F, 0x100F,
  // 0x00C(12) :   [0x034(52)]
  0xCFFF, 0x2FFE, 0x2FFC, 0x2FF8,
  // 0x00D(13) :   [0x038(56)]
  0x5FFF, 0x2E00, 0x2C00, 0x2800, 0x3000, 0x2001, 0x1003, 0x1007,
  // 0x00E(14) :   [0x040(64)]
  0x5FFF, 0x10FF, 0x21FF, 0x23FF, 0x27FF, 0x6FFF,
  // 0x00F(15) :   [0x046(70)]
  0x5FFF, 0xDFC0,
  // 0x010(16) :   [0x048(72)]
  0x5FFF, 0xD03F,
  // 0x011(17) :   [0x04A(74)]
  0x7FFF, 0x1FFE, 0x1FF8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F80, 0x1F00, 0x2E00, 0x2C00,
  // 0x012(18) :   [0x054(84)]
  0x4FFF, 0x1FFE, 0x1F00, 0x1C00, 0x8000, 0x1007, 0x107F, 0x10FF,
  // 0x013(19) :   [0x05C(92)]
  0x4FFF, 0xA000, 0x4FFF,
  // 0x014(20) :   [0x05F(95)]
  0x4FFF, 0x10FF, 0x1003, 0x8000, 0x1C00, 0x1FE0, 0x1FFC, 0x1FFF,
  // 0x015(21) :   [0x067(103)]
  0x6FFF, 0x17FF, 0x10FF, 0x107F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x4000,
  // 0x016(22) :   [0x071(113)]
  0xFFFF, 0x1FFF, 0x27FF,
  // 0x017(23) :   [0x074(116)]
  0x5FFF, 0xD007,
  // 0x018(24) :   [0x076(118)]
  0xBFFF, 0x1FFE, 0x1FFC, 0x2FF8, 0x2FF0, 0x1FE0,
  // 0x019(25) :   [0x07C(124)]
  0x5FFF, 0x1FFC, 0x1FE0, 0x1F00, 0x1C00, 0x1800, 0x7000, 0x1003,
  // 0x01A(26) :   [0x084(132)]
  0x4FFF, 0x1800, 0x9000, 0x101F, 0x17FF, 0x2FFF,
  // 0x01B(27) :   [0x08A(138)]
  0x4FFF, 0x101F, 0x1001, 0x8000, 0x1C00, 0x1FE0, 0x1FF8, 0x1FFE,
  // 0x01C(28) :   [0x092(146)]
  0x6FFF, 0x13FF, 0x107F, 0x101F, 0x200F, 0x1007, 0x1003, 0x1001, 0x4000,
  // 0x01D(29) :   [0x09B(155)]
  0xFFFF, 0x27FF, 0x13FF,
  // 0x01E(30) :   [0x09E(158)]
  0x5FFF, 0xB000, 0x1002, 0x1003,
  // 0x01F(31) :   [0x0A2(162)]
  0x5FFF, 0x107F, 0x103F, 0x101F, 0x200F, 0x1007, 0x1003, 0x1001, 0x5000,
  // 0x020(32) :   [0x0AB(171)]
  0xEFFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF,
  // 0x021(33) :   [0x0B0(176)]
  0xF000, 0x3000,
  // 0x022(34) :   [0x0B2(178)]
  0xFFF8, 0x3FF8,
  // 0x023(35) :   [0x0B4(180)]
  0xF007, 0x3007,
  // 0x024(36) :   [0x0B6(182)]
  0x1000, 0x2800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x5FFF,
  // 0x025(37) :   [0x0C3(195)]
  0x20FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x5000, 0x1800, 0x1C00, 0x1E00, 0x1F00,
  // 0x026(38) :   [0x0D0(208)]
  0xAFFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x100F,
  // 0x027(39) :   [0x0D9(217)]
  0xFFFC, 0x3FFC,
  // 0x028(40) :   [0x0DB(219)]
  0xF001, 0x3001,
  // 0x029(41) :   [0x0DD(221)]
  0x1FC0, 0x2FE0, 0x2FF0, 0x1FF8, 0x2FFC, 0x2FFE, 0x8FFF,
  // 0x02A(42) :   [0x0E4(228)]
  0x300F, 0x2007, 0x2003, 0x1001, 0x4000, 0x2800, 0x2C00, 0x1E00, 0x1F00,
  // 0x02B(43) :   [0x0ED(237)]
  0xAFFF, 0x27FF, 0x23FF, 0x21FF, 0x20FF,
  // 0x02C(44) :   [0x0F2(242)]
  0x1FF0, 0x2FE0, 0x2FC0, 0x2F80, 0x2F00, 0x2E00, 0x1C00, 0x4800, 0x2000,
  // 0x02D(45) :   [0x0FB(251)]
  0x1007, 0x200F, 0x201F, 0x103F, 0x207F, 0x40FF, 0x21FF, 0x23FF, 0x17FF, 0x1FFF,
  // 0x02E(46) :   [0x105(261)]
  0xFFC0, 0x3FC0,
  // 0x02F(47) :   [0x107(263)]
  0xF03F, 0x303F,
  // 0x030(48) :   [0x109(265)]
  0x3800, 0x2000, 0xD001,
  // 0x031(49) :   [0x10C(268)]
  0x11FF, 0x13FF, 0x17FF, 0xFFFF,
  // 0x032(50) :   [0x110(272)]
  0x1800, 0x1C00, 0x3E00, 0x9F00, 0x4FFF,
  // 0x033(51) :   [0x115(277)]
  0x33FF, 0xB1FF, 0x4FFF,
  // 0x034(52) :   [0x118(280)]
  0x1FE0, 0x2FC0, 0x4F80, 0x5F00, 0x6E00,
  // 0x035(53) :   [0x11D(285)]
  0x1007, 0x201F, 0x103F, 0x207F, 0x20FF, 0x61FF, 0x43FF,
  // 0x036(54) :   [0x124(292)]
  0x1000, 0x2C00, 0x1E00, 0x2F00, 0x2F80, 0x6FC0, 0x4FE0,
  // 0x037(55) :   [0x12B(299)]
  0x13FF, 0x21FF, 0x40FF, 0x507F, 0x603F,
  // 0x038(56) :   [0x130(304)]
  0xF003, 0x3003,
  // 0x039(57) :   [0x132(306)]
  0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x2FF8, 0x1FFC, 0x1FFE, 0x6FFF,
  // 0x03A(58) :   [0x13E(318)]
  0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x6000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80,
  // 0x03B(59) :   [0x14B(331)]
  0x9FFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007,
  // 0x03C(60) :   [0x155(341)]
  0x9FFF, 0x9000,
  // 0x03D(61) :   [0x157(343)]
  0x9FFF, 0x97FF,
  // 0x03E(62) :   [0x159(345)]
  0x2F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0xAFFF,
  // 0x03F(63) :   [0x161(353)]
  0x100F, 0x1007, 0x1003, 0x1001, 0x5000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8,
  // 0x040(64) :   [0x16F(367)]
  0x5FFF, 0x17FF, 0x13FF, 0x11FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x3000,
  // 0x041(65) :   [0x17B(379)]
  0xFFFF, 0x2FFF, 0x17FF,
  // 0x042(66) :   [0x17E(382)]
  0x1F00, 0x2F80, 0x2FC0, 0x1FE0, 0x2FF0, 0x4FF8, 0x2FFC, 0x2FFE, 0x2FFF,
  // 0x043(67) :   [0x187(391)]
  0x107F, 0x203F, 0x201F, 0x200F, 0x2007, 0x2003, 0x1001, 0x5000, 0x1800,
  // 0x044(68) :   [0x190(400)]
  0x1FFE, 0x2FFC, 0x2FF8, 0x2FF0, 0x2FE0, 0x2FC0, 0x1F80, 0x2F00, 0x2E00, 0x2C00,
  // 0x045(69) :   [0x19A(410)]
  0x1000, 0x2001, 0x2003, 0x1007, 0x200F, 0x201F, 0x203F, 0x207F, 0x20FF, 0x11FF, 0x13FF,
  // 0x046(70) :   [0x1A5(421)]
  0x2001, 0x2000, 0x3800, 0x2C00, 0x2E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF8, 0x1FFC, 0x1FFF,
  // 0x047(71) :   [0x1B1(433)]
  0x4FFF, 0x17FF, 0x13FF, 0x11FF, 0x107F, 0x101F, 0x9000,
  // 0x048(72) :   [0x1B8(440)]
  0x9FFF, 0x17FF, 0x8000,
  // 0x049(73) :   [0x1BB(443)]
  0xAFFF, 0x8000,
  // 0x04A(74) :   [0x1BD(445)]
  0xAFFF, 0x13FF, 0x7000,
  // 0x04B(75) :   [0x1C0(448)]
  0xCFFF, 0x11FF, 0x107F, 0x101F, 0x1007, 0x1003, 0x1001,
  // 0x04C(76) :   [0x1C7(455)]
  0xFE00, 0x3E00,
  // 0x04D(77) :   [0x1C9(457)]
  0xF3FF, 0x33FF,
  // 0x04E(78) :   [0x1CB(459)]
  0xFFE0, 0x3FE0,
  // 0x04F(79) :   [0x1CD(461)]
  0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0xCFFF,
  // 0x050(80) :   [0x1D4(468)]
  0x1003, 0x1001, 0x5000, 0x2800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC,
  // 0x051(81) :   [0x1E1(481)]
  0x3FFF, 0x17FF, 0x13FF, 0x11FF, 0x20FF, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x4000,
  // 0x052(82) :   [0x1ED(493)]
  0x2000, 0xFFFF, 0x1FFF,
  // 0x053(83) :   [0x1F0(496)]
  0x27FF, 0xFFFF, 0x1FFF,
  // 0x054(84) :   [0x1F3(499)]
  0x1FF8, 0x1FFC, 0x1FFE, 0xFFFF,
  // 0x055(85) :   [0x1F7(503)]
  0x4000, 0x1800, 0x1C00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x4FFF,
  // 0x056(86) :   [0x203(515)]
  0x13FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x5000, 0x2800, 0x1C00,
  // 0x057(87) :   [0x210(528)]
  0xBFFF, 0x17FF, 0x13FF, 0x11FF, 0x20FF, 0x107F, 0x103F,
  // 0x058(88) :   [0x217(535)]
  0x1800, 0x2C00, 0x2E00, 0x1F00, 0x2F80, 0x2FC0, 0x2FE0, 0x2FF0, 0x2FF8, 0x1FFC, 0x1FFE,
  // 0x059(89) :   [0x222(546)]
  0x13FF, 0x21FF, 0x20FF, 0x207F, 0x203F, 0x201F, 0x100F, 0x2007, 0x2003, 0x2001,
  // 0x05A(90) :   [0x22C(556)]
  0x3FFF, 0x2FFE, 0x2FFC, 0x4FF8, 0x2FF0, 0x2FE0, 0x1FC0, 0x2F80,
  // 0x05B(91) :   [0x234(564)]
  0x1800, 0x5000, 0x2001, 0x2003, 0x2007, 0x200F, 0x201F, 0x103F, 0x107F,
  // 0x05C(92) :   [0x23D(573)]
  0x13FF, 0x27FF, 0xFFFF,
  // 0x05D(93) :   [0x240(576)]
  0xFFFF, 0x3001,
  // 0x05E(94) :   [0x242(578)]
  0x1E00, 0x1FE0, 0xFFFF, 0x1FFF,
  // 0x05F(95) :   [0x246(582)]
  0x2000, 0x1F00, 0xFFFF,
  // 0x060(96) :   [0x249(585)]
  0x3000, 0xFFFF,
  // 0x061(97) :   [0x24B(587)]
  0x3000, 0x1F00, 0x1FFE, 0xDFFF,
  // 0x062(98) :   [0x24F(591)]
  0x5000, 0x1800, 0x1E00, 0x1F00, 0x6F80, 0x4FC0,
  // 0x063(99) :   [0x255(597)]
  0x1FFF, 0x17FF, 0x13FF, 0x21FF, 0x20FF, 0xB07F,
  // 0x064(100) :   [0x25B(603)]
  0x1FFE, 0xFFFF, 0x2FFF,
  // 0x065(101) :   [0x25E(606)]
  0x2000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x5FFF,
  // 0x066(102) :   [0x26B(619)]
  0x10FF, 0x107F, 0x103F, 0x101F, 0x200F, 0x1007, 0x1003, 0x1001, 0x5000, 0x1800, 0x1C00, 0x1E00, 0x1F00,
  // 0x067(103) :   [0x278(632)]
  0xFFFF, 0x2FFF, 0x1000,
  // 0x068(104) :   [0x27B(635)]
  0xFFFF, 0x2FFF, 0x10FF,
  // 0x069(105) :   [0x27E(638)]
  0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x9FFF,
  // 0x06A(106) :   [0x288(648)]
  0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x5000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x2F80, 0x1FC0, 0x1FE0,
  // 0x06B(107) :   [0x295(661)]
  0x6FFC, 0x17FC, 0x13FC, 0x11FC, 0x10FC, 0x107C, 0x103C, 0x101C, 0x200C, 0x3000,
  // 0x06C(108) :   [0x29F(671)]
  0x3000, 0x3800, 0x2C00, 0x2E00, 0x2F00, 0x2F80, 0x2FC0, 0x1FE0, 0x1FF0,
  // 0x06D(109) :   [0x2A8(680)]
  0x1FFF, 0x27FF, 0x23FF, 0x21FF, 0x30FF, 0x10FE, 0x107C, 0x103C, 0x1038, 0x1018, 0x3000,
  // 0x06E(110) :   [0x2B3(691)]
  0x2F00, 0x2E00, 0x2C00, 0x2800, 0x2000, 0x2001, 0x2003, 0x2007, 0x200F,
  // 0x06F(111) :   [0x2BC(700)]
  0x107F, 0x20FF, 0x21FF, 0x23FF, 0x27FF, 0x9FFF,
  // 0x070(112) :   [0x2C2(706)]
  0x9001, 0x2000, 0x3800, 0x2C00, 0x2E00,
  // 0x071(113) :   [0x2C7(711)]
  0xBFFF, 0x27FF, 0x13FF, 0x11FF, 0x107F, 0x101F, 0x1000,
  // 0x072(114) :   [0x2CE(718)]
  0xFFFF, 0x1FFE, 0x1FF8, 0x1800,
  // 0x073(115) :   [0x2D2(722)]
  0x5FC0, 0x6F80, 0x2F00, 0x1E00, 0x1800, 0x3000,
  // 0x074(116) :   [0x2D8(728)]
  0xC07F, 0x20FF, 0x21FF, 0x23FF,
  // 0x075(117) :   [0x2DC(732)]
  0x3E00, 0x5F00, 0x4F80, 0x2FC0, 0x2FE0, 0x2FF0,
  // 0x076(118) :   [0x2E2(738)]
  0x13FF, 0x61FF, 0x20FF, 0x207F, 0x103F, 0x201F, 0x1007, 0x1003, 0x2000,
  // 0x077(119) :   [0x2EB(747)]
  0xFFFF, 0x1FFE, 0x1FF8, 0x1FE0,
  // 0x078(120) :   [0x2EF(751)]
  0x1FE0, 0x6FC0, 0x2F80, 0x2F00, 0x1E00, 0x2C00, 0x4000,
  // 0x079(121) :   [0x2F6(758)]
  0x303F, 0x507F, 0x40FF, 0x21FF, 0x23FF, 0x27FF,
  // 0x07A(122) :   [0x2FC(764)]
  0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x2FF8, 0x1FFC, 0x1FFE, 0xAFFF,
  // 0x07B(123) :   [0x304(772)]
  0x1007, 0x1003, 0x1001, 0x6000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8,
  // 0x07C(124) :   [0x311(785)]
  0x5FFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1007, 0x1003, 0x3000,
  // 0x07D(125) :   [0x31D(797)]
  0x9000, 0x9FFF,
  // 0x07E(126) :   [0x31F(799)]
  0x90FF, 0x9FFF,
  // 0x07F(127) :   [0x321(801)]
  0x9FF8, 0x9FFF,
  // 0x080(128) :   [0x323(803)]
  0x9007, 0x9FFF,
  // 0x081(129) :   [0x325(805)]
  0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0xEFFF,
  // 0x082(130) :   [0x32A(810)]
  0x5000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x9FFF,
  // 0x083(131) :   [0x330(816)]
  0x9001, 0x9FFF,
  // 0x084(132) :   [0x332(818)]
  0x1FF0, 0x2FF8, 0x2FFC, 0x2FFE, 0xBFFF,
  // 0x085(133) :   [0x337(823)]
  0x200F, 0x101F, 0x203F, 0x207F, 0x20FF, 0x9FFF,
  // 0x086(134) :   [0x33D(829)]
  0x9FC0, 0x9FFF,
  // 0x087(135) :   [0x33F(831)]
  0x903F, 0x9FFF,
  // 0x088(136) :   [0x341(833)]
  0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFE, 0xBFFF,
  // 0x089(137) :   [0x349(841)]
  0x7000, 0x1800, 0x1F00, 0x1FF8, 0x8FFF,
  // 0x08A(138) :   [0x34E(846)]
  0xA000, 0x8FFF,
  // 0x08B(139) :   [0x350(848)]
  0x9000, 0x103F, 0x8FFF,
  // 0x08C(140) :   [0x353(851)]
  0x2000, 0x1001, 0x1003, 0x1007, 0x101F, 0x107F, 0x10FF, 0xAFFF,
  // 0x08D(141) :   [0x35B(859)]
  0x17FF, 0xFFFF, 0x2FFF,
  // 0x08E(142) :   [0x35E(862)]
  0x9FFC, 0x9FFF,
  // 0x08F(143) :   [0x360(864)]
  0x2FF8, 0x1FFC, 0x1FFE, 0xEFFF,
  // 0x090(144) :   [0x364(868)]
  0x5000, 0x1800, 0x1C00, 0x1F00, 0x1FE0, 0x1FFC, 0x8FFF,
  // 0x091(145) :   [0x36B(875)]
  0x101F, 0x9000, 0x1800, 0x7FFF,
  // 0x092(146) :   [0x36F(879)]
  0x1FFF, 0xA000, 0x7FFF,
  // 0x093(147) :   [0x372(882)]
  0x1C00, 0x8000, 0x1001, 0x101F, 0x7FFF,
  // 0x094(148) :   [0x377(887)]
  0x1000, 0x1001, 0x1003, 0x1007, 0x200F, 0x101F, 0x107F, 0x13FF, 0x9FFF,
  // 0x095(149) :   [0x380(896)]
  0x9003, 0x9FFF,
  // 0x096(150) :   [0x382(898)]
  0x1FFC, 0x1FFE, 0xFFFF, 0x1FFF,
  // 0x097(151) :   [0x386(902)]
  0x3000, 0x2800, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x9FFF,
  // 0x098(152) :   [0x38D(909)]
  0x4FFF, 0xB000, 0x3FFF,
  // 0x099(153) :   [0x390(912)]
  0x4FFF, 0xB007, 0x3FFF,
  // Total  [0x393(1830)]
  // Orginial Total:  154 fonts ,  Size:(4158)]
  0x0000

    };


WORD code tMainSmallLogo[]=
{
  // 0x000(0) : Envision_1_1  [0x000(0)]
  0xB000, 0x203F, 0x4030, 0x103F, 
  // 0x001(1) : Envision_1_2  [0x004(4)]
  0xB000, 0x2F98, 0x101C, 0x101E, 0x101F, 0x101B, 0x1F99, 
  // 0x002(2) : Envision_1_3  [0x00B(11)]
  0xB000, 0x2066, 0x2067, 0x1063, 0x1863, 0x1C61, 
  // 0x003(3) : Envision_1_4  [0x011(17)]
  0xB000, 0x200C, 0x201C, 0x1018, 0x1838, 0x1830, 
  // 0x004(4) : Envision_1_5  [0x017(23)]
  0xB000, 0x1C1F, 0x1C3F, 0x1C70, 0x2C60, 0x1C70, 0x1C3F, 
  // 0x005(5) : Envision_1_6  [0x01E(30)]
  0xB000, 0x1C18, 0x1E18, 0x1718, 0x2318, 0x1018, 0x1C18, 
  // 0x006(6) : Envision_1_7  [0x025(37)]
  0xB000, 0x13FC, 0x17FE, 0x1E07, 0x4C03, 
  // 0x007(7) : Envision_1_8  [0x02A(42)]
  0xB000, 0x2180, 0x11C0, 0x11E0, 0x11F0, 0x11B8, 0x119C, 
  // 0x008(8) : Envision_1_9  [0x031(49)]
  0xB000, 0x7600, 
  // 0x009(9) : Envision_2_1  [0x033(51)]
  0x103F, 0x4030, 0x203F, 0xB000, 
  // 0x00A(10) : Envision_2_2  [0x037(55)]
  0x1F98, 0x4018, 0x2F98, 0xB000, 
  // 0x00B(11) : Envision_2_3  [0x03B(59)]
  0x1E61, 0x1760, 0x13E0, 0x11E0, 0x10E0, 0x2060, 0xB000, 
  // 0x00C(12) : Envision_2_4  [0x042(66)]
  0x1C70, 0x2EE0, 0x17C0, 0x2380, 0x1100, 0xB000, 
  // 0x00D(13) : Envision_2_5  [0x048(72)]
  0x1C0F, 0x1C00, 0x2C60, 0x1C70, 0x1C3F, 0x1C1F, 0xB000, 
  // 0x00E(14) : Envision_2_6  [0x04F(79)]
  0x1E18, 0x1718, 0x2318, 0x1718, 0x1E18, 0x1C18, 0xB000, 
  // 0x00F(15) : Envision_2_7  [0x056(86)]
  0x4C03, 0x1E07, 0x17FE, 0x13FC, 0x2000, 0x23FC, 0x7000, 
  // 0x010(16) : Envision_2_8  [0x05D(93)]
  0x118E, 0x1187, 0x1183, 0x1181, 0x3180, 0xB000, 
  // 0x011(17) : Envision_2_9  [0x063(99)]
  0x2600, 0x3E00, 0x2600, 0xB000, 
  // Total  [0x067(206)]
  // Orginial Total:  18 fonts ,  Size:(486)]
  0x0000

};



//=================================================
//=================================================
//=================================================


#elif (DisplayLogo==StaplesLOGO)
    WORD code tOSDLogoFont[] =
    {
  // 0x000(0) :   [0x000(0)]
  0xF000, 0x3000,
  // 0x001(1) :   [0x002(2)]
  0xFFFF, 0x3FFF,
  // 0x002(2) :   [0x004(4)]
  0xF000, 0x2000, 0x13FF,
  // 0x003(3) :   [0x007(7)]
  0xF000, 0x1007, 0x2FFF,
  // 0x004(4) :   [0x00A(10)]
  0xE000, 0x101F, 0x3FFF,
  // 0x005(5) :   [0x00D(13)]
  0xD000, 0x10FF, 0x4FFF,
  // 0x006(6) :   [0x010(16)]
  0xB000, 0x1001, 0x13FF, 0x5FFF,
  // 0x007(7) :   [0x014(20)]
  0xA000, 0x1007, 0x7FFF,
  // 0x008(8) :   [0x017(23)]
  0x9000, 0x101F, 0x8FFF,
  // 0x009(9) :   [0x01A(26)]
  0x8000, 0x10FF, 0x9FFF,
  // 0x00A(10) :   [0x01D(29)]
  0x6000, 0x1001, 0x13FF, 0xAFFF,
  // 0x00B(11) :   [0x021(33)]
  0x5000, 0x1007, 0xCFFF,
  // 0x00C(12) :   [0x024(36)]
  0x4000, 0x101F, 0xDFFF,
  // 0x00D(13) :   [0x027(39)]
  0x3000, 0x10FF, 0xEFFF,
  // 0x00E(14) :   [0x02A(42)]
  0x2000, 0x13FF, 0xFFFF,
  // 0x00F(15) :   [0x02D(45)]
  0x1003, 0xFFFF, 0x2FFF,
  // 0x010(16) :   [0x030(48)]
  0x1F80, 0x9FC0, 0x8FE0,
  // 0x011(17) :   [0x033(51)]
  0xF000, 0x2000, 0x1003,
  // 0x012(18) :   [0x036(54)]
  0xF000, 0x1000, 0x101F, 0x1FFF,
  // 0x013(19) :   [0x03A(58)]
  0xF000, 0x107F, 0x2FFF,
  // 0x014(20) :   [0x03D(61)]
  0xE000, 0x13FF, 0x3FFF,
  // 0x015(21) :   [0x040(64)]
  0xC000, 0x1007, 0x5FFF,
  // 0x016(22) :   [0x043(67)]
  0xB000, 0x101F, 0x6FFF,
  // 0x017(23) :   [0x046(70)]
  0xA000, 0x107F, 0x7FFF,
  // 0x018(24) :   [0x049(73)]
  0x9000, 0x13FF, 0x8FFF,
  // 0x019(25) :   [0x04C(76)]
  0x7000, 0x1007, 0xAFFF,
  // 0x01A(26) :   [0x04F(79)]
  0x6000, 0x101F, 0xBFFF,
  // 0x01B(27) :   [0x052(82)]
  0x5000, 0x10FF, 0xCFFF,
  // 0x01C(28) :   [0x055(85)]
  0x4000, 0x13FF, 0xDFFF,
  // 0x01D(29) :   [0x058(88)]
  0x2000, 0x1007, 0xFFFF,
  // 0x01E(30) :   [0x05B(91)]
  0x1000, 0x101F, 0xFFFF, 0x1FFF,
  // 0x01F(31) :   [0x05F(95)]
  0x10FF, 0xFFFF, 0x2FFF,
  // 0x020(32) :   [0x062(98)]
  0x1FE0, 0xAFF0, 0x7FF8,
  // 0x021(33) :   [0x065(101)]
  0x6000, 0x13FF, 0x9FFF, 0x27FF,
  // 0x022(34) :   [0x069(105)]
  0x4000, 0x1003, 0xDFFF,
  // 0x023(35) :   [0x06C(108)]
  0x3000, 0x101F, 0xEFFF,
  // 0x024(36) :   [0x06F(111)]
  0x2000, 0x107F, 0xFFFF,
  // 0x025(37) :   [0x072(114)]
  0x1000, 0x13FF, 0xFFFF, 0x1FFF,
  // 0x026(38) :   [0x076(118)]
  0x2FF8, 0xAFFC, 0x6FFE,
  // 0x027(39) :   [0x079(121)]
  0x77FF, 0xA3FF, 0x11FF,
  // 0x028(40) :   [0x07C(124)]
  0xFFFF, 0x2FFF, 0x1FFE,
  // 0x029(41) :   [0x07F(127)]
  0xFFFF, 0x1F01, 0x1800, 0x1000,
  // 0x02A(42) :   [0x083(131)]
  0xFFFF, 0x1FFF, 0x13FF, 0x10FF,
  // 0x02B(43) :   [0x087(135)]
  0xDFFF, 0x1FC0, 0x4E00,
  // 0x02C(44) :   [0x08A(138)]
  0xCFFF, 0x1E00, 0x5000,
  // 0x02D(45) :   [0x08D(141)]
  0xAFFF, 0x1FFC, 0x1800, 0x6000,
  // 0x02E(46) :   [0x091(145)]
  0x9FFF, 0x1FF0, 0x8000,
  // 0x02F(47) :   [0x094(148)]
  0x9FFF, 0x27FF, 0x33FF, 0x23FE, 0x23FC,
  // 0x030(48) :   [0x099(153)]
  0x5FFF, 0x1FFE, 0x1FF8, 0x1FC0, 0x1F80, 0x1E00, 0x1C00, 0x1800, 0x6000,
  // 0x031(49) :   [0x0A2(162)]
  0x4FFF, 0x1F00, 0xC000, 0x10FF,
  // 0x032(50) :   [0x0A6(166)]
  0x4FFF, 0x107F, 0x100F, 0x1001, 0xA000, 0x1C00,
  // 0x033(51) :   [0x0AC(172)]
  0x6FFF, 0x2FFE, 0x13FE, 0x11FE, 0x10FE, 0x107E, 0x203E, 0x201F, 0x200F,
  // 0x034(52) :   [0x0B5(181)]
  0x1FFF, 0x1F01, 0x1C00, 0x1800, 0x107C, 0x1000, 0x1001, 0x1110, 0x1300, 0x1301, 0x1303, 0x1101, 0x1110, 0x1010, 0x101C, 0x1800, 0x1C00, 0x1E00,
  // 0x035(53) :   [0x0C7(199)]
  0x2FFF, 0x17FF, 0x13FF, 0x21FF, 0x20FF, 0x48FF, 0x20FF, 0x21FF, 0x13FF, 0x1FFF,
  // 0x036(54) :   [0x0D1(209)]
  0x3FFE, 0xFFFF,
  // 0x037(55) :   [0x0D3(211)]
  0xD000, 0x5800,
  // 0x038(56) :   [0x0D5(213)]
  0x81FF, 0x90FF, 0x107F,
  // 0x039(57) :   [0x0D8(216)]
  0xFFFF, 0x2FFF, 0x1FE0,
  // 0x03A(58) :   [0x0DB(219)]
  0xFFFF, 0x2FFF, 0x101F,
  // 0x03B(59) :   [0x0DE(222)]
  0xFFFF, 0x1FFF, 0x2FFE,
  // 0x03C(60) :   [0x0E1(225)]
  0xFFFF, 0x1FE0, 0x2000,
  // 0x03D(61) :   [0x0E4(228)]
  0xEFFF, 0x1F00, 0x3000,
  // 0x03E(62) :   [0x0E7(231)]
  0xCFFF, 0x1FFE, 0x1C00, 0x4000,
  // 0x03F(63) :   [0x0EB(235)]
  0xBFFF, 0x1FF8, 0x6000,
  // 0x040(64) :   [0x0EE(238)]
  0xAFFF, 0x1FFE, 0x43FC, 0x11FC, 0x21F8,
  // 0x041(65) :   [0x0F3(243)]
  0x9FFF, 0x1F00, 0x8000,
  // 0x042(66) :   [0x0F6(246)]
  0x8FFF, 0x19FF, 0x11FF, 0x30FF, 0x207F, 0x203F, 0x101F,
  // 0x043(67) :   [0x0FD(253)]
  0x5FFF, 0x1FC0, 0x9E00, 0x3F00,
  // 0x044(68) :   [0x101(257)]
  0x4FFF, 0x1F00, 0xB000, 0x1003, 0x103F,
  // 0x045(69) :   [0x106(262)]
  0x3FFF, 0x1C00, 0xC000, 0x1FFE, 0x1FFF,
  // 0x046(70) :   [0x10B(267)]
  0x3FFF, 0x10FF, 0x103F, 0x100F, 0x1003, 0x1001, 0xA000,
  // 0x047(71) :   [0x112(274)]
  0x1FFC, 0x1FF8, 0x2FF0, 0x2FE0, 0x3FC0, 0x27C0, 0x23C0, 0x21C0, 0x30E0,
  // 0x048(72) :   [0x11B(283)]
  0xB000, 0x4008, 0x100C, 0x2004,
  // 0x049(73) :   [0x11F(287)]
  0x107F, 0x103F, 0x201F, 0x300F, 0x4007, 0x3003, 0x4001,
  // 0x04A(74) :   [0x126(294)]
  0x2E00, 0xAF00, 0x6F80,
  // 0x04B(75) :   [0x129(297)]
  0x7000, 0x603F, 0x501F,
  // 0x04C(76) :   [0x12C(300)]
  0x5000, 0x1003, 0xCFFF,
  // 0x04D(77) :   [0x12F(303)]
  0x4000, 0x101F, 0xCFFF, 0x1FE0,
  // 0x04E(78) :   [0x133(307)]
  0x43F8, 0xAFF8, 0x3FFC, 0x17FE,
  // 0x04F(79) :   [0x137(311)]
  0x2000, 0x1001, 0x7003, 0x1001, 0x7000,
  // 0x050(80) :   [0x13C(316)]
  0x17FF, 0xBFFF, 0x11FF, 0x1007, 0x4000,
  // 0x051(81) :   [0x141(321)]
  0x1F00, 0x1F80, 0x1FC0, 0x2FE0, 0x2FF0, 0x7FFF, 0x11FF, 0x1007, 0x2000,
  // 0x052(82) :   [0x14A(330)]
  0x5007, 0x1003, 0x107F, 0x9FFF, 0x13FF, 0x107F,
  // 0x053(83) :   [0x150(336)]
  0x4800, 0x9C00, 0x5E00,
  // 0x054(84) :   [0x153(339)]
  0x907F, 0x903F,
  // 0x055(85) :   [0x155(341)]
  0x2FFF, 0x1FFC, 0x1FF0, 0x1FE0, 0x1F80, 0x2F00, 0x1E00, 0x2C00, 0x2800, 0x5000,
  // 0x056(86) :   [0x15F(351)]
  0x1E00, 0xB000, 0x101F, 0x107F, 0x11FF, 0x13FF, 0x27FF,
  // 0x057(87) :   [0x166(358)]
  0x1001, 0xB000, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF8, 0x2FFC,
  // 0x058(88) :   [0x16D(365)]
  0x1FFE, 0x17FE, 0x11FE, 0x107E, 0x103E, 0x101F, 0x200F, 0x1007, 0x2003, 0x2001, 0x5000,
  // 0x059(89) :   [0x178(376)]
  0xA000, 0x103F, 0x7FFF,
  // 0x05A(90) :   [0x17B(379)]
  0x9000, 0x10E0, 0x6FE0, 0x2FF0,
  // 0x05B(91) :   [0x17F(383)]
  0x7000, 0x1001, 0x6007, 0x4003,
  // 0x05C(92) :   [0x183(387)]
  0x6000, 0x100F, 0xBFFF,
  // 0x05D(93) :   [0x186(390)]
  0x31F8, 0x31F0, 0x1FF0, 0x5FE0, 0x4FC0, 0x2F80,
  // 0x05E(94) :   [0x18C(396)]
  0x9000, 0x2008, 0x200C, 0x101C, 0x201E, 0x201F,
  // 0x05F(95) :   [0x192(402)]
  0x101F, 0x200F, 0x3007, 0x2003, 0x2001, 0x8000,
  // 0x060(96) :   [0x198(408)]
  0xCFFF, 0x37FF, 0x23FF, 0x11FF,
  // 0x061(97) :   [0x19C(412)]
  0x7F00, 0x9F80, 0x2FC0,
  // 0x062(98) :   [0x19F(415)]
  0x503F, 0xA01F, 0x200F, 0x1000,
  // 0x063(99) :   [0x1A3(419)]
  0xFFFF, 0x1FFC, 0x1E00, 0x1000,
  // 0x064(100) :   [0x1A7(423)]
  0x1800, 0x2C00, 0x9E00, 0x1C00, 0x1800, 0x4000,
  // 0x065(101) :   [0x1AD(429)]
  0x6060, 0x8070, 0x20F0, 0x10F8, 0x11F8,
  // 0x066(102) :   [0x1B2(434)]
  0x1004, 0x4006, 0x2007, 0xA003, 0x1001,
  // 0x067(103) :   [0x1B7(439)]
  0x8000, 0x4800, 0x1C03, 0x1C1F, 0x1C7F, 0x3FFF,
  // 0x068(104) :   [0x1BD(445)]
  0x3FFF, 0x47FF, 0x43FF, 0x17FF, 0x6FFF,
  // 0x069(105) :   [0x1C2(450)]
  0x3F80, 0xAFC0, 0x5FE0,
  // 0x06A(106) :   [0x1C5(453)]
  0x201F, 0xC000, 0x1001, 0x3007,
  // 0x06B(107) :   [0x1C9(457)]
  0x1FFC, 0xC000, 0x1007, 0x4FFF,
  // 0x06C(108) :   [0x1CD(461)]
  0xC000, 0x103F, 0x5FFF,
  // 0x06D(109) :   [0x1D0(464)]
  0x17FE, 0x93FF, 0x21FF, 0x6FFF,
  // 0x06E(110) :   [0x1D4(468)]
  0x2000, 0x1800, 0x1C00, 0x1E00, 0x1F00, 0x1FC0, 0x1FF8, 0x9FFF, 0x1FC0,
  // 0x06F(111) :   [0x1DD(477)]
  0x8000, 0x1800, 0x1FF0, 0x8FFF,
  // 0x070(112) :   [0x1E1(481)]
  0xA000, 0x1C00, 0x1FE0, 0x1FFC, 0x1FFE, 0x4FFF,
  // 0x071(113) :   [0x1E7(487)]
  0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0xA000, 0x3800,
  // 0x072(114) :   [0x1EE(494)]
  0x7FFF, 0x27FF, 0x63FF, 0x31FF,
  // 0x073(115) :   [0x1F2(498)]
  0x5E00, 0x9F00, 0x4F80,
  // 0x074(116) :   [0x1F5(501)]
  0xA01F, 0x800F,
  // 0x075(117) :   [0x1F7(503)]
  0x9000, 0x3800, 0x2C00, 0x1E00, 0x2F00, 0x1FC0,
  // 0x076(118) :   [0x1FD(509)]
  0x57FF, 0x13FF, 0x11FF, 0x107F, 0x1001, 0x9000,
  // 0x077(119) :   [0x203(515)]
  0x2FFE, 0x7FFF, 0x107F, 0x8000,
  // 0x078(120) :   [0x207(519)]
  0x1000, 0x1007, 0x9FFF, 0x10FF, 0x101F, 0x1003, 0x1001, 0x3000,
  // 0x079(121) :   [0x20F(527)]
  0x17FF, 0xFFFF, 0x17FF, 0x13FF,
  // 0x07A(122) :   [0x213(531)]
  0x7FF0, 0xAFF8, 0x1FFC,
  // 0x07B(123) :   [0x216(534)]
  0x6003, 0x9001, 0x3000,
  // 0x07C(124) :   [0x219(537)]
  0x3F80, 0x4F00, 0x5E00, 0x4C00, 0x2800,
  // 0x07D(125) :   [0x21E(542)]
  0x603F, 0x507F, 0x30FF, 0x10F8, 0x3000,
  // 0x07E(126) :   [0x223(547)]
  0x1000, 0x2800, 0x3C00, 0x2E00, 0x2F00, 0x3F80, 0x1FC0, 0x4000,
  // 0x07F(127) :   [0x22B(555)]
  0x11FF, 0x20FF, 0x207F, 0x303F, 0x201F, 0x200F, 0x2007, 0x3003, 0x1001,
  // 0x080(128) :   [0x234(564)]
  0x8FC0, 0x9FE0, 0x1FF0,
  // 0x081(129) :   [0x237(567)]
  0xC000, 0x4007, 0x2003,
  // 0x082(130) :   [0x23A(570)]
  0xA000, 0x1003, 0x7FFF,
  // 0x083(131) :   [0x23D(573)]
  0x5000, 0x1001, 0x1003, 0x100F, 0x101F, 0x10FF, 0x8FFF,
  // 0x084(132) :   [0x244(580)]
  0x11F8, 0x23F8, 0x17F8, 0x3FF8, 0xAFFC, 0x1FFE,
  // 0x085(133) :   [0x24A(586)]
  0x8001, 0xA000,
  // 0x086(134) :   [0x24C(588)]
  0xFFFF, 0x1FFF, 0x1FE0, 0x1000,
  // 0x087(135) :   [0x250(592)]
  0xFFFF, 0x1F80, 0x2000,
  // 0x088(136) :   [0x253(595)]
  0x4FE0, 0xAFF0, 0x1C18, 0x3018,
  // 0x089(137) :   [0x257(599)]
  0x5007, 0x8003, 0x5000,
  // 0x08A(138) :   [0x25A(602)]
  0xBFFF, 0x1FFE, 0x1800, 0x5000,
  // 0x08B(139) :   [0x25E(606)]
  0xAFFF, 0x1FF0, 0x7000,
  // 0x08C(140) :   [0x261(609)]
  0x6FFE, 0x3FFF, 0x1FCF, 0x8007,
  // 0x08D(141) :   [0x265(613)]
  0x8000, 0x2800, 0x2C00, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0,
  // 0x08E(142) :   [0x26E(622)]
  0x1FFF, 0x27FF, 0x23FF, 0x11FF, 0x10FF, 0x103F, 0xA000,
  // 0x08F(143) :   [0x275(629)]
  0x4FFF, 0x1FFE, 0x1FFC, 0x1FF0, 0x1FC0, 0xA000,
  // 0x090(144) :   [0x27B(635)]
  0x3800, 0x7000, 0x2001, 0x1003, 0x1007, 0x100F, 0x103F, 0x107F, 0x11FF,
  // 0x091(145) :   [0x284(644)]
  0x63FF, 0x37FF, 0x9FFF,
  // 0x092(146) :   [0x287(647)]
  0x6F80, 0x9FC0, 0x3FE0,
  // 0x093(147) :   [0x28A(650)]
  0x100F, 0xA007, 0x7003,
  // 0x094(148) :   [0x28D(653)]
  0x1FE0, 0x1FF8, 0x1FFE, 0x9FFF, 0x1FFC, 0x5C00,
  // 0x095(149) :   [0x293(659)]
  0x3000, 0x1E00, 0x1FF8, 0x7FFF, 0x21FF, 0x30FF, 0x107F,
  // 0x096(150) :   [0x29A(666)]
  0x5000, 0x1F80, 0x1FFC, 0xBFFF,
  // 0x097(151) :   [0x29E(670)]
  0x7000, 0x1800, 0x1C00, 0x1E00, 0x6F00, 0x1E00, 0x1C00,
  // 0x098(152) :   [0x2A5(677)]
  0x21FF, 0x20FF, 0x707F, 0x303F, 0x407F,
  // 0x099(153) :   [0x2AA(682)]
  0x8FFC, 0xAFFE,
  // 0x09A(154) :   [0x2AC(684)]
  0x7FFF, 0x57FE, 0x57FC, 0x13F8,
  // 0x09B(155) :   [0x2B0(688)]
  0x3800, 0xF000,
  // 0x09C(156) :   [0x2B2(690)]
  0x9000, 0x103F, 0x47FF, 0x4FFF,
  // 0x09D(157) :   [0x2B6(694)]
  0x8000, 0x10FE, 0x9FFF,
  // 0x09E(158) :   [0x2B9(697)]
  0x1001, 0xA000, 0x3800, 0x2C00, 0x2E00,
  // 0x09F(159) :   [0x2BE(702)]
  0x3FF0, 0x27F0, 0x23F0, 0x21F0, 0x11F8, 0x20F8, 0x2078, 0x2038, 0x2018,
  // 0x0A0(160) :   [0x2C7(711)]
  0x8003, 0xA001,
  // 0x0A1(161) :   [0x2C9(713)]
  0x8FFE, 0xAFFF,
  // 0x0A2(162) :   [0x2CB(715)]
  0xA000, 0x1800, 0x1C00, 0x1E00, 0x5FFF,
  // 0x0A3(163) :   [0x2D0(720)]
  0xC000, 0x13FF, 0x5FFF,
  // 0x0A4(164) :   [0x2D3(723)]
  0xA000, 0x1007, 0x7FFF,
  // 0x0A5(165) :   [0x2D6(726)]
  0x3018, 0x2008, 0x400C, 0x101F, 0x8FFF,
  // 0x0A6(166) :   [0x2DB(731)]
  0x8000, 0x11FF, 0x9FFF,
  // 0x0A7(167) :   [0x2DE(734)]
  0x6000, 0x1003, 0x17FF, 0xAFFF,
  // 0x0A8(168) :   [0x2E2(738)]
  0x5000, 0x100F, 0xCFFF,
  // 0x0A9(169) :   [0x2E5(741)]
  0x1007, 0x3003, 0x107F, 0xDFFF,
  // 0x0AA(170) :   [0x2E9(745)]
  0x1FFC, 0xFFFF, 0x2FFF,
  // 0x0AB(171) :   [0x2EC(748)]
  0x1000, 0x1800, 0x1F80, 0xFFFF,
  // 0x0AC(172) :   [0x2F0(752)]
  0x1000, 0x1003, 0x107F, 0xFFFF,
  // 0x0AD(173) :   [0x2F4(756)]
  0x17FF, 0xFFFF, 0x2FFF,
  // 0x0AE(174) :   [0x2F7(759)]
  0x7FE0, 0x9FF0, 0x2FF8,
  // 0x0AF(175) :   [0x2FA(762)]
  0x2003, 0xA001, 0x6000,
  // 0x0B0(176) :   [0x2FD(765)]
  0x1C00, 0x3E00, 0x2F00, 0x1F80, 0x2FC0, 0x1FE0, 0x1FF0, 0x1FFC, 0x1FFE, 0x5FFF,
  // 0x0B1(177) :   [0x307(775)]
  0x103F, 0x101F, 0x1007, 0xA000, 0x1800, 0x1E00, 0x1FE0, 0x2FFF,
  // 0x0B2(178) :   [0x30F(783)]
  0x2FFF, 0x1FF8, 0xC000, 0x1007, 0x2FFF,
  // 0x0B3(179) :   [0x314(788)]
  0x1800, 0x8000, 0x1001, 0x1003, 0x100F, 0x103F, 0x10FF, 0x17FF, 0x3FFF,
  // 0x0B4(180) :   [0x31D(797)]
  0x107F, 0x30FF, 0x11FF, 0x23FF, 0x17FF, 0xAFFF,
  // 0x0B5(181) :   [0x323(803)]
  0x8000, 0x1001, 0x1BFF, 0x8FFF,
  // 0x0B6(182) :   [0x327(807)]
  0x33F8, 0x43F0, 0x13FF, 0xAFFF,
  // 0x0B7(183) :   [0x32B(811)]
  0x5001, 0x1003, 0x103F, 0xBFFF,
  // 0x0B8(184) :   [0x32F(815)]
  0x1E00, 0x1F00, 0x1F07, 0xFFFF,
  // 0x0B9(185) :   [0x333(819)]
  0x101C, 0x103F, 0xFFFF, 0x1FFF,
  // 0x0BA(186) :   [0x337(823)]
  0x11FF, 0xFFFF, 0x2FFF,
  // 0x0BB(187) :   [0x33A(826)]
  0x7FF8, 0x9FFC, 0x2FFE,
  // 0x0BC(188) :   [0x33D(829)]
  0x3FFF, 0xA7FF, 0x53FF,
  // 0x0BD(189) :   [0x340(832)]
  0xFFFF, 0x2FFF, 0x1FFE,
  // 0x0BE(190) :   [0x343(835)]
  0xFFFF, 0x1FFF, 0x1FF8, 0x1000,
  // 0x0BF(191) :   [0x347(839)]
  0xFFFF, 0x1FC0, 0x2000,
  // 0x0C0(192) :   [0x34A(842)]
  0xEFFF, 0x1F00, 0x3000,
  // 0x0C1(193) :   [0x34D(845)]
  0xCFFF, 0x1FFE, 0x1800, 0x4000,
  // 0x0C2(194) :   [0x351(849)]
  0xBFFF, 0x1FF8, 0x6000,
  // 0x0C3(195) :   [0x354(852)]
  0x5FFE, 0x5FFF, 0x1FC0, 0x7000,
  // 0x0C4(196) :   [0x358(856)]
  0x43FF, 0x91FF, 0x50FF,
  // 0x0C5(197) :   [0x35B(859)]
  0xFFFF, 0x2FFF, 0x1FE0,
  // 0x0C6(198) :   [0x35E(862)]
  0xFFFF, 0x1FFF, 0x1F00, 0x1000,
  // 0x0C7(199) :   [0x362(866)]
  0xEFFF, 0x1FFE, 0x1C00, 0x2000,
  // 0x0C8(200) :   [0x366(870)]
  0xDFFF, 0x1FF8, 0x4000,
  // 0x0C9(201) :   [0x369(873)]
  0xCFFF, 0x1FC0, 0x5000,
  // 0x0CA(202) :   [0x36C(876)]
  0xBFFF, 0x1F00, 0x6000,
  // 0x0CB(203) :   [0x36F(879)]
  0x9FFF, 0x1FFE, 0x1C00, 0x7000,
  // 0x0CC(204) :   [0x373(883)]
  0x8FFF, 0x1FF8, 0x9000,
  // 0x0CD(205) :   [0x376(886)]
  0x7FFF, 0x1FC0, 0xA000,
  // 0x0CE(206) :   [0x379(889)]
  0x6FFF, 0x1F00, 0xB000,
  // 0x0CF(207) :   [0x37C(892)]
  0x4FFF, 0x1FFE, 0x1C00, 0xC000,
  // 0x0D0(208) :   [0x380(896)]
  0x3FFF, 0x1FF8, 0xE000,
  // 0x0D1(209) :   [0x383(899)]
  0x2FFF, 0x1FC0, 0xF000,
  // 0x0D2(210) :   [0x386(902)]
  0x1FFF, 0x1F00, 0xF000, 0x1000,
  // 0x0D3(211) :   [0x38A(906)]
  0x1800, 0xF000, 0x2000,
  // 0x0D4(212) :   [0x38D(909)]
  0x50FF, 0x907F, 0x203F, 0x103E, 0x1000,
  // 0x0D5(213) :   [0x392(914)]
  0xFFFF, 0x1FF8, 0x2000,
  // 0x0D6(214) :   [0x395(917)]
  0xEFFF, 0x1FE0, 0x3000,
  // 0x0D7(215) :   [0x398(920)]
  0xDFFF, 0x1F00, 0x4000,
  // 0x0D8(216) :   [0x39B(923)]
  0xCFFF, 0x1C00, 0x5000,
  // 0x0D9(217) :   [0x39E(926)]
  0xAFFF, 0x1FF8, 0x7000,
  // 0x0DA(218) :   [0x3A1(929)]
  0x9FFF, 0x1FE0, 0x8000,
  // 0x0DB(219) :   [0x3A4(932)]
  0x8FFF, 0x1F00, 0x9000,
  // 0x0DC(220) :   [0x3A7(935)]
  0x7FFF, 0x1C00, 0xA000,
  // 0x0DD(221) :   [0x3AA(938)]
  0x5FFF, 0x1FF8, 0xC000,
  // 0x0DE(222) :   [0x3AD(941)]
  0x4FFF, 0x1FE0, 0xD000,
  // 0x0DF(223) :   [0x3B0(944)]
  0x3FFF, 0x1F00, 0xE000,
  // 0x0E0(224) :   [0x3B3(947)]
  0x1FFF, 0x1FFE, 0x1C00, 0xF000,
  // 0x0E1(225) :   [0x3B7(951)]
  0x1FF8, 0xF000, 0x2000,
  // Total  [0x3BA(1908)]
  // Orginial Total:  226 fonts ,  Size:(6102)]
  0x0000

    };


WORD code tMainSmallLogo[]=
{
  // 0x000(0) : Staples_01  [0x000(0)]
  0x5000, 0x1001, 0x53FF, 0x31FF, 0x21FE, 0x21FC,
  // 0x001(1) : Staples_02  [0x006(6)]
  0x4000, 0x1001, 0x8FFF, 0x1CF8, 0x3000, 0x170C,
  // 0x002(2) : Staples_03  [0x00C(12)]
  0x3000, 0x1001, 0x8FFF, 0x1C87, 0x1087, 0x2003, 0x2701,
  // 0x003(3) : Staples_04  [0x013(19)]
  0x2000, 0x1001, 0x7FFF, 0x1FFC, 0x1008, 0x2000, 0x20C0, 0x1080, 0x1804,
  // 0x004(4) : Staples_05  [0x01C(28)]
  0x1000, 0x1001, 0x6FFF, 0x1FFC, 0x1FE0, 0x2380, 0x1187, 0x1087, 0x1080, 0x1480, 0x1440, 0x17C3,
  // 0x005(5) : Staples_06  [0x028(40)]
  0x1001, 0x7FFF, 0x1303, 0x2200, 0x1030, 0x1C39, 0x1807, 0x1200, 0x1300, 0x13F0, 0x1E38,
  // 0x006(6) : Staples_07  [0x033(51)]
  0x6FC0, 0x2FE0, 0x31E0, 0x4FE0, 0x37F0,
  // 0x007(7) : Staples_08  [0x038(56)]
  0x21FC, 0x11FE, 0x10FF, 0x40FE, 0x50FF, 0x507F,
  // 0x008(8) : Staples_09  [0x03E(62)]
  0x10FC, 0x200C, 0x180E, 0x1386, 0x110E, 0x200E, 0x183F, 0x8FFF, 0x1800,
  // 0x009(9) : Staples_10  [0x047(71)]
  0x1710, 0x1600, 0x2200, 0x1218, 0x103C, 0x103F, 0x11FF, 0x8FFF, 0x1800, 0x1000,
  // 0x00A(10) : Staples_11  [0x051(81)]
  0x1804, 0x183C, 0x18FC, 0x20FC, 0x107F, 0x9FFF, 0x1800, 0x2000,
  // 0x00B(11) : Staples_12  [0x059(89)]
  0x17C7, 0x1600, 0x2000, 0x1023, 0x9FFF, 0x1800, 0x3000,
  // 0x00C(12) : Staples_13  [0x060(96)]
  0x1C00, 0x1000, 0x1101, 0x13FF, 0x9FFF, 0x1800, 0x4000,
  // 0x00D(13) : Staples_14  [0x067(103)]
  0x17F0, 0x3FF0, 0x8FF8, 0x1800, 0x5000,
  // Total  [0x06C(216)]
  // Orginial Total:  14 fonts ,  Size:(378)]
  0x0000

};


//=================================================
//=================================================
//=================================================
#elif (DisplayLogo==WearnesLOGO)
WORD code tOSDLogoFont[] =
{
  // 0x000(0) :   [0x000(0)]
  0xA000, 0x70FF, 0x10FE, 
  // 0x001(1) :   [0x003(3)]
  0xA000, 0x3FFF, 0x1C00, 0x1800, 0x3000, 
  // 0x002(2) :   [0x008(8)]
  0xA000, 0x3FFF, 0x23FF, 0x21FF, 0x10FF, 
  // 0x003(3) :   [0x00D(13)]
  0xA000, 0x3FFF, 0x2F80, 0x2F00, 0x1E00, 
  // 0x004(4) :   [0x012(18)]
  0xA000, 0x3FFF, 0x107F, 0x203F, 0x101F, 0x100F, 
  // 0x005(5) :   [0x018(24)]
  0xA000, 0x3FFF, 0x2FF8, 0x1FF0, 0x2FE0, 
  // 0x006(6) :   [0x01D(29)]
  0xA000, 0x3FFF, 0x101F, 0x200F, 0x1007, 0x1003, 
  // 0x007(7) :   [0x023(35)]
  0xA000, 0x8FF0, 
  // 0x008(8) :   [0x025(37)]
  0xA000, 0x50FF, 0x307F, 
  // 0x009(9) :   [0x028(40)]
  0xA000, 0x5FC0, 0x3FE0, 
  // 0x00A(10) :   [0x02B(43)]
  0xA000, 0x707F, 0x10FF, 
  // 0x00B(11) :   [0x02E(46)]
  0xA000, 0x7FF0, 0x1FF8, 
  // 0x00C(12) :   [0x031(49)]
  0xA000, 0x501F, 0x303F, 
  // 0x00D(13) :   [0x034(52)]
  0xA000, 0x5FF8, 0x3FF0, 
  // 0x00E(14) :   [0x037(55)]
  0xF000, 0x3000, 
  // 0x00F(15) :   [0x039(57)]
  0x10FE, 0x20FC, 0x20F8, 0x30F0, 0x20F8, 0x20FC, 0x30FE, 0x20FF, 0x1000, 
  // 0x010(16) :   [0x042(66)]
  0x10FF, 0x207F, 0x203F, 0x201F, 0x200F, 0x2007, 0x2003, 0x2001, 0x3000, 
  // 0x011(17) :   [0x04B(75)]
  0x1E00, 0x2C00, 0x2800, 0x4000, 0x2800, 0x2C00, 0x2E00, 0x2F00, 0x1000, 
  // 0x012(18) :   [0x054(84)]
  0x100F, 0x2007, 0x1003, 0x2001, 0xC000, 
  // 0x013(19) :   [0x059(89)]
  0x2FC0, 0x1F80, 0x3F00, 0x2F80, 0x27C0, 0x13E0, 0x21F0, 0x10F8, 0x10FF, 0x107F, 0x103F, 0x1000, 
  // 0x014(20) :   [0x065(101)]
  0x1003, 0x2001, 0x4000, 0x2001, 0x1003, 0x2007, 0x100F, 0x101F, 0x3FFF, 0x1000, 
  // 0x015(21) :   [0x06F(111)]
  0x4FF0, 0x27F0, 0xBFF0, 0x1000, 
  // 0x016(22) :   [0x073(115)]
  0x107F, 0x403F, 0x501F, 0x400F, 0x4007, 
  // 0x017(23) :   [0x078(120)]
  0x2FE0, 0x5FF0, 0x5FF8, 0x4FFC, 0x2FFE, 
  // 0x018(24) :   [0x07D(125)]
  0x40FF, 0x61FF, 0x53FF, 0x37FF, 
  // 0x019(25) :   [0x081(129)]
  0x4FF8, 0x6FFC, 0x5FFE, 0x1FFF, 0x27FF, 
  // 0x01A(26) :   [0x086(134)]
  0x203F, 0x507F, 0x50FF, 0x41FF, 0x23FF, 
  // 0x01B(27) :   [0x08B(139)]
  0x1FF0, 0x4FE0, 0x5FC0, 0x4F80, 0x1F00, 0x3F01, 
  // 0x01C(28) :   [0x091(145)]
  0x4000, 0x1001, 0x100F, 0x103F, 0x107F, 0x10FF, 0x11FF, 0x13FF, 0x27FF, 0x5FFF, 
  // 0x01D(29) :   [0x09B(155)]
  0x4000, 0x8FFF, 0x1F0F, 0x1C03, 0x2801, 0x2000, 
  // 0x01E(30) :   [0x0A1(161)]
  0x5000, 0x1E00, 0x1F80, 0x1FC0, 0x1FE0, 0x2FF8, 0x1FFC, 0x2FFE, 0x4FFF, 
  // 0x01F(31) :   [0x0AA(170)]
  0x6000, 0x1001, 0x1003, 0x1007, 0x300F, 0x401F, 0x2800, 
  // 0x020(32) :   [0x0B1(177)]
  0x3000, 0x103F, 0x13FF, 0x7FFF, 0x1FFC, 0x1FF8, 0x2FF0, 0x2000, 
  // 0x021(33) :   [0x0B9(185)]
  0x3000, 0x1FF0, 0x1FFE, 0x7FFF, 0x10FF, 0x507F, 
  // 0x022(34) :   [0x0BF(191)]
  0x5000, 0x1C00, 0x1E00, 0x1F00, 0x2F80, 0x4FC0, 0x4FE0, 
  // 0x023(35) :   [0x0C6(198)]
  0x4000, 0xE7FF, 
  // 0x024(36) :   [0x0C8(200)]
  0x3000, 0x1007, 0x1C1F, 0x1C3F, 0x1C7F, 0x1CFF, 0x2DFF, 0x8FFF, 
  // 0x025(37) :   [0x0D0(208)]
  0x3000, 0x1C00, 0xEC1F, 
  // 0x026(38) :   [0x0D3(211)]
  0x4000, 0x2FE0, 0x1FE1, 0x2FE7, 0x1FEF, 0x6FFF, 0x1FFC, 0x1FF8, 
  // 0x027(39) :   [0x0DB(219)]
  0x3000, 0x10FE, 0x17FF, 0xAFFF, 0x10FF, 0x107F, 0x103F, 
  // 0x028(40) :   [0x0E2(226)]
  0x4000, 0x1C00, 0x1E00, 0x1F00, 0x1F80, 0x2FC0, 0x4FE0, 0x4FF0, 
  // 0x029(41) :   [0x0EA(234)]
  0x5000, 0x1003, 0x100F, 0x101F, 0x103F, 0x107F, 0x10FF, 0x21FF, 0x23FF, 0x37FF, 
  // 0x02A(42) :   [0x0F4(244)]
  0x4000, 0x17FF, 0x7FFF, 0x1FC3, 0x1F00, 0x2E00, 0x2C00, 
  // 0x02B(43) :   [0x0FB(251)]
  0x4000, 0x1C00, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF8, 0x2FFE, 0x3FFF, 0x27FF, 0x23FF, 
  // 0x02C(44) :   [0x105(261)]
  0x8000, 0x1001, 0x2003, 0x1007, 0x1807, 0x180F, 0x2C0F, 0x2E0F, 
  // 0x02D(45) :   [0x10D(269)]
  0x4000, 0x103F, 0x11FF, 0x17FF, 0x5FFF, 0x1FFC, 0x2FF8, 0x1FFC, 0x1FFE, 0x1FFF, 
  // 0x02E(46) :   [0x117(279)]
  0x4000, 0x1FF8, 0x7FFF, 0x107F, 0x203F, 0x2000, 0x1800, 
  // 0x02F(47) :   [0x11E(286)]
  0x6000, 0x1C00, 0x1E00, 0x1F00, 0x3F80, 0x3FC0, 0x3000, 
  // 0x030(48) :   [0x125(293)]
  0x3000, 0xF0FF, 
  // 0x031(49) :   [0x127(295)]
  0x3000, 0x2E00, 0x2F00, 0x2F80, 0x3FC0, 0x2FE0, 0x2FF0, 0x2FF8, 
  // 0x032(50) :   [0x12F(303)]
  0x3000, 0x10E0, 0x20F0, 0x2078, 0x107C, 0x203E, 0x403F, 0x207F, 0x10FF, 
  // 0x033(51) :   [0x138(312)]
  0xD000, 0x2800, 0x2C00, 0x1E00, 
  // 0x034(52) :   [0x13C(316)]
  0x3000, 0x2007, 0x2003, 0x8001, 0x2003, 0x1007, 
  // 0x035(53) :   [0x142(322)]
  0x3000, 0xFFFF, 
  // 0x036(54) :   [0x144(324)]
  0x3000, 0xFFF0, 
  // 0x037(55) :   [0x146(326)]
  0x1007, 0x4003, 0x4001, 0x9000, 
  // 0x038(56) :   [0x14A(330)]
  0x3FFE, 0xBFFF, 0x47FF, 
  // 0x039(57) :   [0x14D(333)]
  0x37FE, 0x2FFE, 0x6FFC, 0x5FF8, 0x2FF0, 
  // 0x03A(58) :   [0x152(338)]
  0x53FF, 0x61FF, 0x50FF, 0x207F, 
  // 0x03B(59) :   [0x156(342)]
  0x33FF, 0xFFFF, 
  // 0x03C(60) :   [0x158(344)]
  0x1F03, 0x4E03, 0x4C03, 0x2803, 0x3801, 0x4000, 
  // 0x03D(61) :   [0x15E(350)]
  0xFFFF, 0x1FFF, 0x27FF, 
  // 0x03E(62) :   [0x161(353)]
  0x1000, 0x8FFF, 0x4000, 0x1800, 0x1C01, 0x1E03, 0x1F9F, 0x1FFF, 
  // 0x03F(63) :   [0x169(361)]
  0x9FFF, 0x4000, 0x3FFF, 0x2FFE, 
  // 0x040(64) :   [0x16D(365)]
  0x2800, 0x2C00, 0x1C01, 0x1C07, 0x1C0F, 0x1C1F, 0x1C3F, 0x103F, 0x207F, 0x60FF, 
  // 0x041(65) :   [0x177(375)]
  0x1000, 0x1001, 0x101F, 0x11FF, 0x5FFF, 0x1FFC, 0x1FF0, 0x2FE0, 0x2FC0, 0x2FE0, 0x1FF0, 
  // 0x042(66) :   [0x182(386)]
  0x13FF, 0x7FFF, 0x183F, 0x203F, 0x307F, 0x20FF, 0x11FF, 0x17FF, 
  // 0x043(67) :   [0x18A(394)]
  0xFFE0, 0x3FE0, 
  // 0x044(68) :   [0x18C(396)]
  0xF7FF, 0x37FF, 
  // 0x045(69) :   [0x18E(398)]
  0x1FF8, 0x1FC0, 0x2F80, 0x2F00, 0xCE00, 
  // 0x046(70) :   [0x193(403)]
  0xF01F, 0x301F, 
  // 0x047(71) :   [0x195(405)]
  0x2FF8, 0xFFF0, 0x1FF0, 
  // 0x048(72) :   [0x198(408)]
  0x303F, 0xF01F, 
  // 0x049(73) :   [0x19A(410)]
  0xFFF0, 0x3FF0, 
  // 0x04A(74) :   [0x19C(412)]
  0xBFFF, 0x37FF, 0x23FF, 0x21FF, 
  // 0x04B(75) :   [0x1A0(416)]
  0x1C00, 0x8FFF, 0x4C00, 0x1E00, 0x1F00, 0x1F80, 0x1FE7, 0x1FFF, 
  // 0x04C(76) :   [0x1A8(424)]
  0x13FF, 0x8FFF, 0x4000, 0x13FF, 0x17FF, 0x3FFF, 
  // 0x04D(77) :   [0x1AE(430)]
  0x1E0F, 0x1E07, 0x1F07, 0x1F03, 0x1F01, 0x4F00, 0x4000, 0x3C0F, 0x2807, 
  // 0x04E(78) :   [0x1B7(439)]
  0x6FFF, 0x17FF, 0x13FF, 0x107F, 0x1007, 0x3000, 0x2FF8, 0x1FFC, 0x1FFE, 0x1FFF, 
  // 0x04F(79) :   [0x1C1(449)]
  0x1FC0, 0x1FFC, 0x8FFF, 0x13FF, 0x107F, 0x103F, 0x301F, 0x103F, 0x187F, 
  // 0x050(80) :   [0x1CA(458)]
  0x2000, 0x1800, 0x1E00, 0x1F80, 0x2FC0, 0x2FE0, 0x8FF0, 0x1FE0, 
  // 0x051(81) :   [0x1D2(466)]
  0x70FF, 0xB000, 
  // 0x052(82) :   [0x1D4(468)]
  0x1FF8, 0x1FFC, 0x1FFE, 0x4FFF, 0xB000, 
  // 0x053(83) :   [0x1D9(473)]
  0x3000, 0x1800, 0x1E03, 0x2FFF, 0xB000, 
  // 0x054(84) :   [0x1DE(478)]
  0x10FF, 0x11FF, 0x13FF, 0x4FFF, 0xB000, 
  // 0x055(85) :   [0x1E3(483)]
  0x1F00, 0x1F80, 0x1FC0, 0x1FF0, 0x3FFF, 0xB000, 
  // 0x056(86) :   [0x1E9(489)]
  0x100F, 0x101F, 0x103F, 0x10FF, 0x3FFF, 0xB000, 
  // 0x057(87) :   [0x1EF(495)]
  0x7FFF, 0xB000, 
  // 0x058(88) :   [0x1F1(497)]
  0x7FF0, 0xB000, 
  // 0x059(89) :   [0x1F3(499)]
  0x43FF, 0x31FF, 0x10FF, 0xA000, 
  // 0x05A(90) :   [0x1F7(503)]
  0x3FF0, 0x4FE0, 0x1FC0, 0xA000, 
  // 0x05B(91) :   [0x1FB(507)]
  0x307F, 0x403F, 0x101F, 0xA000, 
  // 0x05C(92) :   [0x1FF(511)]
  0x4FFE, 0x3FFC, 0x1FF8, 0xA000, 
  // 0x05D(93) :   [0x203(515)]
  0x13FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x100F, 0x1001, 0xB000, 
  // 0x05E(94) :   [0x20B(523)]
  0x1FFC, 0x2FF8, 0x1FF0, 0x1FC0, 0x1F00, 0x1800, 0xB000, 
  // 0x05F(95) :   [0x212(530)]
  0x207F, 0x203F, 0x101F, 0x100F, 0x1003, 0xB000, 
  // 0x060(96) :   [0x218(536)]
  0x7FFF, 0x1FFE, 0xA000, 
  // 0x061(97) :   [0x21B(539)]
  0x4FFF, 0x1F1F, 0x1E1F, 0x181F, 0xB000, 
  // 0x062(98) :   [0x220(544)]
  0x4FE0, 0x3FF0, 0xB000, 
  // 0x063(99) :   [0x223(547)]
  0x87FF, 0xA000, 
  // 0x064(100) :   [0x225(549)]
  0x8E00, 0xA000, 
  // 0x065(101) :   [0x227(551)]
  0x801F, 0xA000, 
  // 0x066(102) :   [0x229(553)]
  0x8FF0, 0xA000, 
  // 0x067(103) :   [0x22B(555)]
  0x10FF, 0x107F, 0x103F, 0x101F, 0x100F, 0x1003, 0xC000, 
  // 0x068(104) :   [0x232(562)]
  0x6FFF, 0x17FF, 0xB000, 
  // 0x069(105) :   [0x235(565)]
  0x1FFF, 0x2FFE, 0x1FFC, 0x1FF0, 0x1FC0, 0x1E00, 0xB000, 
  // 0x06A(106) :   [0x23C(572)]
  0x2003, 0x1001, 0xF000, 
  // 0x06B(107) :   [0x23F(575)]
  0x4FFF, 0x17FF, 0x13FF, 0x107F, 0xB000, 
  // 0x06C(108) :   [0x244(580)]
  0x6FFF, 0x1FFC, 0xB000, 
  // 0x06D(109) :   [0x247(583)]
  0x1FE0, 0x1FC0, 0x1F80, 0x1F00, 0x1E00, 0x1800, 0xC000, 
  // Total  [0x24E(1180)]
  // Orginial Total:  110 fonts ,  Size:(2970)]
  0x0000

};
WORD code tMainSmallLogo[]=
{
0x0000
};


#elif (DisplayLogo==PuntaLOGO)
WORD code tOSDLogoFont[] =
{
  // 0x001(1) : PUNTA_LOGO2_1_1  [0x000(0)]
  0xF000, 0x3000, 
  // 0x002(2) : PUNTA_LOGO2_2_2  [0x002(2)]
  0xC000, 0x2001, 0x4003, 
  // 0x003(3) : PUNTA_LOGO2_2_3  [0x005(5)]
  0x8000, 0x10FF, 0x13FF, 0x17FF, 0x7FFF, 
  // 0x004(4) : PUNTA_LOGO2_2_4  [0x00A(10)]
  0x8000, 0xAFFF, 
  // 0x005(5) : PUNTA_LOGO2_2_12  [0x00C(12)]
  0x8000, 0x1FE0, 0x1FFC, 0x8FFF, 
  // 0x006(6) : PUNTA_LOGO2_2_13  [0x010(16)]
  0xB000, 0x1800, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 
  // 0x007(7) : PUNTA_LOGO2_2_15  [0x018(24)]
  0x8000, 0x1003, 0x1007, 0x100F, 0x101F, 0x103F, 0x507F, 
  // 0x008(8) : PUNTA_LOGO2_2_16  [0x01F(31)]
  0x8000, 0x1FC0, 0x1FF0, 0x1FF8, 0x1FFC, 0x2FFE, 0x4FFF, 
  // 0x009(9) : PUNTA_LOGO2_2_24  [0x026(38)]
  0xF000, 0x3001, 
  // 0x00A(10) : PUNTA_LOGO2_2_25  [0x028(40)]
  0x8000, 0x107F, 0x11FF, 0x13FF, 0x27FF, 0x5FFF, 
  // 0x00B(11) : PUNTA_LOGO2_2_26  [0x02E(46)]
  0x8000, 0x1800, 0x1C00, 0x1F00, 0x2F80, 0x3FC0, 0x2FE0, 
  // 0x00C(12) : PUNTA_LOGO2_2_29  [0x035(53)]
  0xB000, 0x1003, 0x1007, 0x101F, 0x103F, 0x107F, 0x10FF, 0x11FF, 
  // 0x00D(13) : PUNTA_LOGO2_2_30  [0x03D(61)]
  0x8000, 0x107F, 0x13FF, 0x8FFF, 
  // 0x00E(14) : PUNTA_LOGO2_2_37  [0x041(65)]
  0x8000, 0x1F00, 0x1FE0, 0x1FFC, 0x1FFE, 0x6FFF, 
  // 0x00F(15) : PUNTA_LOGO2_2_38  [0x047(71)]
  0xC000, 0x1800, 0x1C00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 
  // 0x010(16) : PUNTA_LOGO2_2_41  [0x04E(78)]
  0x8000, 0x1007, 0x101F, 0x103F, 0x107F, 0x20FF, 0x41FF, 
  // 0x011(17) : PUNTA_LOGO2_2_43  [0x055(85)]
  0x8000, 0x1FF8, 0x1FFE, 0x8FFF, 
  // 0x012(18) : PUNTA_LOGO2_2_44  [0x059(89)]
  0xB000, 0x1800, 0x2C00, 0x4E00, 
  // 0x013(19) : PUNTA_LOGO2_2_45  [0x05D(93)]
  0xC000, 0x1001, 0x1007, 0x100F, 0x101F, 0x103F, 0x107F, 
  // 0x014(20) : PUNTA_LOGO2_2_46  [0x064(100)]
  0x8000, 0x100F, 0x10FF, 0x13FF, 0x7FFF, 
  // 0x015(21) : PUNTA_LOGO2_2_50  [0x069(105)]
  0x8000, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF8, 0x2FFC, 0x4FFE, 
  // 0x016(22) : PUNTA_LOGO2_2_54  [0x070(112)]
  0x9000, 0x1003, 0x101F, 0x103F, 0x10FF, 0x11FF, 0x13FF, 0x17FF, 0x2FFF, 
  // 0x017(23) : PUNTA_LOGO2_2_55  [0x079(121)]
  0x8000, 0x17FF, 0x9FFF, 
  // 0x018(24) : PUNTA_LOGO2_2_56  [0x07C(124)]
  0x9000, 0x1E00, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x2FFF, 
  // 0x019(25) : PUNTA_LOGO2_2_57  [0x085(133)]
  0xF000, 0x2000, 0x1800, 
  // 0x01A(26) : PUNTA_LOGO2_3_2  [0x088(136)]
  0xF003, 0x3003, 
  // 0x01B(27) : PUNTA_LOGO2_3_3  [0x08A(138)]
  0xFFFF, 0x3FFF, 
  // 0x01C(28) : PUNTA_LOGO2_3_4  [0x08C(140)]
  0x9FFF, 0x9F80, 
  // 0x01D(29) : PUNTA_LOGO2_3_5  [0x08E(142)]
  0x9FFF, 0x9000, 
  // 0x01E(30) : PUNTA_LOGO2_3_12  [0x090(144)]
  0x9FFF, 0x11FF, 0x10FF, 0x107F, 0x403F, 0x107F, 0x10FF, 
  // 0x01F(31) : PUNTA_LOGO2_3_13  [0x097(151)]
  0x2FF8, 0x1FFC, 0x3FFE, 0xCFFF, 
  // 0x020(32) : PUNTA_LOGO2_3_14  [0x09B(155)]
  0x9000, 0x9800, 
  // 0x021(33) : PUNTA_LOGO2_3_15  [0x09D(157)]
  0xF07F, 0x307F, 
  // 0x022(34) : PUNTA_LOGO2_3_24  [0x09F(159)]
  0xF001, 0x3001, 
  // 0x023(35) : PUNTA_LOGO2_3_26  [0x0A1(161)]
  0xFFE0, 0x3FE0, 
  // 0x024(36) : PUNTA_LOGO2_3_28  [0x0A3(163)]
  0x3000, 0x2001, 0x1003, 0x2007, 0x200F, 0x301F, 0x303F, 0x207F, 
  // 0x025(37) : PUNTA_LOGO2_3_29  [0x0AB(171)]
  0x13FF, 0x17FF, 0xFFFF, 0x1FFF, 
  // 0x026(38) : PUNTA_LOGO2_3_30  [0x0AF(175)]
  0xAFFF, 0x1FF8, 0x1FE0, 0x1F80, 0x1F00, 0x2E00, 0x1C00, 0x1800, 
  // 0x027(39) : PUNTA_LOGO2_3_36  [0x0B7(183)]
  0x9FFF, 0x1007, 0x8000, 
  // 0x028(40) : PUNTA_LOGO2_3_37  [0x0BA(186)]
  0xBFFF, 0x13FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x200F, 
  // 0x029(41) : PUNTA_LOGO2_3_38  [0x0C1(193)]
  0x2FF0, 0x1FF8, 0x1FFC, 0x2FFE, 0xCFFF, 
  // 0x02A(42) : PUNTA_LOGO2_3_39  [0x0C6(198)]
  0x8000, 0x2800, 0x2C00, 0x3E00, 0x3F00, 
  // 0x02B(43) : PUNTA_LOGO2_3_41  [0x0CB(203)]
  0x41FF, 0x10FF, 0x107F, 0x103F, 0x101F, 0x1007, 0x9000, 
  // 0x02C(44) : PUNTA_LOGO2_3_43  [0x0D2(210)]
  0x7FFF, 0x1FFE, 0x1FF8, 0x9000, 
  // 0x02D(45) : PUNTA_LOGO2_3_44  [0x0D6(214)]
  0x4E00, 0x1C00, 0x1800, 0x1000, 0x2001, 0x2003, 0x2007, 0x300F, 0x201F, 
  // 0x02E(46) : PUNTA_LOGO2_3_45  [0x0DF(223)]
  0x10FF, 0x11FF, 0x23FF, 0x17FF, 0xDFFF, 
  // 0x02F(47) : PUNTA_LOGO2_3_46  [0x0E4(228)]
  0xAFFF, 0x1FFE, 0x1FF8, 0x1FF0, 0x2FC0, 0x1F80, 0x1F00, 0x1E00, 
  // 0x030(48) : PUNTA_LOGO2_3_47  [0x0EC(236)]
  0x9FFF, 0x1C00, 0x8000, 
  // 0x031(49) : PUNTA_LOGO2_3_50  [0x0EF(239)]
  0x3FFE, 0x2FFC, 0x1FF8, 0x1FF0, 0x1FE0, 0x1F80, 0x9000, 
  // 0x032(50) : PUNTA_LOGO2_3_52  [0x0F6(246)]
  0xF000, 0x1000, 0x1001, 0x1003, 
  // 0x033(51) : PUNTA_LOGO2_3_53  [0x0FA(250)]
  0x1001, 0x1003, 0x2007, 0x100F, 0x101F, 0x203F, 0x107F, 0x10FF, 0x21FF, 0x13FF, 0x17FF, 0x4FFF, 
  // 0x034(52) : PUNTA_LOGO2_3_54  [0x106(262)]
  0xFFFF, 0x2FFE, 0x1FFC, 
  // 0x035(53) : PUNTA_LOGO2_3_55  [0x109(265)]
  0x9FFF, 0x1F8F, 0x1F07, 0x1C03, 0x1C01, 0x1800, 0x4000, 
  // 0x036(54) : PUNTA_LOGO2_3_56  [0x110(272)]
  0xEFFF, 0x27FF, 0x13FF, 0x11FF, 
  // 0x037(55) : PUNTA_LOGO2_3_57  [0x114(276)]
  0x2C00, 0x1E00, 0x1F00, 0x2F80, 0x1FC0, 0x1FE0, 0x2FF0, 0x1FF8, 0x1FFC, 0x2FFE, 0x4FFF, 
  // 0x038(56) : PUNTA_LOGO2_3_58  [0x11F(287)]
  0xF000, 0x1800, 0x2C00, 
  // 0x039(57) : PUNTA_LOGO2_4_4  [0x122(290)]
  0x1F80, 0xFFFF, 0x2FFF, 
  // 0x03A(58) : PUNTA_LOGO2_4_5  [0x125(293)]
  0x1000, 0xFFFF, 0x2FFF, 
  // 0x03B(59) : PUNTA_LOGO2_4_12  [0x128(296)]
  0x11FF, 0xFFFF, 0x1FFF, 0x1FFE, 
  // 0x03C(60) : PUNTA_LOGO2_4_13  [0x12C(300)]
  0x4FFF, 0x2FFE, 0x2FFC, 0x2FF8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F80, 0x1F00, 0x1C00, 0x1800, 0x1000, 
  // 0x03D(61) : PUNTA_LOGO2_4_17  [0x138(312)]
  0xF000, 0x1000, 0x2800, 
  // 0x03E(62) : PUNTA_LOGO2_4_26  [0x13B(315)]
  0xFFE0, 0x2FE0, 0x1FC0, 
  // 0x03F(63) : PUNTA_LOGO2_4_28  [0x13E(318)]
  0x207F, 0xF0FF, 0x10FF, 
  // 0x040(64) : PUNTA_LOGO2_4_29  [0x141(321)]
  0x5FFF, 0xDFFE, 
  // 0x041(65) : PUNTA_LOGO2_4_30  [0x143(323)]
  0x1800, 0xF000, 0x2000, 
  // 0x042(66) : PUNTA_LOGO2_4_37  [0x146(326)]
  0x3007, 0xF003, 
  // 0x043(67) : PUNTA_LOGO2_4_39  [0x148(328)]
  0x6F80, 0xCFC0, 
  // 0x044(68) : PUNTA_LOGO2_4_44  [0x14A(330)]
  0x201F, 0xF03F, 0x103F, 
  // 0x045(69) : PUNTA_LOGO2_4_46  [0x14D(333)]
  0x2E00, 0x4C00, 0xC800, 
  // 0x046(70) : PUNTA_LOGO2_4_51  [0x150(336)]
  0xE000, 0x1001, 0x2003, 0x1007, 
  // 0x047(71) : PUNTA_LOGO2_4_52  [0x154(340)]
  0x2007, 0x100F, 0x101F, 0x203F, 0x107F, 0x10FF, 0x21FF, 0x13FF, 0x27FF, 0x5FFF, 
  // 0x048(72) : PUNTA_LOGO2_4_53  [0x15E(350)]
  0xDFFF, 0x2FFE, 0x1FFC, 0x1FF8, 0x1FF0, 
  // 0x049(73) : PUNTA_LOGO2_4_54  [0x163(355)]
  0x1FF8, 0x2FF0, 0x1FE0, 0x1FC0, 0x2F80, 0x1F00, 0x1E00, 0x2C00, 0x1800, 0x6000, 
  // 0x04A(74) : PUNTA_LOGO2_4_56  [0x16D(365)]
  0x20FF, 0x107F, 0x103F, 0x201F, 0x100F, 0x1007, 0x2003, 0x1001, 0x7000, 
  // 0x04B(75) : PUNTA_LOGO2_4_57  [0x176(374)]
  0xCFFF, 0x27FF, 0x13FF, 0x11FF, 0x20FF, 
  // 0x04C(76) : PUNTA_LOGO2_4_58  [0x17B(379)]
  0x1E00, 0x1F00, 0x2F80, 0x1FC0, 0x2FE0, 0x1FF0, 0x1FF8, 0x2FFC, 0x1FFE, 0x6FFF, 
  // 0x04D(77) : PUNTA_LOGO2_4_59  [0x185(389)]
  0xD000, 0x2800, 0x1C00, 0x1E00, 0x1F00, 
  // 0x04E(78) : PUNTA_LOGO2_5_4  [0x18A(394)]
  0x2FFF, 0xFF80, 0x1F80, 
  // 0x04F(79) : PUNTA_LOGO2_5_5  [0x18D(397)]
  0x2FFF, 0xF000, 0x1000, 
  // 0x050(80) : PUNTA_LOGO2_5_12  [0x190(400)]
  0x1FF0, 0x1F00, 0xF000, 0x1000, 
  // 0x051(81) : PUNTA_LOGO2_5_15  [0x194(404)]
  0x107F, 0x403F, 0x301F, 0x200F, 0x2007, 0x2003, 0x2001, 0x2000, 
  // 0x052(82) : PUNTA_LOGO2_5_16  [0x19C(412)]
  0xFFFF, 0x2FFF, 0x17FF, 
  // 0x053(83) : PUNTA_LOGO2_5_17  [0x19F(415)]
  0x1800, 0x2C00, 0x2E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FF0, 0x1FF8, 0x8FFF, 
  // 0x054(84) : PUNTA_LOGO2_5_18  [0x1A8(424)]
  0xB000, 0x7FFF, 
  // 0x055(85) : PUNTA_LOGO2_5_23  [0x1AA(426)]
  0xA000, 0x1001, 0x7FFF, 
  // 0x056(86) : PUNTA_LOGO2_5_24  [0x1AD(429)]
  0x2003, 0x2007, 0x100F, 0x101F, 0x103F, 0x107F, 0x10FF, 0x13FF, 0x8FFF, 
  // 0x057(87) : PUNTA_LOGO2_5_25  [0x1B6(438)]
  0xFFFF, 0x1FFF, 0x1FFE, 0x1FFC, 
  // 0x058(88) : PUNTA_LOGO2_5_26  [0x1BA(442)]
  0x2FC0, 0x3F80, 0x3F00, 0x2E00, 0x2C00, 0x2800, 0x4000, 
  // 0x059(89) : PUNTA_LOGO2_5_28  [0x1C1(449)]
  0xF0FF, 0x30FF, 
  // 0x05A(90) : PUNTA_LOGO2_5_29  [0x1C3(451)]
  0xFFFE, 0x3FFE, 
  // 0x05B(91) : PUNTA_LOGO2_5_39  [0x1C5(453)]
  0xFFC0, 0x3FC0, 
  // 0x05C(92) : PUNTA_LOGO2_5_44  [0x1C7(455)]
  0xF03F, 0x303F, 
  // 0x05D(93) : PUNTA_LOGO2_5_46  [0x1C9(457)]
  0xF800, 0x3800, 
  // 0x05E(94) : PUNTA_LOGO2_5_50  [0x1CB(459)]
  0xC000, 0x1001, 0x2003, 0x1007, 0x200F, 
  // 0x05F(95) : PUNTA_LOGO2_5_51  [0x1D0(464)]
  0x100F, 0x201F, 0x103F, 0x107F, 0x20FF, 0x11FF, 0x13FF, 0x27FF, 0x7FFF, 
  // 0x060(96) : PUNTA_LOGO2_5_52  [0x1D9(473)]
  0xBFFF, 0x2FFE, 0x1FFC, 0x1FF8, 0x1FF0, 0x2FE0, 
  // 0x061(97) : PUNTA_LOGO2_5_53  [0x1DF(479)]
  0x1FF0, 0x1FE0, 0x1FC0, 0x2F80, 0x1F00, 0x1E00, 0x1C00, 0x2800, 0x8000, 
  // 0x062(98) : PUNTA_LOGO2_5_57  [0x1E8(488)]
  0x107F, 0x103F, 0x201F, 0x100F, 0x1007, 0x2003, 0x1001, 0x9000, 
  // 0x063(99) : PUNTA_LOGO2_5_58  [0x1F0(496)]
  0xAFFF, 0x27FF, 0x13FF, 0x11FF, 0x20FF, 0x107F, 0x103F, 
  // 0x064(100) : PUNTA_LOGO2_5_59  [0x1F7(503)]
  0x1F00, 0x1F80, 0x1FC0, 0x2FE0, 0x1FF0, 0x1FF8, 0x2FFC, 0x1FFE, 0x8FFF, 
  // 0x065(101) : PUNTA_LOGO2_5_60  [0x200(512)]
  0xB000, 0x2800, 0x1C00, 0x1E00, 0x2F00, 0x1F80, 
  // 0x066(102) : PUNTA_LOGO2_6_2  [0x206(518)]
  0x6003, 0x2001, 0xA000, 
  // 0x067(103) : PUNTA_LOGO2_6_3  [0x209(521)]
  0x9FFF, 0x17FF, 0x13FF, 0x11FF, 0x6000, 
  // 0x068(104) : PUNTA_LOGO2_6_4  [0x20E(526)]
  0x7F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x7000, 
  // 0x069(105) : PUNTA_LOGO2_6_16  [0x214(532)]
  0x23FF, 0x11FF, 0x10FF, 0x107F, 0x103F, 0x100F, 0x1007, 0x1001, 0x9000, 
  // 0x06A(106) : PUNTA_LOGO2_6_17  [0x21D(541)]
  0xAFFF, 0x13FF, 0x107F, 0x6000, 
  // 0x06B(107) : PUNTA_LOGO2_6_18  [0x221(545)]
  0xCFFF, 0x6000, 
  // 0x06C(108) : PUNTA_LOGO2_6_24  [0x223(547)]
  0x9FFF, 0x1FFE, 0x1FF0, 0x1F80, 0x6000, 
  // 0x06D(109) : PUNTA_LOGO2_6_25  [0x228(552)]
  0x2FF8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F80, 0x1E00, 0x1C00, 0xA000, 
  // 0x06E(110) : PUNTA_LOGO2_6_28  [0x230(560)]
  0x70FF, 0x107F, 0x203F, 0x100F, 0x1007, 0x6000, 
  // 0x06F(111) : PUNTA_LOGO2_6_29  [0x236(566)]
  0x6FFE, 0x2FFC, 0x1FF8, 0x1FF0, 0x1FE0, 0x1F80, 0x6000, 
  // 0x070(112) : PUNTA_LOGO2_6_37  [0x23D(573)]
  0x4003, 0x3001, 0xB000, 
  // 0x071(113) : PUNTA_LOGO2_6_38  [0x240(576)]
  0x9FFF, 0x17FF, 0x13FF, 0x10FF, 0x6000, 
  // 0x072(114) : PUNTA_LOGO2_6_39  [0x245(581)]
  0x5FC0, 0x2F80, 0x2F00, 0x1E00, 0x1C00, 0x7000, 
  // 0x073(115) : PUNTA_LOGO2_6_44  [0x24B(587)]
  0x603F, 0x201F, 0x200F, 0x1003, 0x1001, 0x6000, 
  // 0x074(116) : PUNTA_LOGO2_6_45  [0x251(593)]
  0x8FFF, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FF0, 0x6000, 
  // 0x075(117) : PUNTA_LOGO2_6_46  [0x257(599)]
  0x6800, 0xC000, 
  // 0x076(118) : PUNTA_LOGO2_6_50  [0x259(601)]
  0x601F, 0x200F, 0x1007, 0x1003, 0x1001, 0x7000, 
  // 0x077(119) : PUNTA_LOGO2_6_51  [0x25F(607)]
  0x9FFF, 0x1FFE, 0x1FFC, 0x1FF0, 0x6000, 
  // 0x078(120) : PUNTA_LOGO2_6_52  [0x264(612)]
  0x1FC0, 0x1F80, 0x2F00, 0x1E00, 0x1C00, 0x2800, 0xA000, 
  // 0x079(121) : PUNTA_LOGO2_6_58  [0x26B(619)]
  0x201F, 0x100F, 0x1007, 0x2003, 0x1001, 0xB000, 
  // 0x07A(122) : PUNTA_LOGO2_6_59  [0x271(625)]
  0x8FFF, 0x27FF, 0x11FF, 0x10FF, 0x6000, 
  // 0x07B(123) : PUNTA_LOGO2_6_60  [0x276(630)]
  0x2F80, 0x3FC0, 0x2F80, 0x2F00, 0x1E00, 0x1C00, 0x7000, 
  // 0x07C(124) : PUNTA_LOGO2_8_37  [0x27D(637)]
  0xB000, 0x703E, 
  // 0x07D(125) : PUNTA_LOGO2_8_38  [0x27F(639)]
  0xF000, 0x2000, 0x103C, 
  // 0x07E(126) : PUNTA_LOGO2_8_42  [0x282(642)]
  0xD000, 0x3001, 0x1003, 0x1007, 
  // 0x07F(127) : PUNTA_LOGO2_8_43  [0x286(646)]
  0xD000, 0x4C00, 0x1E00, 
  // 0x080(128) : PUNTA_LOGO2_8_45  [0x289(649)]
  0x9000, 0x901F, 
  // 0x081(129) : PUNTA_LOGO2_8_50  [0x28B(651)]
  0xB000, 0x103C, 0x207E, 0x30FF, 0x11E7, 
  // 0x082(130) : PUNTA_LOGO2_8_51  [0x290(656)]
  0x9000, 0x7001, 0x2801, 
  // 0x083(131) : PUNTA_LOGO2_8_52  [0x293(659)]
  0x9000, 0x9F00, 
  // 0x084(132) : PUNTA_LOGO2_8_60  [0x295(661)]
  0x7000, 0xBF80, 
  // 0x085(133) : PUNTA_LOGO2_9_37  [0x297(663)]
  0xF03E, 0x303E, 
  // 0x086(134) : PUNTA_LOGO2_9_38  [0x299(665)]
  0x103C, 0x403F, 0xD03E, 
  // 0x087(135) : PUNTA_LOGO2_9_39  [0x29C(668)]
  0x17F0, 0x1FF8, 0x2FFC, 0x10FC, 0xD07C, 
  // 0x088(136) : PUNTA_LOGO2_9_41  [0x2A1(673)]
  0x107F, 0x10FF, 0x11FF, 0x11F0, 0x23E0, 0x11F8, 0x11FE, 0x10FF, 0x107F, 0x101F, 0x1003, 0x2001, 0x1183, 0x23FF, 0x11FF, 
  // 0x089(137) : PUNTA_LOGO2_9_42  [0x2B0(688)]
  0x1C1F, 0x2E1F, 0x1E07, 0x4007, 0x1807, 0x2E07, 0x4F07, 0x1E07, 0x1E03, 0x1801, 
  // 0x08A(138) : PUNTA_LOGO2_9_43  [0x2BA(698)]
  0x1FE7, 0x2FE3, 0x1C03, 0x3C01, 0x7C00, 0x1E60, 0x2FF0, 0x1FE0, 
  // 0x08B(139) : PUNTA_LOGO2_9_44  [0x2C2(706)]
  0x3E03, 0x1F03, 0x3F07, 0x1F87, 0x2F8F, 0x27CF, 0x13CF, 0x13DF, 0x23FE, 0x11FE, 0x11FC, 
  // 0x08C(140) : PUNTA_LOGO2_9_45  [0x2CD(717)]
  0x3E1F, 0x4C1F, 0x381F, 0x801F, 
  // 0x08D(141) : PUNTA_LOGO2_9_46  [0x2D1(721)]
  0x1003, 0x100F, 0x201F, 0x203E, 0x107C, 0x307F, 0x207C, 0x203E, 0x103F, 0x101F, 0x100F, 0x1007, 
  // 0x08E(142) : PUNTA_LOGO2_9_47  [0x2DD(733)]
  0x1FC0, 0x1FE0, 0x1FF0, 0x11F8, 0x10F8, 0x207C, 0x2FFC, 0x1FF8, 0x4000, 0x1838, 0x2FF8, 0x1FE0, 
  // 0x08F(143) : PUNTA_LOGO2_9_48  [0x2E9(745)]
  0xC000, 0x11C0, 0x13E0, 0x27F1, 0x13E0, 0x11C0, 
  // 0x090(144) : PUNTA_LOGO2_9_49  [0x2EF(751)]
  0xA000, 0x2001, 0x1703, 0x1F83, 0x1FC3, 0x1FC7, 0x1F87, 0x170F, 
  // 0x091(145) : PUNTA_LOGO2_9_50  [0x2F7(759)]
  0x11E7, 0x23E7, 0x13C3, 0x27C3, 0x1781, 0x3F81, 0x3FFF, 0x2E00, 0x3C00, 
  // 0x092(146) : PUNTA_LOGO2_9_51  [0x300(768)]
  0x1801, 0x3C01, 0x3E01, 0x2F01, 0x3F81, 0x1FC1, 0x27C1, 0x17E1, 0x13E1, 0x13F1, 
  // 0x093(147) : PUNTA_LOGO2_9_52  [0x30A(778)]
  0x3F0F, 0x4F07, 0x3F03, 0x3F01, 0x5F00, 
  // 0x094(148) : PUNTA_LOGO2_9_53  [0x30F(783)]
  0x381F, 0x183F, 0x2C3F, 0x2C7B, 0x1E7B, 0x3EF1, 0x4FE0, 0x27C0, 
  // 0x095(149) : PUNTA_LOGO2_9_54  [0x317(791)]
  0x101E, 0x283E, 0x283C, 0x1C7C, 0x2C78, 0x1E78, 0x1E70, 0x2EF0, 0x1FF0, 0x3FE0, 0x27C0, 
  // 0x096(150) : PUNTA_LOGO2_9_55  [0x322(802)]
  0x107F, 0x21FF, 0x11E0, 0x10C0, 0x2000, 0x103F, 0x10FF, 0x11FF, 0x13F0, 0x33E0, 0x13F0, 0x13FF, 0x11FF, 0x10FE, 
  // 0x097(151) : PUNTA_LOGO2_9_56  [0x330(816)]
  0x1E07, 0x1F07, 0x2F83, 0x17C3, 0x17C1, 0x2FC1, 0x2FC0, 0x47C0, 0x3FC0, 0x17C0, 
  // 0x098(152) : PUNTA_LOGO2_9_57  [0x33A(826)]
  0x1C03, 0x1E03, 0x3E07, 0x1F07, 0x2F0F, 0x3F8F, 0x178F, 0x27DE, 0x13FE, 0x13FC, 0x21FC, 
  // 0x099(153) : PUNTA_LOGO2_9_58  [0x345(837)]
  0x1E07, 0x1E1F, 0x1C1F, 0x2C3E, 0x183E, 0x183F, 0x281F, 0x1007, 0x1001, 0x3000, 0x1038, 0x203F, 0x101F, 
  // 0x09A(154) : PUNTA_LOGO2_9_59  [0x352(850)]
  0x1FC0, 0x2FE0, 0x10C0, 0x3000, 0x1E00, 0x1F80, 0x1FC0, 0x1FE0, 0x17E0, 0x13F0, 0x11F0, 0x13E1, 0x1FE1, 0x1FC0, 0x1F80, 
  // 0x09B(155) : PUNTA_LOGO2_9_60  [0x361(865)]
  0x9F80, 0x3000, 0x1700, 0x1F80, 0x2FC0, 0x1F80, 0x1700, 
  // 0x09C(156) : PUNTA_LOGO2_10_43  [0x368(872)]
  0x5000, 0x4001, 0x9000, 
  // 0x09D(157) : PUNTA_LOGO2_10_44  [0x36B(875)]
  0x207C, 0x1078, 0x10F8, 0x11F0, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F00, 0x9000, 
  // 0x09E(158) : PUNTA_LOGO2_10_56  [0x374(884)]
  0x5000, 0x3003, 0x1001, 0x9000, 
  // 0x09F(159) : PUNTA_LOGO2_10_57  [0x378(888)]
  0x10FC, 0x2078, 0x10F0, 0x11F0, 0x1FE0, 0x1FC0, 0x1F80, 0x1E00, 0x9000, 
  //Total  [0x381(1794)]
  //Orginial Total:  159 fonts ,  Size:(4293)]
0x0000

};
WORD code tMainSmallLogo[]=
{
0x0000
};
#elif (DisplayLogo==AcerLOGO)
WORD code tOSDLogoFont[] =
{
  // 0x000(0) :   [0x000(0)]
  0xF000, 0x3000, 
  // 0x001(1) :   [0x002(2)]
  0xF000, 0x2000, 0x101F, 
  // 0x002(2) :   [0x005(5)]
  0xF000, 0x107F, 0x2FFF, 
  // 0x003(3) :   [0x008(8)]
  0xF000, 0x3FFF, 
  // 0x004(4) :   [0x00A(10)]
  0xF000, 0x1800, 0x1FC0, 0x1FFE, 
  // 0x005(5) :   [0x00E(14)]
  0xF000, 0x2000, 0x1007, 
  // 0x006(6) :   [0x011(17)]
  0xF000, 0x101F, 0x11FF, 0x1FFF, 
  // 0x007(7) :   [0x015(21)]
  0xF000, 0x1E00, 0x1F80, 0x1FE0, 
  // 0x008(8) :   [0x019(25)]
  0xF000, 0x1000, 0x1003, 0x10FF, 
  // 0x009(9) :   [0x01D(29)]
  0xF000, 0x11FF, 0x2FFF, 
  // 0x00A(10) :   [0x020(32)]
  0xF000, 0x1FFE, 0x2FFF, 
  // 0x00B(11) :   [0x023(35)]
  0xF000, 0x1000, 0x1E00, 0x1FFC, 
  // 0x00C(12) :   [0x027(39)]
  0xF000, 0x107F, 0x17FF, 0x1FFF, 
  // 0x00D(13) :   [0x02B(43)]
  0xF000, 0x1F80, 0x1FF0, 0x1FFC, 
  // 0x00E(14) :   [0x02F(47)]
  0x3000, 0x2003, 0x1007, 0x200F, 0x201F, 0x403F, 0x407F, 
  // 0x00F(15) :   [0x036(54)]
  0x11FF, 0x17FF, 0xFFFF, 0x1FFF, 
  // 0x010(16) :   [0x03A(58)]
  0xFFFF, 0x3FFF, 
  // 0x011(17) :   [0x03C(60)]
  0x1C00, 0x1F80, 0x1FF0, 0x1FFC, 0xEFFF, 
  // 0x012(18) :   [0x041(65)]
  0x5000, 0x1C00, 0x1E00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x2FF8, 0x1FFC, 0x2FFE, 0x2FFF, 
  // 0x013(19) :   [0x04C(76)]
  0xE000, 0x1003, 0x1007, 0x101F, 0x103F, 
  // 0x014(20) :   [0x051(81)]
  0x7000, 0x1007, 0x100F, 0x107F, 0x10FF, 0x11FF, 0x17FF, 0x5FFF, 
  // 0x015(21) :   [0x059(89)]
  0x2000, 0x1007, 0x101F, 0x10FF, 0x13FF, 0xCFFF, 
  // 0x016(22) :   [0x05F(95)]
  0x10FF, 0x17FF, 0xFFFF, 0x1FFF, 
  // 0x017(23) :   [0x063(99)]
  0x1FF8, 0x1FFC, 0x1FFE, 0xFFFF, 
  // 0x018(24) :   [0x067(103)]
  0x5000, 0x5800, 0x8C00, 
  // 0x019(25) :   [0x06A(106)]
  0xA000, 0x1001, 0x1007, 0x100F, 0x101F, 0x107F, 0x10FF, 0x13FF, 0x17FF, 
  // 0x01A(26) :   [0x073(115)]
  0x4000, 0x1001, 0x1007, 0x101F, 0x10FF, 0x11FF, 0x9FFF, 
  // 0x01B(27) :   [0x07A(122)]
  0x1000, 0x100F, 0x10FF, 0x13FF, 0xEFFF, 
  // 0x01C(28) :   [0x07F(127)]
  0x5000, 0x1C00, 0x1F00, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x2FFE, 0x3FFF, 
  // 0x01D(29) :   [0x08A(138)]
  0xF000, 0x1001, 0x1003, 0x1807, 
  // 0x01E(30) :   [0x08E(142)]
  0x7000, 0x1003, 0x1007, 0x101F, 0x107F, 0x10FF, 0x11FF, 0x13FF, 0x4FFF, 
  // 0x01F(31) :   [0x097(151)]
  0x2000, 0x100F, 0x101F, 0x10FF, 0x13FF, 0xCFFF, 
  // 0x020(32) :   [0x09D(157)]
  0x11FF, 0xFFFF, 0x2FFF, 
  // 0x021(33) :   [0x0A0(160)]
  0xEFFF, 0x2FFE, 0x2FFC, 
  // 0x022(34) :   [0x0A3(163)]
  0x2000, 0x1800, 0x5C00, 0x3800, 0x7000, 
  // 0x023(35) :   [0x0A8(168)]
  0x30FF, 0x107F, 0x103F, 0xD000, 
  // 0x024(36) :   [0x0AC(172)]
  0x4FFF, 0x1E00, 0xD000, 
  // 0x025(37) :   [0x0AF(175)]
  0x3FFF, 0x1FF0, 0xE000, 
  // 0x026(38) :   [0x0B2(178)]
  0x2FFF, 0x1FF8, 0xF000, 
  // 0x027(39) :   [0x0B5(181)]
  0x2FFF, 0xF000, 0x1000, 
  // 0x028(40) :   [0x0B8(184)]
  0x2FFF, 0x100F, 0xF000, 
  // 0x029(41) :   [0x0BB(187)]
  0x3FFF, 0x13FF, 0x103F, 0x101F, 0x1003, 0x1001, 0xA000, 
  // 0x02A(42) :   [0x0C2(194)]
  0x9FFF, 0x27FF, 0x23FF, 0x51FF, 
  // 0x02B(43) :   [0x0C6(198)]
  0x3800, 0x3C00, 0x1C01, 0x1C03, 0x1C07, 0x1C0F, 0x2C1F, 0x1C3F, 0x2C7F, 0x1CFF, 0x1DFF, 0x1FFF, 
  // 0x02C(44) :   [0x0D2(210)]
  0x107F, 0x10FF, 0x11FF, 0x13FF, 0x17FF, 0xDFFF, 
  // 0x02D(45) :   [0x0D8(216)]
  0xEFFF, 0x1FFE, 0x1FF8, 0x1FF0, 0x1FE0, 
  // 0x02E(46) :   [0x0DD(221)]
  0x8FFF, 0x1FFC, 0x1FF0, 0x1F80, 0x1E00, 0x1C00, 0x5000, 
  // 0x02F(47) :   [0x0E4(228)]
  0x5FFF, 0x1FFC, 0x1F80, 0x1800, 0xA000, 
  // 0x030(48) :   [0x0E9(233)]
  0x4FFF, 0x1800, 0xD000, 
  // 0x031(49) :   [0x0EC(236)]
  0x4FFF, 0xE000, 
  // 0x032(50) :   [0x0EE(238)]
  0x4FFF, 0x1003, 0xD000, 
  // 0x033(51) :   [0x0F1(241)]
  0x5FFF, 0x103F, 0x8000, 0x2001, 0x1003, 0x1007, 
  // 0x034(52) :   [0x0F7(247)]
  0x1C00, 0x1C01, 0x1C03, 0x1C07, 0x180F, 0x101F, 0x103F, 0x107F, 0x10FF, 0x11FF, 0x13FF, 0x27FF, 0x5FFF, 
  // 0x035(53) :   [0x104(260)]
  0xFFFF, 0x1FFE, 0x1FFC, 0x1FF8, 
  // 0x036(54) :   [0x108(264)]
  0x6FFF, 0x1FFE, 0x1FF8, 0x1FE0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x4000, 
  // 0x037(55) :   [0x112(274)]
  0x3FFF, 0x1FF8, 0x1F80, 0x1C00, 0xC000, 
  // 0x038(56) :   [0x117(279)]
  0x2FFF, 0x1C00, 0xF000, 
  // 0x039(57) :   [0x11A(282)]
  0x2FFF, 0x1007, 0xF000, 
  // 0x03A(58) :   [0x11D(285)]
  0x3FFF, 0x13FF, 0x103F, 0x100F, 0x1007, 0x1003, 0x1001, 0x9000, 
  // 0x03B(59) :   [0x125(293)]
  0xAFFF, 0x87FF, 
  // 0x03C(60) :   [0x127(295)]
  0x1807, 0x281F, 0x183F, 0x1C7F, 0x2CFF, 0x1DFF, 0xAFFF, 
  // 0x03D(61) :   [0x12E(302)]
  0x8FFF, 0x1FFC, 0x1FF0, 0x1FE0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x2800, 0x1000, 
  // 0x03E(62) :   [0x138(312)]
  0x6FFF, 0x1FC0, 0x1C00, 0xA000, 
  // 0x03F(63) :   [0x13C(316)]
  0x6FFF, 0xC000, 
  // 0x040(64) :   [0x13E(318)]
  0x1FFC, 0x2FF8, 0x2FF0, 0x1FC0, 0xC000, 
  // 0x041(65) :   [0x143(323)]
  0xF000, 0x1000, 0x101F, 0x11FF, 
  // 0x042(66) :   [0x147(327)]
  0xE000, 0x1001, 0x10FF, 0x2FFF, 
  // 0x043(67) :   [0x14B(331)]
  0xD000, 0x107F, 0x4FFF, 
  // 0x044(68) :   [0x14E(334)]
  0xB000, 0x107F, 0x17FF, 0x5FFF, 
  // 0x045(69) :   [0x152(338)]
  0x9000, 0x103F, 0x17FF, 0x7FFF, 
  // 0x046(70) :   [0x156(342)]
  0x6000, 0x1003, 0x101F, 0x17FF, 0x9FFF, 
  // 0x047(71) :   [0x15B(347)]
  0x33FF, 0x27FF, 0xDFFF, 
  // 0x048(72) :   [0x15E(350)]
  0x8FFF, 0x1FFE, 0x2FFC, 0x2FF8, 0x2FF0, 0x2FE0, 0x1FC0, 
  // 0x049(73) :   [0x165(357)]
  0x1FC0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0xC000, 
  // 0x04A(74) :   [0x16C(364)]
  0x1007, 0x100F, 0x201F, 0x203F, 0x207F, 0x20FF, 0x21FF, 0x23FF, 0x37FF, 0x1FFF, 
  // 0x04B(75) :   [0x176(374)]
  0x1FF8, 0x1FF0, 0x2FE0, 0x2FC0, 0x2F80, 0x2F00, 0x2E00, 0x3C00, 0x2800, 0x1000, 
  // 0x04C(76) :   [0x180(384)]
  0xF000, 0x2000, 0x100F, 
  // 0x04D(77) :   [0x183(387)]
  0xF000, 0x100F, 0x17FF, 0x1FFF, 
  // 0x04E(78) :   [0x187(391)]
  0xB000, 0x1003, 0x101F, 0x10FF, 0x4FFF, 
  // 0x04F(79) :   [0x18C(396)]
  0x2000, 0x2001, 0x1003, 0x100F, 0x101F, 0x103F, 0x10FF, 0x13FF, 0x17FF, 0x7FFF, 
  // 0x050(80) :   [0x196(406)]
  0xDFFF, 0x1F7F, 0x1E7F, 0x1C7F, 0x18FF, 0x10FF, 
  // 0x051(81) :   [0x19C(412)]
  0x1FFF, 0x3FFE, 0x3FFC, 0x4FF8, 0x3FF0, 0x4FE0, 
  // 0x052(82) :   [0x1A2(418)]
  0xE000, 0x1001, 0x1007, 0x100F, 0x101F, 
  // 0x053(83) :   [0x1A7(423)]
  0x7000, 0x1001, 0x1007, 0x101F, 0x107F, 0x11FF, 0x17FF, 0x5FFF, 
  // 0x054(84) :   [0x1AF(431)]
  0x3000, 0x1007, 0x101F, 0x11FF, 0x17FF, 0xBFFF, 
  // 0x055(85) :   [0x1B5(437)]
  0x100F, 0x107F, 0x17FF, 0xFFFF, 
  // 0x056(86) :   [0x1B9(441)]
  0xFFFF, 0x2FFF, 0x1FFC, 
  // 0x057(87) :   [0x1BC(444)]
  0xFFFF, 0x1FFF, 0x1FC0, 0x1000, 
  // 0x058(88) :   [0x1C0(448)]
  0xEFFF, 0x1FFC, 0x1800, 0x2000, 
  // 0x059(89) :   [0x1C4(452)]
  0xCFFF, 0x1FFE, 0x1E00, 0x4000, 
  // 0x05A(90) :   [0x1C8(456)]
  0xCFFF, 0x407F, 0x20FF, 
  // 0x05B(91) :   [0x1CB(459)]
  0x2FC0, 0x2F80, 0x3F00, 0x4E00, 0x4C00, 0x3800, 
  // 0x05C(92) :   [0x1D1(465)]
  0x1000, 0x4001, 0x3003, 0x3007, 0x400F, 0x301F, 
  // 0x05D(93) :   [0x1D7(471)]
  0x3FFF, 0x2FFE, 0xDFFF, 
  // 0x05E(94) :   [0x1DA(474)]
  0x4000, 0x101F, 0xDFFF, 
  // 0x05F(95) :   [0x1DD(477)]
  0x2000, 0x1001, 0x11FF, 0xEFFF, 
  // 0x060(96) :   [0x1E1(481)]
  0x1001, 0x103F, 0xFFFF, 0x1FFF, 
  // 0x061(97) :   [0x1E5(485)]
  0xFFFF, 0x1FFF, 0x1FFC, 0x1F80, 
  // 0x062(98) :   [0x1E9(489)]
  0xDFFF, 0x1FF8, 0x1FE0, 0x1E00, 0x2000, 
  // 0x063(99) :   [0x1EE(494)]
  0x8FFF, 0x1FFE, 0x1FF8, 0x1FC0, 0x1F00, 0x1800, 0x5000, 
  // 0x064(100) :   [0x1F5(501)]
  0x1FFE, 0x1FFC, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F00, 0x1C00, 0x1800, 0x7000, 0x3001, 
  // 0x065(101) :   [0x1FF(511)]
  0x20FF, 0x31FF, 0x43FF, 0x37FF, 0x6FFF, 
  // 0x066(102) :   [0x204(516)]
  0x4FC0, 0x3F80, 0x4F00, 0x4E00, 0x3C00, 
  // 0x067(103) :   [0x209(521)]
  0x8000, 0x2001, 0x2003, 0x3007, 0x300F, 
  // 0x068(104) :   [0x20E(526)]
  0x103F, 0x107F, 0x10FF, 0x11FF, 0x23FF, 0x17FF, 0xBFFF, 
  // 0x069(105) :   [0x215(533)]
  0xAFFF, 0x1FFE, 0x2FFC, 0x2FF8, 0x3FF0, 
  // 0x06A(106) :   [0x21A(538)]
  0x3FFF, 0x1FFC, 0x1FE0, 0x1F80, 0x1E00, 0x1C00, 0x1800, 0x9000, 
  // 0x06B(107) :   [0x222(546)]
  0x1FFF, 0x1FF8, 0x1800, 0xF000, 
  // 0x06C(108) :   [0x226(550)]
  0x1C00, 0xF000, 0x2000, 
  // 0x06D(109) :   [0x229(553)]
  0xE000, 0x3001, 0x1003, 
  // 0x06E(110) :   [0x22C(556)]
  0x10FF, 0x31FF, 0x33FF, 0x37FF, 0x8FFF, 
  // 0x06F(111) :   [0x231(561)]
  0x3800, 0xD000, 0x2800, 
  // 0x070(112) :   [0x234(564)]
  0x201F, 0xF03F, 0x103F, 
  // 0x071(113) :   [0x237(567)]
  0x8FFF, 0x1FFE, 0x9FC0, 
  // 0x072(114) :   [0x23A(570)]
  0x7FFF, 0x1C00, 0xA000, 
  // 0x073(115) :   [0x23D(573)]
  0x5FFF, 0x1FF0, 0x1800, 0xB000, 
  // 0x074(116) :   [0x241(577)]
  0x4FFF, 0x1F80, 0xD000, 
  // 0x075(117) :   [0x244(580)]
  0x2FFF, 0x1FE0, 0x1800, 0xE000, 
  // 0x076(118) :   [0x248(584)]
  0x1FF8, 0x1F80, 0xF000, 0x1000, 
  // 0x077(119) :   [0x24C(588)]
  0x1001, 0x4003, 0x3007, 0x400F, 0x401F, 0x203F, 
  // 0x078(120) :   [0x252(594)]
  0x7FFF, 0x4FFE, 0x3FFC, 0x4FF8, 
  // 0x079(121) :   [0x256(598)]
  0x3800, 0xF000, 
  // 0x07A(122) :   [0x258(600)]
  0x401F, 0x803F, 0x401F, 0x200F, 
  // 0x07B(123) :   [0x25C(604)]
  0x1FF0, 0x2FE0, 0x3FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0x9FFF, 
  // 0x07C(124) :   [0x263(611)]
  0xA000, 0x1C00, 0x1F80, 0x1FF0, 0x5FFF, 
  // 0x07D(125) :   [0x268(616)]
  0xD000, 0x1800, 0x4FFF, 
  // 0x07E(126) :   [0x26B(619)]
  0xE000, 0x4FFF, 
  // 0x07F(127) :   [0x26D(621)]
  0x2003, 0x3007, 0x400F, 0x301F, 0x103F, 0x5FFF, 
  // 0x080(128) :   [0x273(627)]
  0x1FFC, 0x3FF8, 0x4FF0, 0x2FE0, 0x4FC0, 0x3F80, 0x1F00, 
  // 0x081(129) :   [0x27A(634)]
  0x7FFF, 0x47FF, 0x23FF, 0x21FF, 0x20FF, 0x107F, 
  // 0x082(130) :   [0x280(640)]
  0x1800, 0x1C00, 0x2E00, 0x1F00, 0x1F80, 0x1FC0, 0x1FF0, 0x1FFC, 0x9FFF, 
  // 0x083(131) :   [0x289(649)]
  0x9000, 0x1800, 0x1F00, 0x1FF8, 0x6FFF, 
  // 0x084(132) :   [0x28E(654)]
  0xC000, 0x1F80, 0x5FFF, 
  // 0x085(133) :   [0x291(657)]
  0xD000, 0x5FFF, 
  // 0x086(134) :   [0x293(659)]
  0xC000, 0x6FFF, 
  // 0x087(135) :   [0x295(661)]
  0xB000, 0x107F, 0x6FFF, 
  // 0x088(136) :   [0x298(664)]
  0x503F, 0x601F, 0x7FFF, 
  // 0x089(137) :   [0x29B(667)]
  0x2FE0, 0x1FF0, 0x2FF8, 0x1FFC, 0x1FFE, 0xBFFF, 
  // 0x08A(138) :   [0x2A1(673)]
  0x7000, 0x1800, 0x1C00, 0x1F00, 0x1FE0, 0x7FFF, 
  // 0x08B(139) :   [0x2A7(679)]
  0xC000, 0x1FF0, 0x5FFF, 
  // 0x08C(140) :   [0x2AA(682)]
  0xB000, 0x101F, 0x6FFF, 
  // 0x08D(141) :   [0x2AD(685)]
  0xB000, 0x7FFF, 
  // 0x08E(142) :   [0x2AF(687)]
  0xB000, 0x5F80, 0x2F00, 
  // 0x08F(143) :   [0x2B2(690)]
  0x103F, 0x407F, 0x30FF, 0x41FF, 0x33FF, 0x37FF, 
  // 0x090(144) :   [0x2B8(696)]
  0x4FF0, 0x3FE0, 0x3FC0, 0x4F80, 0x4F00, 
  // 0x091(145) :   [0x2BD(701)]
  0x100F, 0x2007, 0x1003, 0x1001, 0xD000, 
  // 0x092(146) :   [0x2C2(706)]
  0x6FFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF, 0x103F, 0x100F, 0x1007, 0x5000, 
  // 0x093(147) :   [0x2CB(715)]
  0xEFFF, 0x13FF, 0x107F, 0x1007, 0x1000, 
  // 0x094(148) :   [0x2D0(720)]
  0xFFFF, 0x1FFF, 0x1F00, 0x1000, 
  // 0x095(149) :   [0x2D4(724)]
  0xBFFF, 0x1FFE, 0x1FF8, 0x1FE0, 0x1F80, 0x3000, 
  // 0x096(150) :   [0x2DA(730)]
  0x3F00, 0x3E00, 0x2C00, 0x2800, 0x8000, 
  // 0x097(151) :   [0x2DF(735)]
  0x107F, 0x103F, 0x101F, 0x200F, 0x1007, 0x1003, 0xB000, 
  // 0x098(152) :   [0x2E6(742)]
  0x8FFF, 0x17FF, 0x13FF, 0x10FF, 0x107F, 0x101F, 0x1007, 0x1001, 0x3000, 
  // 0x099(153) :   [0x2EF(751)]
  0xFFFF, 0x13FF, 0x103F, 0x100F, 
  // 0x09A(154) :   [0x2F3(755)]
  0x5FFE, 0x4FFC, 0x2FF8, 0x2FF0, 0x1FE0, 0x1FC0, 0x1F80, 0x1C00, 0x1000, 
  // 0x09B(155) :   [0x2FC(764)]
  0x1FFF, 0x17FF, 0x13FF, 0x21FF, 0x10FF, 0x103F, 0x101F, 0x100F, 0x1003, 0x1001, 0x7000, 
  // 0x09C(156) :   [0x307(775)]
  0xBFFF, 0x17FF, 0x13FF, 0x107F, 0x101F, 0x1003, 0x2000, 
  // 0x09D(157) :   [0x30E(782)]
  0xFFFF, 0x1FFF, 0x13FF, 0x107F, 
  // 0x09E(158) :   [0x312(786)]
  0xDFFF, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FE0, 0x1F80, 
  // 0x09F(159) :   [0x318(792)]
  0x1F00, 0x3E00, 0x1C00, 0x2C01, 0x1801, 0x3803, 0x4007, 0x300F, 
  // 0x0A0(160) :   [0x320(800)]
  0x17FF, 0xFFFF, 0x2FFF, 
  // 0x0A1(161) :   [0x323(803)]
  0xEFFF, 0x3FFE, 0x1FFC, 
  // 0x0A2(162) :   [0x326(806)]
  0x3E00, 0x4C00, 0x4800, 0x7000, 
  // 0x0A3(163) :   [0x32A(810)]
  0x101F, 0xF000, 0x2000, 
  // 0x0A4(164) :   [0x32D(813)]
  0x1FFF, 0x10FF, 0xF000, 0x1000, 
  // 0x0A5(165) :   [0x331(817)]
  0x1FFF, 0x1FFC, 0xF000, 0x1000, 
  // 0x0A6(166) :   [0x335(821)]
  0x1FFF, 0xF000, 0x2000, 
  // 0x0A7(167) :   [0x338(824)]
  0x17FF, 0x100F, 0xF000, 0x1000, 
  // 0x0A8(168) :   [0x33C(828)]
  0x1FFF, 0x1FC0, 0xF000, 0x1000, 
  // 0x0A9(169) :   [0x340(832)]
  0x1FC0, 0xF000, 0x2000, 
  // 0x0AA(170) :   [0x343(835)]
  0x1001, 0xF000, 0x2000, 
  // 0x0AB(171) :   [0x346(838)]
  0x1FFF, 0x100F, 0xF000, 0x1000, 
  // 0x0AC(172) :   [0x34A(842)]
  0x1007, 0x1001, 0xF000, 0x1000, 
  // 0x0AD(173) :   [0x34E(846)]
  0x1FF8, 0x1FE0, 0xF000, 0x1000, 
  // 0x0AE(174) :   [0x352(850)]
  0xF000, 0x33E0, 
  // 0x0AF(175) :   [0x354(852)]
  0xF000, 0x31F0, 
  // 0x0B0(176) :   [0x356(854)]
  0xF000, 0x13C0, 0x27C0, 
  // 0x0B1(177) :   [0x359(857)]
  0xF000, 0x2078, 0x10FC, 
  // 0x0B2(178) :   [0x35C(860)]
  0xF000, 0x1000, 0x1006, 0x101F, 
  // 0x0B3(179) :   [0x360(864)]
  0xF000, 0x1000, 0x1001, 0x1007, 
  // 0x0B4(180) :   [0x364(868)]
  0xF000, 0x1000, 0x1800, 0x1C00, 
  // 0x0B5(181) :   [0x368(872)]
  0xF000, 0x1003, 0x1007, 0x100F, 
  // 0x0B6(182) :   [0x36C(876)]
  0xB000, 0x10FF, 0x13FF, 0x17FF, 0x1FFF, 0x1FC3, 0x1F01, 0x1E01, 
  // 0x0B7(183) :   [0x374(884)]
  0xB000, 0x1801, 0x2E01, 0x1F01, 0x3F00, 
  // 0x0B8(184) :   [0x379(889)]
  0xB000, 0x1E00, 0x2F00, 0x2F80, 0x1F81, 0x1FC3, 
  // 0x0B9(185) :   [0x37F(895)]
  0xB000, 0x10E0, 0x13F0, 0x17E0, 0x17C0, 0x1F80, 0x2F00, 
  // 0x0BA(186) :   [0x386(902)]
  0xB000, 0x11C0, 0x11E3, 0x13E7, 0x23FF, 0x13FC, 0x17F0, 
  // 0x0BB(187) :   [0x38D(909)]
  0xB000, 0x1FE0, 0x2FF8, 0x1FFC, 0x13FC, 0x10FE, 0x107E, 
  // 0x0BC(188) :   [0x394(916)]
  0x7000, 0x4001, 0x3003, 0x4007, 
  // 0x0BD(189) :   [0x398(920)]
  0x27E0, 0x17C0, 0x2FC0, 0x4F80, 0x4F00, 0x3E00, 0x2C00, 
  // 0x0BE(190) :   [0x39F(927)]
  0xB000, 0x101F, 0x107F, 0x10FF, 0x11FF, 0x13F8, 0x17E0, 0x1FC0, 
  // 0x0BF(191) :   [0x3A7(935)]
  0xB000, 0x1F80, 0x1FC0, 0x1FE0, 0x1FF0, 0x17F0, 0x13F8, 0x11F8, 
  // 0x0C0(192) :   [0x3AF(943)]
  0xB000, 0x100E, 0x300F, 0x301F, 
  // 0x0C1(193) :   [0x3B3(947)]
  0xB000, 0x107E, 0x11FF, 0x1BFF, 0x2FFF, 0x1F0F, 0x1C00, 
  // 0x0C2(194) :   [0x3BA(954)]
  0xC000, 0x1001, 0x1003, 0x100F, 0x101F, 0x103F, 0x107E, 
  // 0x0C3(195) :   [0x3C1(961)]
  0xB000, 0x17FC, 0x1FFE, 0x2FFF, 0x1E3F, 0x180F, 0x100F, 
  // 0x0C4(196) :   [0x3C8(968)]
  0xE000, 0x4800, 
  // 0x0C5(197) :   [0x3CA(970)]
  0xC000, 0x3001, 0x3003, 
  // 0x0C6(198) :   [0x3CD(973)]
  0x11F0, 0x23F0, 0x23E0, 0x27E0, 0x27C0, 0x1FC0, 0x1F80, 0x1F8F, 0x1F9F, 0x2FFF, 0x1FF8, 0x1FE0, 0x1F80, 
  // 0x0C7(199) :   [0x3DA(986)]
  0xB000, 0x1F00, 0x1F80, 0x1FC0, 0x2FE0, 0x17E0, 0x13F0, 
  // 0x0C8(200) :   [0x3E1(993)]
  0xD000, 0x1003, 0x1007, 0x100F, 0x101F, 0x103F, 
  // 0x0C9(201) :   [0x3E7(999)]
  0xB000, 0x13FE, 0x3FFF, 0x1E1F, 0x180F, 0x100F, 
  // 0x0CA(202) :   [0x3ED(1005)]
  0xB000, 0x1007, 0x100F, 0x280F, 0x3C0F, 
  // 0x0CB(203) :   [0x3F2(1010)]
  0xC000, 0x3800, 0x2C00, 0x1C01, 
  // 0x0CC(204) :   [0x3F6(1014)]
  0xB000, 0x10F0, 0x11F0, 0x13E0, 0x17E0, 0x17C0, 0x1FC0, 0x1F80, 
  // 0x0CD(205) :   [0x3FE(1022)]
  0xB000, 0x1007, 0x103F, 0x107F, 0x10FF, 0x11FE, 0x13F0, 0x17E0, 
  // 0x0CE(206) :   [0x406(1030)]
  0xB000, 0x1FC0, 0x1FE0, 0x1FF0, 0x1FF8, 0x13FC, 0x20FC, 
  // 0x0CF(207) :   [0x40D(1037)]
  0xB000, 0x1003, 0x3007, 0x300F, 
  // 0x0D0(208) :   [0x411(1041)]
  0xB000, 0x181F, 0x187F, 0x3FFF, 0x1F81, 0x1E00, 
  // 0x0D1(209) :   [0x417(1047)]
  0xB000, 0x1E00, 0x1F00, 0x2F80, 0x3FC0, 
  // 0x0D2(210) :   [0x41C(1052)]
  0xC000, 0x1003, 0x100F, 0x101F, 0x103F, 0x107F, 0x10FE, 
  // 0x0D3(211) :   [0x423(1059)]
  0x5000, 0x4001, 0x2003, 0x1FF3, 0x3FFF, 0x1C3F, 0x200F, 
  // 0x0D4(212) :   [0x42A(1066)]
  0x17C0, 0x3FC0, 0x3F80, 0x4F00, 0x3E00, 0x4C00, 
  // 0x0D5(213) :   [0x430(1072)]
  0xF000, 0x2000, 0x1001, 
  // 0x0D6(214) :   [0x433(1075)]
  0x10FC, 0x20F8, 0x21F8, 0x21F0, 0x13F0, 0x23E0, 0x17E0, 0x27C0, 0x2FC0, 0x3F80, 
  // 0x0D7(215) :   [0x43D(1085)]
  0x403F, 0x103E, 0x1018, 0x5000, 0x10E0, 0x10F0, 0x31F0, 0x23F0, 
  // 0x0D8(216) :   [0x445(1093)]
  0xB000, 0x101C, 0x203E, 0x203F, 0x207F, 
  // 0x0D9(217) :   [0x44A(1098)]
  0xB000, 0x10FE, 0x13FF, 0x17FF, 0x2FFF, 0x1C1F, 0x180F, 
  // 0x0DA(218) :   [0x451(1105)]
  0xB000, 0x101F, 0x187F, 0x18FF, 0x2FFF, 0x1FC0, 0x1F00, 
  // 0x0DB(219) :   [0x458(1112)]
  0xB000, 0x1F00, 0x2F80, 0x4FC0, 
  // 0x0DC(220) :   [0x45C(1116)]
  0x500F, 0x1006, 0x5000, 0x1038, 0x103C, 0x307C, 0x20FC, 
  // 0x0DD(221) :   [0x463(1123)]
  0x3C00, 0x1C03, 0x1803, 0x2003, 0x4007, 0x300F, 0x401F, 
  // 0x0DE(222) :   [0x46A(1130)]
  0x3000, 0x6E00, 0x2C00, 0x5FF8, 0x2000, 
  // 0x0DF(223) :   [0x46F(1135)]
  0xB000, 0x100F, 0x103F, 0x107F, 0x10FF, 0x11FC, 0x11F8, 0x13F0, 
  // 0x0E0(224) :   [0x477(1143)]
  0xB000, 0x1F80, 0x1FE0, 0x1FF0, 0x1FF8, 0x11F8, 0x1078, 0x1070, 
  // 0x0E1(225) :   [0x47F(1151)]
  0x3000, 0x13FF, 0x11FF, 0x1038, 0xA018, 0x2000, 
  // 0x0E2(226) :   [0x485(1157)]
  0x3000, 0x19E0, 0x11E0, 0x31F0, 0x2199, 0x119F, 0x318F, 0x2186, 0x2000, 
  // 0x0E3(227) :   [0x48E(1166)]
  0x3000, 0x2780, 0x3F80, 0x3980, 0x5180, 0x2000, 
  // 0x0E4(228) :   [0x494(1172)]
  0x100F, 0x101F, 0x103F, 0x103E, 0x207E, 0x107C, 0x40FF, 0x50F8, 0x20FC, 
  // 0x0E5(229) :   [0x49D(1181)]
  0x1C01, 0x1801, 0x2003, 0x1007, 0x101F, 0x10FF, 0x1FFF, 0x1FFE, 0x1FF8, 0x1F80, 0x5000, 0x1007, 0x101F, 
  // 0x0E6(230) :   [0x4AA(1194)]
  0x3F00, 0x2E00, 0x1C00, 0x1800, 0x4000, 0x1001, 0x2003, 0x1007, 0x100F, 0x101F, 0x103F, 
  // 0x0E7(231) :   [0x4B5(1205)]
  0x27C7, 0x17EF, 0x17FF, 0x13FF, 0x13FE, 0x11FC, 0x11F8, 0x13F8, 0x17F8, 0x2FF8, 0x1FFC, 0x1E7C, 0x1C7C, 0x187E, 0x183E, 0x103E, 
  // 0x0E8(232) :   [0x4C5(1221)]
  0x1E00, 0x1C00, 0x1800, 0x2000, 0x4001, 0x4003, 0x3007, 0x200F, 
  // 0x0E9(233) :   [0x4CD(1229)]
  0x27E0, 0x2FC0, 0x3F80, 0x4F00, 0x3E00, 0x2C00, 0x1C01, 0x1C03, 
  // 0x0EA(234) :   [0x4D5(1237)]
  0x707E, 0x107C, 0x20FC, 0x10F8, 0x21F8, 0x13F0, 0x17E0, 0x1FE0, 0x1FC0, 0x1F80, 
  // 0x0EB(235) :   [0x4DF(1247)]
  0x300F, 0x401F, 0x103F, 0x203E, 0x207E, 0x207C, 0x20FC, 0x20F8, 
  // 0x0EC(236) :   [0x4E7(1255)]
  0x1C01, 0x2803, 0x2807, 0x400F, 0x901F, 
  // 0x0ED(237) :   [0x4EC(1260)]
  0x1F80, 0x1F00, 0x2E00, 0x3C00, 0x5800, 0x3000, 0x1801, 0x1803, 0x1C07, 
  // 0x0EE(238) :   [0x4F5(1269)]
  0x11F8, 0x50F8, 0x21F8, 0x21F0, 0x13F0, 0x13E0, 0x17E0, 0x17C0, 0x1FC0, 0x2F80, 0x1F00, 
  // 0x0EF(239) :   [0x500(1280)]
  0x303F, 0x103E, 0x107E, 0x307C, 0x10FC, 0x20F8, 0x21F8, 0x11F0, 0x23F0, 0x23E0, 
  // 0x0F0(240) :   [0x50A(1290)]
  0x1800, 0xF000, 0x2000, 
  // 0x0F1(241) :   [0x50D(1293)]
  0x20FC, 0x11F8, 0x11F0, 0x13F0, 0x13E0, 0x17E0, 0x37FF, 0x1FFF, 0x1FC0, 0x2F80, 0x3FC0, 0x17E0, 
  // 0x0F2(242) :   [0x519(1305)]
  0x200F, 0x201F, 0x107F, 0x10FE, 0x17FC, 0x1FF8, 0x1FE0, 0x1F80, 0x1800, 0x5000, 0x1078, 0x10F8, 
  // 0x0F3(243) :   [0x525(1317)]
  0x1003, 0x3007, 0x400F, 0x401F, 0x203F, 0x103E, 0x307E, 
  // 0x0F4(244) :   [0x52C(1324)]
  0x2F00, 0x1E00, 0x3C00, 0x4800, 0x2000, 0x2001, 0x1003, 0x1007, 0x100F, 0x101F, 
  // 0x0F5(245) :   [0x536(1334)]
  0x53F0, 0x23E0, 0x27E0, 0x17C0, 0x2FC0, 0x2F80, 0x1F00, 0x2E00, 0x1C00, 
  // 0x0F6(246) :   [0x53F(1343)]
  0x107E, 0x10FC, 0x10F8, 0x11F8, 0x11F0, 0x23F0, 0x13FF, 0x37FF, 0x57C0, 0x17E0, 0x17F0, 
  // 0x0F7(247) :   [0x54A(1354)]
  0x300F, 0x101F, 0x103F, 0x10FE, 0x17FC, 0x1FF8, 0x1FF0, 0x1FC0, 0x1C00, 0x5000, 0x1038, 0x1078, 
  // 0x0F8(248) :   [0x556(1366)]
  0x1C0F, 0x380F, 0x400F, 0xA007, 
  // 0x0F9(249) :   [0x55A(1370)]
  0x1C01, 0x2C03, 0x2C07, 0x2C0F, 0x1C1F, 0x1C3F, 0x1C3E, 0x1C7E, 0x1C7C, 0x2CF8, 0x1DF0, 0x1FF0, 0x1FE0, 0x1FC0, 
  // 0x0FA(250) :   [0x568(1384)]
  0x2F00, 0x2E01, 0x2C03, 0x1807, 0x3007, 0x700F, 0x1007, 
  // 0x0FB(251) :   [0x56F(1391)]
  0x1FC0, 0x2F80, 0x1F00, 0x3E00, 0x9C00, 0x1C01, 0x1E03, 
  // 0x0FC(252) :   [0x576(1398)]
  0x10FC, 0x507C, 0x30FC, 0x10F8, 0x21F8, 0x23F0, 0x17E0, 0x2FC0, 0x1F80, 
  // 0x0FD(253) :   [0x57F(1407)]
  0x100F, 0x301F, 0x303F, 0x103E, 0x207E, 0x207C, 0x10FC, 0x20F8, 0x11F8, 0x21F0, 
  // 0x0FE(254) :   [0x589(1417)]
  0x2C00, 0x1800, 0x1000, 0x4001, 0x4003, 0x3007, 0x300F, 
  // 0x0FF(255) :   [0x590(1424)]
  0x2FC0, 0x4F80, 0x3F00, 0x1F01, 0x4E01, 0x3C01, 0x1801, 
  // 0x100(256) :   [0x597(1431)]
  0x11FC, 0x11F8, 0x13F0, 0x27E0, 0x17C0, 0x2FC0, 0x4F80, 0x3F00, 0x3F80, 
  // 0x101(257) :   [0x5A0(1440)]
  0x200F, 0x301F, 0x203F, 0x203E, 0x107E, 0x207C, 0x20FC, 0x21F8, 0x13F8, 0x1FF8, 
  // 0x102(258) :   [0x5AA(1450)]
  0x2001, 0x4003, 0x4007, 0x300F, 0x401F, 0x103F, 
  // 0x103(259) :   [0x5B0(1456)]
  0x1F80, 0x3F00, 0x4E00, 0x1C00, 0x3C01, 0x1801, 0x2803, 0x2003, 0x1007, 
  // 0x104(260) :   [0x5B9(1465)]
  0x23E0, 0x27E0, 0x27C0, 0x2FC0, 0x3F80, 0x4F00, 0x3E00, 
  // 0x105(261) :   [0x5C0(1472)]
  0x107E, 0x10FE, 0x20FC, 0x10F8, 0x21F8, 0x21F0, 0x23F0, 0x13E0, 0x27E0, 0x27C0, 0x1FC0, 0x1F80, 
  // 0x106(262) :   [0x5CC(1484)]
  0x600F, 0x301F, 0x203F, 0x203E, 0x207E, 0x207C, 0x10FC, 
  // 0x107(263) :   [0x5D3(1491)]
  0x2E00, 0x2C00, 0x3800, 0x3001, 0x4003, 0x3007, 0x100F, 
  // 0x108(264) :   [0x5DA(1498)]
  0x37C0, 0x2FC0, 0x3F80, 0x4F00, 0x3E00, 0x1C00, 0x2C01, 
  // 0x109(265) :   [0x5E1(1505)]
  0x20F8, 0x11F8, 0x21F0, 0x23F0, 0x23E0, 0x27E0, 0x17C0, 0x2FC0, 0x4F80, 
  // 0x10A(266) :   [0x5EA(1514)]
  0x103F, 0x203E, 0x207E, 0x207C, 0x20FC, 0x10F8, 0x21F8, 0x21F0, 0x43F0, 
  // 0x10B(267) :   [0x5F3(1523)]
  0xF000, 0x1000, 0x1003, 0x1307, 
  // 0x10C(268) :   [0x5F7(1527)]
  0x33F0, 0x13F8, 0x11FC, 0x11FE, 0x10FF, 0x107F, 0x103F, 0x101F, 0x1007, 0x1003, 0x4001, 0x1003, 0x1803, 
  // 0x10D(269) :   [0x604(1540)]
  0x6000, 0x1800, 0x1C00, 0x1E00, 0x3F00, 0x3F80, 0x3F00, 
  // 0x10E(270) :   [0x60B(1547)]
  0x10FF, 0x207F, 0x103F, 0x100F, 0xD000, 
  // 0x10F(271) :   [0x610(1552)]
  0x107F, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FE0, 0xD000, 
  // 0x110(272) :   [0x616(1558)]
  0x107E, 0x107C, 0x10F8, 0x11F8, 0x11F0, 0xD000, 
  // 0x111(273) :   [0x61C(1564)]
  0x203F, 0x201F, 0x100F, 0xD000, 
  // 0x112(274) :   [0x620(1568)]
  0x200F, 0x101F, 0x281F, 0x101F, 0x303E, 0x107E, 0x207C, 0x20FC, 0x20F8, 0x11F8, 0x11F0, 
  // 0x113(275) :   [0x62B(1579)]
  0x1C0F, 0x3FFF, 0x1FFC, 0xD000, 
  // 0x114(276) :   [0x62F(1583)]
  0x1F00, 0x1E00, 0x1C00, 0x1800, 0xE000, 
  // 0x115(277) :   [0x634(1588)]
  0x10F8, 0x30FE, 0x107E, 0xD000, 
  // 0x116(278) :   [0x638(1592)]
  0x200F, 0x1007, 0x1003, 0x1001, 0xD000, 
  // 0x117(279) :   [0x63D(1597)]
  0x1E1F, 0x2FFF, 0x1FFE, 0x1FF8, 0xD000, 
  // 0x118(280) :   [0x642(1602)]
  0x1E00, 0x1C00, 0x1800, 0xF000, 
  // 0x119(281) :   [0x646(1606)]
  0x27E0, 0x27C0, 0x1780, 0xD000, 
  // 0x11A(282) :   [0x64A(1610)]
  0x17F8, 0x17FF, 0x13FF, 0x11FF, 0x107F, 0xD000, 
  // 0x11B(283) :   [0x650(1616)]
  0x13F8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F00, 0xD000, 
  // 0x11C(284) :   [0x656(1622)]
  0x107E, 0x20FF, 0x107F, 0x101F, 0xD000, 
  // 0x11D(285) :   [0x65B(1627)]
  0x107F, 0x1FFF, 0x1FFC, 0x1FF8, 0x1FE0, 0xD000, 
  // 0x11E(286) :   [0x661(1633)]
  0x17F8, 0x13FF, 0x11FF, 0x10FF, 0x107F, 0xD000, 
  // 0x11F(287) :   [0x667(1639)]
  0x13F8, 0x1FF8, 0x1FF0, 0x1FC0, 0x1F00, 0x7000, 0x1003, 0x4007, 0x1003, 
  // 0x120(288) :   [0x670(1648)]
  0x7007, 0x200F, 0x201F, 0x103E, 0x107E, 0x19FC, 0x1FF8, 0x1FF0, 0x1FE0, 0x1FC0, 
  // 0x121(289) :   [0x67A(1658)]
  0x1FC0, 0x2F80, 0x1F00, 0x2E00, 0x2C00, 0x1800, 0x9000, 
  // 0x122(290) :   [0x681(1665)]
  0x2007, 0x1003, 0x1001, 0xE000, 
  // 0x123(291) :   [0x685(1669)]
  0x1F0F, 0x3FFF, 0x1FFE, 0x10C0, 0xC000, 
  // 0x124(292) :   [0x68A(1674)]
  0x11F0, 0x13F0, 0x33E0, 0xD000, 
  // 0x125(293) :   [0x68E(1678)]
  0x100F, 0x301F, 0x101E, 0xD000, 
  // 0x126(294) :   [0x692(1682)]
  0x1801, 0x1800, 0xF000, 0x1000, 
  // 0x127(295) :   [0x696(1686)]
  0x1FE3, 0x2FFF, 0x17FF, 0x13FC, 0xD000, 
  // 0x128(296) :   [0x69B(1691)]
  0x1FF8, 0x2FFE, 0x10FE, 0x107C, 0xD000, 
  // 0x129(297) :   [0x6A0(1696)]
  0x303F, 0x101F, 0x100F, 0xD000, 
  // 0x12A(298) :   [0x6A4(1700)]
  0x1007, 0x1807, 0x1E07, 0x1E03, 0x1801, 0xD000, 
  // 0x12B(299) :   [0x6AA(1706)]
  0x1E00, 0x3F81, 0x1F01, 0xD000, 
  // 0x12C(300) :   [0x6AE(1710)]
  0x3F80, 0x2F00, 0xD000, 
  // 0x12D(301) :   [0x6B1(1713)]
  0x10FC, 0x10F8, 0x21F8, 0x11F0, 0xD000, 
  // 0x12E(302) :   [0x6B6(1718)]
  0x500F, 0xD000, 
  // 0x12F(303) :   [0x6B8(1720)]
  0x1C01, 0x2801, 0x1800, 0xE000, 
  // 0x130(304) :   [0x6BC(1724)]
  0x1F80, 0x3FE0, 0x17C0, 0xD000, 
  // 0x131(305) :   [0x6C0(1728)]
  0x13F8, 0x13FF, 0x21FF, 0x107F, 0x100C, 0xC000, 
  // 0x132(306) :   [0x6C6(1734)]
  0x3F07, 0x1E03, 0x1C00, 0xD000, 
  // 0x133(307) :   [0x6CA(1738)]
  0x1E0F, 0x3FFF, 0x1FFE, 0x10E0, 0xC000, 
  // 0x134(308) :   [0x6CF(1743)]
  0x2E00, 0x1C00, 0x1800, 0xE000, 
  // Total  [0x6D3(3494)]
  // Orginial Total:  309 fonts ,  Size:(8343)]
  0x0000

};
WORD code tOSDLogoFont_1[] =
{
  // 0x0FF(255) :   [0x590(1424)]
  0x2FC0, 0x4F80, 0x3F00, 0x1F01, 0x4E01, 0x3C01, 0x1801, 
  // 0x100(256) :   [0x597(1431)]
  0x11FC, 0x11F8, 0x13F0, 0x27E0, 0x17C0, 0x2FC0, 0x4F80, 0x3F00, 0x3F80, 
  // 0x101(257) :   [0x5A0(1440)]
  0x200F, 0x301F, 0x203F, 0x203E, 0x107E, 0x207C, 0x20FC, 0x21F8, 0x13F8, 0x1FF8, 
  // 0x102(258) :   [0x5AA(1450)]
  0x2001, 0x4003, 0x4007, 0x300F, 0x401F, 0x103F, 
  // 0x103(259) :   [0x5B0(1456)]
  0x1F80, 0x3F00, 0x4E00, 0x1C00, 0x3C01, 0x1801, 0x2803, 0x2003, 0x1007, 
  // 0x104(260) :   [0x5B9(1465)]
  0x23E0, 0x27E0, 0x27C0, 0x2FC0, 0x3F80, 0x4F00, 0x3E00, 
  // 0x105(261) :   [0x5C0(1472)]
  0x107E, 0x10FE, 0x20FC, 0x10F8, 0x21F8, 0x21F0, 0x23F0, 0x13E0, 0x27E0, 0x27C0, 0x1FC0, 0x1F80, 
  // 0x106(262) :   [0x5CC(1484)]
  0x600F, 0x301F, 0x203F, 0x203E, 0x207E, 0x207C, 0x10FC, 
  // 0x107(263) :   [0x5D3(1491)]
  0x2E00, 0x2C00, 0x3800, 0x3001, 0x4003, 0x3007, 0x100F, 
  // 0x108(264) :   [0x5DA(1498)]
  0x37C0, 0x2FC0, 0x3F80, 0x4F00, 0x3E00, 0x1C00, 0x2C01, 
  // 0x109(265) :   [0x5E1(1505)]
  0x20F8, 0x11F8, 0x21F0, 0x23F0, 0x23E0, 0x27E0, 0x17C0, 0x2FC0, 0x4F80, 
  // 0x10A(266) :   [0x5EA(1514)]
  0x103F, 0x203E, 0x207E, 0x207C, 0x20FC, 0x10F8, 0x21F8, 0x21F0, 0x43F0, 
  // 0x10B(267) :   [0x5F3(1523)]
  0xF000, 0x1000, 0x1003, 0x1307, 
  // 0x10C(268) :   [0x5F7(1527)]
  0x33F0, 0x13F8, 0x11FC, 0x11FE, 0x10FF, 0x107F, 0x103F, 0x101F, 0x1007, 0x1003, 0x4001, 0x1003, 0x1803, 
  // 0x10D(269) :   [0x604(1540)]
  0x6000, 0x1800, 0x1C00, 0x1E00, 0x3F00, 0x3F80, 0x3F00, 
  // 0x10E(270) :   [0x60B(1547)]
  0x10FF, 0x207F, 0x103F, 0x100F, 0xD000, 
  // 0x10F(271) :   [0x610(1552)]
  0x107F, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FE0, 0xD000, 
  // 0x110(272) :   [0x616(1558)]
  0x107E, 0x107C, 0x10F8, 0x11F8, 0x11F0, 0xD000, 
  // 0x111(273) :   [0x61C(1564)]
  0x203F, 0x201F, 0x100F, 0xD000, 
  // 0x112(274) :   [0x620(1568)]
  0x200F, 0x101F, 0x281F, 0x101F, 0x303E, 0x107E, 0x207C, 0x20FC, 0x20F8, 0x11F8, 0x11F0, 
  // 0x113(275) :   [0x62B(1579)]
  0x1C0F, 0x3FFF, 0x1FFC, 0xD000, 
  // 0x114(276) :   [0x62F(1583)]
  0x1F00, 0x1E00, 0x1C00, 0x1800, 0xE000, 
  // 0x115(277) :   [0x634(1588)]
  0x10F8, 0x30FE, 0x107E, 0xD000, 
  // 0x116(278) :   [0x638(1592)]
  0x200F, 0x1007, 0x1003, 0x1001, 0xD000, 
  // 0x117(279) :   [0x63D(1597)]
  0x1E1F, 0x2FFF, 0x1FFE, 0x1FF8, 0xD000, 
  // 0x118(280) :   [0x642(1602)]
  0x1E00, 0x1C00, 0x1800, 0xF000, 
  // 0x119(281) :   [0x646(1606)]
  0x27E0, 0x27C0, 0x1780, 0xD000, 
  // 0x11A(282) :   [0x64A(1610)]
  0x17F8, 0x17FF, 0x13FF, 0x11FF, 0x107F, 0xD000, 
  // 0x11B(283) :   [0x650(1616)]
  0x13F8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F00, 0xD000, 
  // 0x11C(284) :   [0x656(1622)]
  0x107E, 0x20FF, 0x107F, 0x101F, 0xD000, 
  // 0x11D(285) :   [0x65B(1627)]
  0x107F, 0x1FFF, 0x1FFC, 0x1FF8, 0x1FE0, 0xD000, 
  // 0x11E(286) :   [0x661(1633)]
  0x17F8, 0x13FF, 0x11FF, 0x10FF, 0x107F, 0xD000, 
  // 0x11F(287) :   [0x667(1639)]
  0x13F8, 0x1FF8, 0x1FF0, 0x1FC0, 0x1F00, 0x7000, 0x1003, 0x4007, 0x1003, 
  // 0x120(288) :   [0x670(1648)]
  0x7007, 0x200F, 0x201F, 0x103E, 0x107E, 0x19FC, 0x1FF8, 0x1FF0, 0x1FE0, 0x1FC0, 
  // 0x121(289) :   [0x67A(1658)]
  0x1FC0, 0x2F80, 0x1F00, 0x2E00, 0x2C00, 0x1800, 0x9000, 
  // 0x122(290) :   [0x681(1665)]
  0x2007, 0x1003, 0x1001, 0xE000, 
  // 0x123(291) :   [0x685(1669)]
  0x1F0F, 0x3FFF, 0x1FFE, 0x10C0, 0xC000, 
  // 0x124(292) :   [0x68A(1674)]
  0x11F0, 0x13F0, 0x33E0, 0xD000, 
  // 0x125(293) :   [0x68E(1678)]
  0x100F, 0x301F, 0x101E, 0xD000, 
  // 0x126(294) :   [0x692(1682)]
  0x1801, 0x1800, 0xF000, 0x1000, 
  // 0x127(295) :   [0x696(1686)]
  0x1FE3, 0x2FFF, 0x17FF, 0x13FC, 0xD000, 
  // 0x128(296) :   [0x69B(1691)]
  0x1FF8, 0x2FFE, 0x10FE, 0x107C, 0xD000, 
  // 0x129(297) :   [0x6A0(1696)]
  0x303F, 0x101F, 0x100F, 0xD000, 
  // 0x12A(298) :   [0x6A4(1700)]
  0x1007, 0x1807, 0x1E07, 0x1E03, 0x1801, 0xD000, 
  // 0x12B(299) :   [0x6AA(1706)]
  0x1E00, 0x3F81, 0x1F01, 0xD000, 
  // 0x12C(300) :   [0x6AE(1710)]
  0x3F80, 0x2F00, 0xD000, 
  // 0x12D(301) :   [0x6B1(1713)]
  0x10FC, 0x10F8, 0x21F8, 0x11F0, 0xD000, 
  // 0x12E(302) :   [0x6B6(1718)]
  0x500F, 0xD000, 
  // 0x12F(303) :   [0x6B8(1720)]
  0x1C01, 0x2801, 0x1800, 0xE000, 
  // 0x130(304) :   [0x6BC(1724)]
  0x1F80, 0x3FE0, 0x17C0, 0xD000, 
  // 0x131(305) :   [0x6C0(1728)]
  0x13F8, 0x13FF, 0x21FF, 0x107F, 0x100C, 0xC000, 
  // 0x132(306) :   [0x6C6(1734)]
  0x3F07, 0x1E03, 0x1C00, 0xD000, 
  // 0x133(307) :   [0x6CA(1738)]
  0x1E0F, 0x3FFF, 0x1FFE, 0x10E0, 0xC000, 
  // 0x134(308) :   [0x6CF(1743)]
  0x2E00, 0x1C00, 0x1800, 0xE000, 
  // Total  [0x6D3(3494)]
  // Orginial Total:  309 fonts ,  Size:(8343)]
  0x0000
};
WORD code tMainSmallLogo[]=
{
0x0000
};

#else
    WORD code tOSDLogoFont[] =  // AOCLogo
    {
  // 0x000(0) :   [0x000(0)]
  0xF000, 0x3000,
  // 0x001(1) :   [0x002(2)]
  0xF000, 0x1001, 0x1003, 0x1007,
  // 0x002(2) :   [0x006(6)]
  0x7000, 0x1003, 0x100F, 0x101F, 0x107F, 0x10FF, 0x11FF, 0x17FF, 0x4FFF,
  // 0x003(3) :   [0x00F(15)]
  0x4000, 0x101F, 0x11FF, 0x17FF, 0xBFFF,
  // 0x004(4) :   [0x014(20)]
  0x3000, 0xFFFF,
  // 0x005(5) :   [0x016(22)]
  0xA000, 0x1003, 0x100F, 0x101F, 0x107F, 0x10FF, 0x11FF, 0x13FF, 0x17FF,
  // 0x006(6) :   [0x01F(31)]
  0x5000, 0x1007, 0x103F, 0x10FF, 0x13FF, 0x9FFF,
  // 0x007(7) :   [0x025(37)]
  0x3000, 0x107F, 0x17FF, 0xDFFF,
  // 0x008(8) :   [0x029(41)]
  0x1000, 0x1001, 0xFFFF, 0x1FFF,
  // 0x009(9) :   [0x02D(45)]
  0x1000, 0xFFFF, 0x2FFF,
  // 0x00A(10) :   [0x030(48)]
  0x1000, 0x1FFC, 0xFFFF, 0x1FFF,
  // 0x00B(11) :   [0x034(52)]
  0x2000, 0x1FFC, 0xFFFF,
  // 0x00C(12) :   [0x037(55)]
  0x3000, 0x1F00, 0x1FF0, 0xDFFF,
  // 0x00D(13) :   [0x03B(59)]
  0x6000, 0x1E00, 0x1FC0, 0x1FF0, 0x1FFC, 0x8FFF,
  // 0x00E(14) :   [0x041(65)]
  0xB000, 0x1800, 0x1E00, 0x1F00, 0x1F80, 0x1FC0, 0x2FF0,
  // 0x00F(15) :   [0x048(72)]
  0xF000, 0x1000, 0x1001, 0x1003,
  // 0x010(16) :   [0x04C(76)]
  0x8000, 0x1003, 0x100F, 0x103F, 0x10FF, 0x11FF, 0x13FF, 0x17FF, 0x3FFF,
  // 0x011(17) :   [0x055(85)]
  0x4000, 0x1007, 0x107F, 0x13FF, 0xBFFF,
  // 0x012(18) :   [0x05A(90)]
  0x2000, 0x100F, 0x17FF, 0xEFFF,
  // 0x013(19) :   [0x05E(94)]
  0x1000, 0x100F, 0xFFFF, 0x1FFF,
  // 0x014(20) :   [0x062(98)]
  0x2000, 0xFFFF, 0x1FFF,
  // 0x015(21) :   [0x065(101)]
  0x3000, 0x1FC0, 0x1FFC, 0xDFFF,
  // 0x016(22) :   [0x069(105)]
  0x5000, 0x1800, 0x1E00, 0x1F80, 0x1FE0, 0x1FF0, 0x1FFC, 0x1FFE, 0x6FFF,
  // 0x017(23) :   [0x072(114)]
  0xD000, 0x1800, 0x1C00, 0x2E00, 0x1F00,
  // 0x018(24) :   [0x077(119)]
  0xE000, 0x2001, 0x2003,
  // 0x019(25) :   [0x07A(122)]
  0x1007, 0x100F, 0x101F, 0x203F, 0x107F, 0x20FF, 0x11FF, 0x23FF, 0x27FF, 0x5FFF,
  // 0x01A(26) :   [0x084(132)]
  0xFFFF, 0x3FFF,
  // 0x01B(27) :   [0x086(134)]
  0x1000, 0x1001, 0x2003, 0x1007, 0x200F, 0x201F, 0x203F, 0x307F, 0x30FF, 0x11FF,
  // 0x01C(28) :   [0x090(144)]
  0x1FF8, 0x1FFC, 0x1FFE, 0xFFFF,
  // 0x01D(29) :   [0x094(148)]
  0x5000, 0x1800, 0x2C00, 0x2E00, 0x2F00, 0x3F80, 0x3FC0,
  // 0x01E(30) :   [0x09B(155)]
  0x1007, 0x200F, 0x101F, 0x203F, 0x207F, 0x20FF, 0x21FF, 0x43FF, 0x27FF,
  // 0x01F(31) :   [0x0A4(164)]
  0x2F80, 0x3FC0, 0x2FE0, 0x4FF0, 0x5FF8, 0x2FFC,
  // 0x020(32) :   [0x0AA(170)]
  0x2007, 0x200F, 0x201F, 0x203F, 0x207F, 0x30FF, 0x21FF, 0x23FF, 0x17FF,
  // 0x021(33) :   [0x0B3(179)]
  0xBFFF, 0x2FFE, 0x1FFC, 0x2FF8, 0x2FF0,
  // 0x022(34) :   [0x0B8(184)]
  0x3FFF, 0x1FF8, 0x1FE0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x8000,
  // 0x023(35) :   [0x0C1(193)]
  0x2FFF, 0x1C1F, 0xF01F,
  // 0x024(36) :   [0x0C4(196)]
  0x31FF, 0x63FF, 0x97FF,
  // 0x025(37) :   [0x0C7(199)]
  0x7FFF, 0x1FFE, 0x2FFC, 0x3FF8, 0x5FF0,
  // 0x026(38) :   [0x0CC(204)]
  0x1FFF, 0x1FFC, 0x1FC0, 0x1F00, 0x1C00, 0x1800, 0xC000,
  // 0x027(39) :   [0x0D3(211)]
  0x1FFF, 0xF000, 0x2000,
  // 0x028(40) :   [0x0D6(214)]
  0x1FFF, 0x1001, 0xF000, 0x1000,
  // 0x029(41) :   [0x0DA(218)]
  0x2FFF, 0x10FF, 0x103F, 0x100F, 0x1007, 0x1003, 0x2001, 0x9000,
  // 0x02A(42) :   [0x0E2(226)]
  0xBFFF, 0x47FF, 0x33FF,
  // 0x02B(43) :   [0x0E5(229)]
  0x1FC0, 0x4FE0, 0x8FF0, 0x5FF8,
  // 0x02C(44) :   [0x0E9(233)]
  0x7000, 0xB001,
  // 0x02D(45) :   [0x0EB(235)]
  0x27FF, 0xFFFF, 0x1FFF,
  // 0x02E(46) :   [0x0EE(238)]
  0x4FFF, 0x1FFE, 0x1FFC, 0x1FF8, 0x2FF0, 0x2FE0, 0x3FC0, 0x4F80,
  // 0x02F(47) :   [0x0F6(246)]
  0x1FFF, 0x1FF0, 0x1E00, 0x1800, 0xE000,
  // 0x030(48) :   [0x0FB(251)]
  0x1FFF, 0x10FF, 0x100F, 0x1003, 0xE000,
  // 0x031(49) :   [0x100(256)]
  0x5FFF, 0x17FF, 0x23FF, 0x11FF, 0x40FF, 0x507F,
  // 0x032(50) :   [0x106(262)]
  0x6FFC, 0xCFFE,
  // 0x033(51) :   [0x108(264)]
  0x3000, 0x2001, 0x3003, 0x2007, 0x200F, 0x201F, 0x203F, 0x207F,
  // 0x034(52) :   [0x110(272)]
  0x17FF, 0xFFFF, 0x2FFF,
  // 0x035(53) :   [0x113(275)]
  0xFFFF, 0x2FFF, 0x1FFE,
  // 0x036(54) :   [0x116(278)]
  0x2FE0, 0x2FC0, 0x2F80, 0x2F00, 0x3E00, 0x2C00, 0x2800, 0x3000,
  // 0x037(55) :   [0x11E(286)]
  0xF01F, 0x301F,
  // 0x038(56) :   [0x120(288)]
  0xF7FF, 0x37FF,
  // 0x039(57) :   [0x122(290)]
  0x1FF0, 0xFFE0, 0x2FE0,
  // 0x03A(58) :   [0x125(293)]
  0xF3FF, 0x33FF,
  // 0x03B(59) :   [0x127(295)]
  0xFFF8, 0x3FF8,
  // 0x03C(60) :   [0x129(297)]
  0xF001, 0x3001,
  // 0x03D(61) :   [0x12B(299)]
  0x7F80, 0xBF00,
  // 0x03E(62) :   [0x12D(301)]
  0x307F, 0xF000,
  // 0x03F(63) :   [0x12F(303)]
  0x3FFF, 0xF000,
  // 0x040(64) :   [0x131(305)]
  0x3FFE, 0xF000,
  // 0x041(65) :   [0x133(307)]
  0xB000, 0x2001, 0x2003, 0x3007,
  // 0x042(66) :   [0x137(311)]
  0x20FF, 0x31FF, 0x23FF, 0x27FF, 0x9FFF,
  // 0x043(67) :   [0x13C(316)]
  0x1FFE, 0x2FFC, 0x3FF8, 0x2FF0, 0x2FE0, 0x2FC0, 0x2F80, 0x3F00, 0x1E00,
  // 0x044(68) :   [0x145(325)]
  0xFFE0, 0x3FE0,
  // 0x045(69) :   [0x147(327)]
  0xFF00, 0x3F00,
  // 0x046(70) :   [0x149(329)]
  0x200F, 0x201F, 0x203F, 0x207F, 0x20FF, 0x21FF, 0x33FF, 0x27FF, 0x1FFF,
  // 0x047(71) :   [0x152(338)]
  0x7FFF, 0x2FFE, 0x3FFC, 0x2FF8, 0x2FF0, 0x2FE0,
  // 0x048(72) :   [0x158(344)]
  0x1E00, 0x2C00, 0x2800, 0xD000,
  // 0x049(73) :   [0x15C(348)]
  0xAFE0, 0x6FF0, 0x2FF8,
  // 0x04A(74) :   [0x15F(351)]
  0xF3FF, 0x37FF,
  // 0x04B(75) :   [0x161(353)]
  0xFFF8, 0x1FF8, 0x2FF0,
  // 0x04C(76) :   [0x164(356)]
  0x3F00, 0xCF80, 0x3FC0,
  // 0x04D(77) :   [0x167(359)]
  0x6000, 0xA07F, 0x20FF,
  // 0x04E(78) :   [0x16A(362)]
  0x6000, 0xCFFF,
  // 0x04F(79) :   [0x16C(364)]
  0x6000, 0xCFFE,
  // 0x050(80) :   [0x16E(366)]
  0x1000, 0x2001, 0x2003, 0x2007, 0x300F, 0x201F, 0x203F, 0x207F, 0x20FF,
  // 0x051(81) :   [0x177(375)]
  0xFFFF, 0x3FFE,
  // 0x052(82) :   [0x179(377)]
  0x2FC0, 0x2F80, 0x3F00, 0x2E00, 0x2C00, 0x2800, 0x5000,
  // 0x053(83) :   [0x180(384)]
  0x37FF, 0x63FF, 0x41FF, 0x30FF, 0x207F,
  // 0x054(84) :   [0x185(389)]
  0x1FF8, 0x2FFC, 0x2FFE, 0xDFFF,
  // 0x055(85) :   [0x189(393)]
  0x6000, 0x1800, 0x1E00, 0x1F80, 0x1FF0, 0x8FFF,
  // 0x056(86) :   [0x18F(399)]
  0xA000, 0x1F80, 0x7FFF,
  // 0x057(87) :   [0x192(402)]
  0xA000, 0x10FF, 0x7FFF,
  // 0x058(88) :   [0x195(405)]
  0x3000, 0x1001, 0x1003, 0x1007, 0x100F, 0x101F, 0x107F, 0x17FF, 0x8FFF,
  // 0x059(89) :   [0x19E(414)]
  0x7FF0, 0x4FE0, 0x4FC0, 0x3F80,
  // 0x05A(90) :   [0x1A2(418)]
  0x5001, 0xD000,
  // 0x05B(91) :   [0x1A4(420)]
  0x1FC0, 0x2FE0, 0x1FF0, 0x1FF8, 0x1FFC, 0x1FFE, 0xBFFF,
  // 0x05C(92) :   [0x1AB(427)]
  0x8000, 0x1C00, 0x1FC0, 0x8FFF,
  // 0x05D(93) :   [0x1AF(431)]
  0xA000, 0x1C01, 0x7FFF,
  // 0x05E(94) :   [0x1B2(434)]
  0x8000, 0x1003, 0x101F, 0x8FFF,
  // 0x05F(95) :   [0x1B6(438)]
  0x20FF, 0x21FF, 0x23FF, 0x17FF, 0xBFFF,
  // 0x060(96) :   [0x1BB(443)]
  0xAFFE, 0x6FFC, 0x2FF8,
  // 0x061(97) :   [0x1BE(446)]
  0x9000, 0x2001, 0x2003, 0x2007, 0x200F, 0x101F,
  // 0x062(98) :   [0x1C4(452)]
  0x21FF, 0x23FF, 0x37FF, 0xBFFF,
  // 0x063(99) :   [0x1C8(456)]
  0x2FFC, 0x2FF8, 0x2FF0, 0x2FE0, 0x2FC0, 0x3F80, 0x2F00, 0x2E00, 0x1C00,
  // 0x064(100) :   [0x1D1(465)]
  0x107F, 0x203F, 0x201F, 0x200F, 0x1007, 0x1003, 0x2001, 0x7000,
  // 0x065(101) :   [0x1D9(473)]
  0xCFFF, 0x17FF, 0x13FF, 0x11FF, 0x10FF, 0x103F, 0x101F,
  // 0x066(102) :   [0x1E0(480)]
  0x9FFF, 0x1FFE, 0x1FFC, 0x1FF8, 0x1FF0, 0x1FE0, 0x1FC0, 0x1F80, 0x1F00, 0x1E00,
  // 0x067(103) :   [0x1EA(490)]
  0x2F00, 0x2E00, 0x2C00, 0x1800, 0xB000,
  // 0x068(104) :   [0x1EF(495)]
  0x31FF, 0x20FF, 0x207F, 0x203F, 0x101F, 0x200F, 0x1007, 0x1003, 0x1001, 0x3000,
  // 0x069(105) :   [0x1F9(505)]
  0xFFFF, 0x1FFF, 0x17FF, 0x13FF,
  // 0x06A(106) :   [0x1FD(509)]
  0xFFFF, 0x1FFE, 0x1FFC, 0x1FF8,
  // 0x06B(107) :   [0x201(513)]
  0x1FF8, 0x3FF0, 0x2FE0, 0x2FC0, 0x1F80, 0x2F00, 0x1E00, 0x1C00, 0x1800, 0x4000,
  // 0x06C(108) :   [0x20B(523)]
  0x201F, 0x203F, 0x207F, 0x20FF, 0x11FF, 0x9000,
  // 0x06D(109) :   [0x211(529)]
  0x9FFF, 0x9000,
  // 0x06E(110) :   [0x213(531)]
  0x5FFF, 0x3FFE, 0x1FFC, 0x9000,
  // 0x06F(111) :   [0x217(535)]
  0x1C00, 0x2800, 0xF000,
  // 0x070(112) :   [0x21A(538)]
  0x901F, 0x9000,
  // 0x071(113) :   [0x21C(540)]
  0x100F, 0x1003, 0xF000, 0x1000,
  // 0x072(114) :   [0x220(544)]
  0x3FFF, 0x13FF, 0x10FF, 0x101F, 0x1003, 0xB000,
  // 0x073(115) :   [0x226(550)]
  0x7FFF, 0x17FF, 0x103F, 0x9000,
  // 0x074(116) :   [0x22A(554)]
  0x9FFF, 0x17FF, 0x8000,
  // 0x075(117) :   [0x22D(557)]
  0xAFFF, 0x13FF, 0x7000,
  // 0x076(118) :   [0x230(560)]
  0xAFFF, 0x1FF0, 0x7000,
  // 0x077(119) :   [0x233(563)]
  0x9FFF, 0x1FF8, 0x8000,
  // 0x078(120) :   [0x236(566)]
  0x7FFF, 0x1FF0, 0x1E00, 0x9000,
  // 0x079(121) :   [0x23A(570)]
  0x1FFF, 0x1FFE, 0x1FFC, 0x1FF0, 0x1F80, 0x1E00, 0xC000,
  // 0x07A(122) :   [0x241(577)]
  0x1800, 0xF000, 0x2000,
  // 0x07B(123) :   [0x244(580)]
  0x11FF, 0x107F, 0x103F, 0x100F, 0x1003, 0xD000,
  // 0x07C(124) :   [0x24A(586)]
  0x6FFF, 0x11FF, 0x103F, 0x1001, 0x9000,
  // 0x07D(125) :   [0x24F(591)]
  0x9FFF, 0x107F, 0x8000,
  // 0x07E(126) :   [0x252(594)]
  0xAFFF, 0x100F, 0x7000,
  // 0x07F(127) :   [0x255(597)]
  0xBFFF, 0x7000,
  // 0x080(128) :   [0x257(599)]
  0xAFFF, 0x1FFC, 0x7000,
  // 0x081(129) :   [0x25A(602)]
  0x6FFF, 0x1FF8, 0x1FC0, 0x1E00, 0x9000,
  // 0x082(130) :   [0x25F(607)]
  0x1FF0, 0x1FE0, 0x1F80, 0x1E00, 0x1C00, 0xD000,
  // Total  [0x265(1226)]
  // Orginial Total:  131 fonts ,  Size:(3537)]
  0x0000

    };

WORD code tMainSmallLogo[]=
{
  // 0x000(0) :  AOC_02_1_1  [0x000(0)]
  0xA000, 0x1003, 0x1007, 0x100F, 0x201F, 0x203F, 0x107F,
  // 0x001(1) :  AOC_02_1_2  [0x007(7)]
  0xA000, 0x3FF0, 0x2FF1, 0x1BF1, 0x23F1,
  // 0x002(2) :  AOC_02_1_3  [0x00C(12)]
  0xA000, 0x13FF, 0x3FFF, 0x1F81, 0x3F00,
  // 0x003(3) :  AOC_02_1_4  [0x011(17)]
  0xA000, 0x1C00, 0x1F03, 0x1F07, 0x1F87, 0x4F8F,
  // 0x004(4) :  AOC_02_1_5  [0x017(23)]
  0xA000, 0x4FFF, 0x1E07, 0x1C07, 0x2803,
  // 0x005(5) :  AOC_02_1_6  [0x01C(28)]
  0xB000, 0x2C00, 0x5E00,
  // 0x006(6) :  AOC_02_2_1  [0x01F(31)]
  0x107E, 0x10FE, 0x10FC, 0x11FC, 0x11F8, 0x23F8, 0x13F0, 0x27F0, 0x17E0, 0x1FE0, 0x6000,
  // 0x007(7) :  AOC_02_2_2  [0x02A(42)]
  0x93F1, 0x33F0, 0x6000,
  // 0x008(8) :  AOC_02_2_3  [0x02D(45)]
  0x7F00, 0x1F81, 0x3FFF, 0x13FF, 0x6000,
  // 0x009(9) :  AOC_02_2_4  [0x032(50)]
  0x8F8F, 0x1F87, 0x1F07, 0x1F03, 0x1C00, 0x6000,
  // 0x00A(10) :  AOC_02_2_5  [0x038(56)]
  0x4800, 0x2803, 0x1C07, 0x1E07, 0x4FFF, 0x6000,
  // 0x00B(11) :  AOC_02_2_6  [0x03E(62)]
  0x4000, 0x5E00, 0x2C00, 0x7000,
  // Total  [0x042(132)]
  // Orginial Total:  12 fonts ,  Size:(324)]
  0x0000


};

#endif

#if CenterTitleText	//071228
WORD code tMainFont_Factory[]=
{
  // 0x000(0) : F  [0x000(0)]
 // 0x2000, 0x3FFE, 0x4E00, 0x3FFC, 0x6E00,
  // Total  [0x005(10)]
  // Orginial Total:  1 fonts ,  Size:(27)]
    // 0x000(0) : F  [0x000(0)]  //YF20081219
  0x9000, 0x3FFE, 0x4E00, 0x2FFC, 
  // 0x001(1) : F  [0x004(4)]
  0x1FFC, 0x6E00, 0xB000, 
  // Total  [0x007(14)]
  0x0000

};
#else
WORD code tMainFont_Factory[]=
{
  // 0x000(0) : F  [0x000(0)]
  0x2000, 0x3FFE, 0x4E00, 0x3FFC, 0x6E00,
   // Orginial Total:  1 fonts ,  Size:(27)]
    // 0x000(0) : F  [0x000(0)]  //YF20081219


};
#endif





WORD code tOSDSTDFont0[] =  // Basic Font
{
  // 0x000(0) :   [0x000(0)]
  0xF000, 0x3000,
  // 0x001(1) : UP_L  [0x002(2)]
  0xB000, 0x100F, 0x103F, 0x10FF, 0x11FF, 0x13FF, 0x27FF,
  // 0x002(2) : UP_R  [0x009(9)]
  0xB000, 0x1F00, 0x1FC0, 0x1FF0, 0x1FF8, 0x1FFC, 0x2FFE,
  // 0x003(3) : UP_Mid  [0x010(16)]
  0xB000, 0x7FFF,
  // 0x004(4) : DOWM_L  [0x012(18)]
  0x27FF, 0x13FF, 0x11FF, 0x10FF, 0x103F, 0x100F, 0xB000,
  // 0x005(5) : DOWN_R  [0x019(25)]
  0x2FFE, 0x1FFC, 0x1FF8, 0x1FF0, 0x1FC0, 0x1F00, 0xB000,
  // 0x006(6) : DOWN_Mid  [0x020(32)]
  0x7FFF, 0xB000,
  // 0x007(7) : F1 F7  [0x022(34)]
  0xFFFF, 0x3FFF,
  // 0x008(8) : F02  [0x024(36)]
  0x9FFF, 0x1FFC, 0x1FF0, 0x1FE0, 0x1F80, 0x1F00, 0x1E00, 0x1C00, 0x1800, 0x1000,
  // 0x009(9) : F03  [0x02E(46)]
  0x5FFF, 0x1FF0, 0x1F00, 0x1C00, 0xA000,
  // 0x00A(10) : F04  [0x033(51)]
  0x4FFF, 0x1801, 0xD000,
  // 0x00B(11) : F05  [0x036(54)]
  0x5FFF, 0x10FF, 0x100F, 0x1003, 0xA000,
  // 0x00C(12) : F06  [0x03B(59)]
  0x9FFF, 0x13FF, 0x10FF, 0x107F, 0x101F, 0x100F, 0x1007, 0x1003, 0x1001, 0x1000,
  // 0x00D(13) : F08  [0x045(69)]
  0x17FF, 0x13FF, 0x21FF, 0x10FF, 0x207F, 0x203F, 0x201F, 0x200F, 0x4007, 0x1003,
  // 0x00E(14) : F09  [0x04F(79)]
  0x4003, 0xA001, 0x4003,
  // 0x00F(15) : F10  [0x052(82)]
  0x1003, 0x4007, 0x200F, 0x201F, 0x9FFF,
  // 0x010(16) : F11  [0x057(87)]
  0x1C00, 0x4E00, 0x2F00, 0x2F80, 0x9FFF,
  // 0x011(17) : F12  [0x05C(92)]
  0x4C00, 0xA800, 0x4C00,
  // 0x012(18) : F13  [0x05F(95)]
  0x1FFE, 0x1FFC, 0x2FF8, 0x1FF0, 0x2FE0, 0x2FC0, 0x2F80, 0x2F00, 0x4E00, 0x1C00,
  // Total  [0x069(210)]
  // Orginial Total:  19 fonts ,  Size:(513)]
  0x0000

};

// font addr: 0x15 (next font addr: 0x28)
// font size: 37
WORD code tOSDSTDFont1[] =  // Basic Font for guage, number
{
  // 0x000(0) : GuageStart  [0x000(0)]
  0x2000, 0x1007, 0xC004, 0x1007, 0x2000,
  // 0x001(1) : Guage1  [0x005(5)]
  0x2000, 0x1FFF, 0xC000, 0x1FFF, 0x2000,
  // 0x002(2) : Guage2  [0x00A(10)]
  0x2000, 0x1FFF, 0x2000, 0x8E00, 0x2000, 0x1FFF, 0x2000,
  // 0x003(3) : Guage3  [0x011(17)]
  0x2000, 0x1FFF, 0x2000, 0x8FC0, 0x2000, 0x1FFF, 0x2000,
  // 0x004(4) : Guage4  [0x018(24)]
  0x2000, 0x1FFF, 0x2000, 0x8FF8, 0x2000, 0x1FFF, 0x2000,
  // 0x005(5) : Guage5  [0x01F(31)]
  0x2000, 0x1FFF, 0x2000, 0x8FFF, 0x2000, 0x1FFF, 0x2000,
  // 0x006(6) : GuageEnd  [0x026(38)]
  0x2000, 0x1E00, 0xC200, 0x1E00, 0x2000,
  // 0x007(7) : 0  [0x02B(43)]
  0x4000, 0x11F8, 0x930C, 0x11F8, 0x3000,
  // 0x008(8) : 1  [0x030(48)]
  0x4000, 0x1060, 0x10E0, 0x9060, 0x3000,
  // 0x009(9) : 2  [0x035(53)]
  0x4000, 0x11F8, 0x120C, 0x200C, 0x101C, 0x1038, 0x10E0, 0x1180, 0x2300, 0x13FC, 0x3000,
  // 0x00A(10) : 3  [0x040(64)]
  0x4000, 0x13FC, 0x1018, 0x1030, 0x1060, 0x10F0, 0x1018, 0x300C, 0x130C, 0x11F8, 0x3000,
  // 0x00B(11) : 4  [0x04B(75)]
  0x4000, 0x1018, 0x1038, 0x1058, 0x1098, 0x1118, 0x1218, 0x13FC, 0x4018, 0x3000,
  // 0x00C(12) : 5  [0x055(85)]
  0x4000, 0x13F8, 0x3300, 0x13F8, 0x400C, 0x130C, 0x11F8, 0x3000,
  // 0x00D(13) : 6  [0x05D(93)]
  0x4000, 0x1070, 0x1080, 0x1100, 0x2300, 0x13F8, 0x430C, 0x11F8, 0x3000,
  // 0x00E(14) : 7  [0x066(102)]
  0x4000, 0x13FC, 0x300C, 0x1018, 0x1030, 0x5060, 0x3000,
  // 0x00F(15) : 8  [0x06D(109)]
  0x4000, 0x11F8, 0x430C, 0x11F8, 0x430C, 0x11F8, 0x3000,
  // 0x010(16) : 9  [0x074(116)]
  0x4000, 0x11F8, 0x430C, 0x11FC, 0x200C, 0x1008, 0x1010, 0x10E0, 0x3000,
  // 0x011(17) : Arrow_L  [0x07D(125)]
  0x3000, 0x1003, 0x100F, 0x103F, 0x10FF, 0x13FF, 0x2FFF, 0x13FF, 0x10FF, 0x103F, 0x100F, 0x1003, 0x3000,
  // 0x012(18) : Arrow_R  [0x08A(138)]
  0x3000, 0x1C00, 0x1F00, 0x1FC0, 0x1FF0, 0x1FFC, 0x2FFF, 0x1FFC, 0x1FF0, 0x1FC0, 0x1F00, 0x1C00, 0x3000,
  // 0x013(19) :   [0x097(151)]
  //0xF000, 0x3000,
  // Total  [0x099(306)]
  // Orginial Total:  20 fonts ,  Size:(540)]
  0x0000

};

WORD code tFactoryFont0[] =  // AOC MAINLOGO and Basic Font
{
  // 0x000(0) :   [0x000(0)]
  0xF000, 0x3000, 
  // 0x001(1) :   [0x002(2)]
  0x8000, 0x27FE, 0x8000, 
  // 0x002(2) :   [0x005(5)]
  0x4000, 0x11F8, 0x130C, 0x231C, 0x132C, 0x136C, 0x134C, 0x238C, 0x130C, 0x11F8, 0x3000, 
  // 0x003(3) :   [0x010(16)]
  0x4000, 0x1060, 0x10E0, 0x9060, 0x3000, 
  // 0x004(4) :   [0x015(21)]
  0x4000, 0x11F8, 0x120C, 0x200C, 0x101C, 0x1038, 0x10E0, 0x1180, 0x2300, 0x13FC, 0x3000, 
  // 0x005(5) :   [0x020(32)]
  0x4000, 0x13FC, 0x1018, 0x1030, 0x1060, 0x10F0, 0x1018, 0x300C, 0x130C, 0x11F8, 0x3000, 
  // 0x006(6) :   [0x02B(43)]
  0x4000, 0x1018, 0x1038, 0x1058, 0x1098, 0x1118, 0x1218, 0x13FC, 0x4018, 0x3000, 
  // 0x007(7) :   [0x035(53)]
  0x4000, 0x13F8, 0x3300, 0x13F8, 0x400C, 0x130C, 0x11F8, 0x3000, 
  // 0x008(8) :   [0x03D(61)]
  0x4000, 0x1070, 0x1080, 0x1100, 0x2300, 0x13F8, 0x430C, 0x11F8, 0x3000, 
  // 0x009(9) :   [0x046(70)]
  0x4000, 0x13FC, 0x300C, 0x1018, 0x1030, 0x5060, 0x3000, 
  // 0x00A(10) :   [0x04D(77)]
  0x4000, 0x11F8, 0x430C, 0x11F8, 0x430C, 0x11F8, 0x3000, 
  // 0x00B(11) :   [0x054(84)]
  0x4000, 0x11F8, 0x430C, 0x11FC, 0x200C, 0x1008, 0x1010, 0x10E0, 0x3000, 
  // 0x00C(12) :   [0x05D(93)]
  0x4000, 0x11F8, 0x430C, 0x13FC, 0x530C, 0x3000, 
  // 0x00D(13) :   [0x063(99)]
  0x4000, 0x13F8, 0x430C, 0x13F8, 0x430C, 0x13F8, 0x3000, 
  // 0x00E(14) :   [0x06A(106)]
  0x4000, 0x11F8, 0x1304, 0x7300, 0x1304, 0x11F8, 0x3000, 
  // 0x00F(15) :   [0x071(113)]
  0x4000, 0x13F8, 0x930C, 0x13F8, 0x3000, 
  // 0x010(16) :   [0x076(118)]
  0x4000, 0x13FC, 0x4300, 0x13F8, 0x4300, 0x13FC, 0x3000, 
  // 0x011(17) :   [0x07D(125)]
  0x4000, 0x13FC, 0x4300, 0x13F8, 0x6300, 0x2000, 
  // 0x012(18) :   [0x083(131)]
  0x4000, 0x11F8, 0x1304, 0x3300, 0x133C, 0x430C, 0x11F8, 0x3000, 
  // 0x013(19) :   [0x08B(139)]
  0x4000, 0x530C, 0x13FC, 0x530C, 0x3000, 
  // 0x014(20) :   [0x090(144)]
  0x4000, 0x11F8, 0x9060, 0x11F8, 0x3000, 
  // 0x015(21) :   [0x095(149)]
  0x4000, 0x107E, 0x7018, 0x2318, 0x11F0, 0x3000, 
  // 0x016(22) :   [0x09B(155)]
  0x4000, 0x130C, 0x1318, 0x1330, 0x1360, 0x13C0, 0x1380, 0x13C0, 0x1360, 0x1330, 0x1318, 0x130C, 0x3000, 
  // 0x017(23) :   [0x0A8(168)]
  0x4000, 0xA300, 0x13FC, 0x3000, 
  // 0x018(24) :   [0x0AC(172)]
  0x4000, 0x2606, 0x270E, 0x179E, 0x1696, 0x16F6, 0x2666, 0x2606, 0x3000, 
  // 0x019(25) :   [0x0B5(181)]
  0x4000, 0x130C, 0x238C, 0x13CC, 0x134C, 0x136C, 0x132C, 0x133C, 0x231C, 0x130C, 0x3000, 
  // 0x01A(26) :   [0x0C0(192)]
  0x4000, 0x11F8, 0x930C, 0x11F8, 0x3000, 
  // 0x01B(27) :   [0x0C5(197)]
  0x4000, 0x13F8, 0x430C, 0x13F8, 0x5300, 0x3000, 
  // 0x01C(28) :   [0x0CB(203)]
  0x4000, 0x11F8, 0x630C, 0x132C, 0x133C, 0x1318, 0x11FC, 0x1004, 0x2000, 
  // 0x01D(29) :   [0x0D4(212)]
  0x4000, 0x13F8, 0x430C, 0x13F0, 0x530C, 0x3000, 
  // 0x01E(30) :   [0x0DA(218)]
  0x4000, 0x11F8, 0x138C, 0x2300, 0x1380, 0x11F8, 0x101C, 0x200C, 0x130C, 0x11F8, 0x3000, 
  // 0x01F(31) :   [0x0E5(229)]
  0x4000, 0x13FC, 0xA060, 0x3000, 
  // 0x020(32) :   [0x0E9(233)]
  0x4000, 0xA30C, 0x11F8, 0x3000, 
  // 0x021(33) :   [0x0ED(237)]
  0x4000, 0x630C, 0x1308, 0x1310, 0x1320, 0x1340, 0x1380, 0x3000, 
  // 0x022(34) :   [0x0F5(245)]
  0x4000, 0x7666, 0x1664, 0x16E8, 0x1770, 0x1660, 0x3000, 
  // 0x023(35) :   [0x0FC(252)]
  0x4000, 0x330C, 0x139C, 0x11F8, 0x1060, 0x11F8, 0x139C, 0x330C, 0x3000, 
  // 0x024(36) :   [0x105(261)]
  0x4000, 0x430C, 0x1198, 0x10F0, 0x5060, 0x3000, 
  // 0x025(37) :   [0x10B(267)]
  0x4000, 0x23FC, 0x100C, 0x1018, 0x1030, 0x1060, 0x10C0, 0x1180, 0x1300, 0x23FC, 0x3000, 
    // 0x02D(45) : a  [0x13D(317)]
  0x6000, 0x11F8, 0x120C, 0x100C, 0x11FC, 0x430C, 0x11FC, 0x3000, 
  // 0x02E(46) : b  [0x145(325)]
  0x4000, 0x4300, 0x13F8, 0x530C, 0x13F8, 0x3000, 
  // 0x02F(47) : c  [0x14B(331)]
  0x6000, 0x11F8, 0x1304, 0x5300, 0x1304, 0x11F8, 0x3000, 
  // 0x030(48) : d  [0x152(338)]
  0x4000, 0x300C, 0x11FC, 0x630C, 0x11FC, 0x3000, 
  // 0x031(49) : e  [0x158(344)]
  0x6000, 0x11F8, 0x330C, 0x13FC, 0x2300, 0x1304, 0x11F8, 0x3000, 
  // 0x032(50) : f  [0x160(352)]
  0x4000, 0x101C, 0x1030, 0x1060, 0x13FC, 0x7060, 0x3000, 
  // 0x033(51) : g  [0x167(359)]
  0x6000, 0x11FC, 0x530C, 0x11FC, 0x200C, 0x120C, 0x11F0, 0x1000, 
  // 0x034(52) : h  [0x16F(367)]
  0x4000, 0x3300, 0x13F8, 0x730C, 0x3000, 
  // 0x035(53) : i  [0x174(372)]
  0x4000, 0x2060, 0x1000, 0x8060, 0x3000, 
  // 0x036(54) : j  [0x179(377)]
  0x4000, 0x2018, 0x1000, 0x7018, 0x1118, 0x10F0, 0x2000, 
  // 0x037(55) : k  [0x180(384)]
  0x4000, 0x2300, 0x130C, 0x1318, 0x1330, 0x1360, 0x13C0, 0x1360, 0x1330, 0x1318, 0x130C, 0x3000, 
  // 0x038(56) : l  [0x18C(396)]
  0x4000, 0xB060, 0x3000, 
  // 0x039(57) : m  [0x18F(399)]
  0x6000, 0x17FC, 0x8666, 0x3000, 
  // 0x03A(58) : n  [0x193(403)]
  0x6000, 0x13F8, 0x830C, 0x3000, 
  // 0x03B(59) : o  [0x197(407)]
  0x6000, 0x11F8, 0x730C, 0x11F8, 0x3000, 
  // 0x03C(60) : p  [0x19C(412)]
  0x6000, 0x11F8, 0x630C, 0x13F8, 0x3300, 0x1000, 
  // 0x03D(61) : q  [0x1A2(418)]
  0x6000, 0x11FC, 0x630C, 0x11FC, 0x300C, 0x1000, 
  // 0x03E(62) : r  [0x1A8(424)]
  0x6000, 0x1198, 0x11A0, 0x11C0, 0x6180, 0x3000, 
  // 0x03F(63) : s  [0x1AE(430)]
  0x6000, 0x11F8, 0x130C, 0x1300, 0x1380, 0x10F0, 0x101C, 0x100C, 0x130C, 0x11F8, 0x3000, 
  // 0x040(64) : t  [0x1B9(441)]
  0x4000, 0x2060, 0x13FC, 0x7060, 0x103C, 0x3000, 
  // 0x041(65) : u  [0x1BF(447)]
  0x6000, 0x830C, 0x11FE, 0x3000, 
  // 0x042(66) : v  [0x1C3(451)]
  0x6000, 0x430C, 0x1308, 0x1310, 0x1320, 0x1340, 0x1380, 0x3000, 
  // 0x043(67) : w  [0x1CB(459)]
  0x6000, 0x6666, 0x1664, 0x16E8, 0x1770, 0x3000, 
  // 0x044(68) : x  [0x1D1(465)]
  0x6000, 0x230C, 0x139C, 0x11F8, 0x10F0, 0x11F8, 0x139C, 0x230C, 0x3000, 
  // 0x045(69) : y  [0x1DA(474)]
  0x6000, 0x630C, 0x11FC, 0x300C, 0x13F8, 0x1000, 
  // 0x046(70) : z  [0x1E0(480)]
  0x6000, 0x13FC, 0x100C, 0x1018, 0x1030, 0x1060, 0x10C0, 0x1180, 0x1300, 0x13FC, 0x3000, 
  // 0x026(38) :   [0x116(278)]
  0xD000, 0x2060, 0x3000, 
  // 0x027(39) :   [0x119(281)]	// 111114 Modify
  0x4000, 0x4060, 0x27FE, 0x4060, 0x4000, 
  // Total	[0x11E(572)]
  // Orginial Total:  40 fonts ,  Size:(1080)]
  0x0000

};












