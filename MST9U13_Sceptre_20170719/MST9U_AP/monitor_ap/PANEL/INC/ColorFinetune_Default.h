#ifndef _COLORFINETUNE_H
#define _COLORFINETUNE_H

#include "datatype.h"
#include "Board.h"


#ifdef _MENUFUNC_C // for MenuFunc.c only
//////////////////////////////////////////////////////////////////////////
// Matrix for convert to sRGB space
//////////////////////////////////////////////////////////////////////////
code short tSRGB[3][3] =
{
    { 1096,   -43,  -28 }, // R  1.0694, -0.0424, -0.0270
    {  -21,   1063, -18 }, // G -0.0204,  1.0376, -0.0172
    {   -1,   34,   991 }  // B -0.0009,  0.0330,  0.9679
};
code short tNormalColorCorrectionMatrix[3][3] =
{
    { 1024,    0,       0},
    {    0, 1024,       0},
    {    0,    0,    1024}
};
#endif //_MENUFUNC_C

#define DEF_SUB_SHARPNESS           0x09//0x0B Jison 080704 change default value to 0x09
#define DEF_SUB_BRIGHTNESS          0x70
#define DEF_SUB_CONTRAST            0x80

#define DEF_SUB_SATURATION          50//0x80
#define DEF_SUB_HUE                 50

#define MAX_SUB_CONTRAST            0x80 + 50
#define MIN_SUB_CONTRAST            0x80 - 50

//CT_STANDARD
#define DEF_STD_RGAIN               0x80
#define DEF_STD_GGAIN               0x80
#define DEF_STD_BGAIN               0x80
#define DEF_STD_SUB_CONTRAST        0x80
#define DEF_STD_SUB_BRIGHTNESS      0x70
#define DEF_STD_SUB_HUE             DEF_SUB_HUE
#define DEF_STD_SUB_SATURATION      0x80
#define DEF_STD_SUB_SHARPNESS       DEF_SUB_SHARPNESS

#if 0//DEMO MODE
  #ifdef _MENUFUNC_C // for MenuFunc.c only
  //Color Demo Mode setting
  #define DEF_DEMO_NORMAL_RGAIN     0x72
  #define DEF_DEMO_NORMAL_GGAIN     0x6C
  #define DEF_DEMO_NORMAL_BGAIN     0x78
  //============================================
  #define DEF_DEMO_RGAIN            DEF_MOVIE_RGAIN
  #define DEF_DEMO_GGAIN            DEF_MOVIE_GGAIN
  #define DEF_DEMO_BGAIN            DEF_MOVIE_BGAIN
  #define DEF_DEMO_SUB_CONTRAST     DEF_MOVIE_SUB_CONTRAST
  #define DEF_DEMO_SUB_BRIGHTNESS   DEF_MOVIE_SUB_BRIGHTNESS
  #define DEF_DEMO_SUB_HUE          DEF_MOVIE_SUB_HUE
  #define DEF_DEMO_SUB_SATURATION   DEF_MOVIE_SUB_SATURATION
  #define DEF_DEMO_SUB_SHARPNESS    0x11
  #endif
#endif

//##############################################################################################
#if 1//(PanelType==PanelAU20SVGA)
//##############################################################################################
// 2012-04-12 Webber : S2240 P1
#if 1 //1:Disable std mode gamma  0:Enable std mode gamma
  #ifdef _STD_MODE_GAMMA_EN_
    #undef _STD_MODE_GAMMA_EN_
  #endif
#else
  #ifndef _STD_MODE_GAMMA_EN_
    #define _STD_MODE_GAMMA_EN_
  #endif
#endif

  //For standard mode sRGB only
  #define DEF_SRGB_ROFFSET              0x74
  #define DEF_SRGB_GOFFSET              0x74
  #define DEF_SRGB_BOFFSET              0x74

  //CT_MULTIMEDIA
  #define DEF_MULTIMEDIA_RGAIN          122
  #define DEF_MULTIMEDIA_GGAIN          119
  #define DEF_MULTIMEDIA_BGAIN          117
  #define DEF_MULTIMEDIA_SUB_CONTRAST   DEF_SUB_CONTRAST
  #define DEF_MULTIMEDIA_SUB_BRIGHTNESS 128
  #define DEF_MULTIMEDIA_SUB_HUE        DEF_SUB_HUE
  #define DEF_MULTIMEDIA_SUB_SATURATION 128
  #define DEF_MULTIMEDIA_SUB_SHARPNESS  0x09
  #define DEF_MULTIMEDIA_SUB_BRI_R      120
  #define DEF_MULTIMEDIA_SUB_BRI_G      116
  #define DEF_MULTIMEDIA_SUB_BRI_B      114

  //CT_GAME
  #define DEF_GAME_RGAIN                120
  #define DEF_GAME_GGAIN                117
  #define DEF_GAME_BGAIN                115
  #define DEF_GAME_SUB_CONTRAST         DEF_SUB_CONTRAST
  #define DEF_GAME_SUB_BRIGHTNESS       128
  #define DEF_GAME_SUB_HUE              DEF_SUB_HUE
  #define DEF_GAME_SUB_SATURATION       128
  #define DEF_GAME_SUB_SHARPNESS        0x09
  #define DEF_GAME_SUB_BRI_R            122
  #define DEF_GAME_SUB_BRI_G            120
  #define DEF_GAME_SUB_BRI_B            120
  #define DEF_GAME_DLC                  _DISABLE

  //CT_MOVIE
  #define DEF_MOVIE_RGAIN               113
  #define DEF_MOVIE_GGAIN               114
  #define DEF_MOVIE_BGAIN               127
  #define DEF_MOVIE_SUB_CONTRAST        130
  #define DEF_MOVIE_SUB_BRIGHTNESS      125
  #define DEF_MOVIE_SUB_HUE             DEF_SUB_HUE
  #define DEF_MOVIE_SUB_SATURATION      135
  #define DEF_MOVIE_SUB_SHARPNESS       0x09//0x11
  #define DEF_MOVIE_SUB_BRI_R           116
  #define DEF_MOVIE_SUB_BRI_G           111
  #define DEF_MOVIE_SUB_BRI_B           111
  #define DEF_MOVIE_DLC                 _DISABLE

  #if 1
  //CT_SPORTS
  #define DEF_SPORTS_RGAIN              112
  #define DEF_SPORTS_GGAIN              115
  #define DEF_SPORTS_BGAIN              116
  #define DEF_SPORTS_SUB_CONTRAST       DEF_SUB_CONTRAST
  #define DEF_SPORTS_SUB_BRIGHTNESS     110
  #define DEF_SPORTS_SUB_HUE            DEF_SUB_HUE
  #define DEF_SPORTS_SUB_SATURATION     138
  #define DEF_SPORTS_SUB_SHARPNESS      0x0D
  #define DEF_SPORTS_SUB_BRI_R          0xFF
  #define DEF_SPORTS_SUB_BRI_G          110
  #define DEF_SPORTS_SUB_BRI_B          106
  #define DEF_SPORTS_DLC                _DISABLE

  //CT_NATURE
  #define DEF_NATURE_RGAIN              122
  #define DEF_NATURE_GGAIN              125
  #define DEF_NATURE_BGAIN              122
  #define DEF_NATURE_SUB_CONTRAST       DEF_SUB_CONTRAST
  #define DEF_NATURE_SUB_BRIGHTNESS     0xFF
  #define DEF_NATURE_SUB_HUE            DEF_SUB_HUE
  #define DEF_NATURE_SUB_SATURATION     0x80
  #define DEF_NATURE_SUB_SHARPNESS      0x0D
  #define DEF_NATURE_SUB_BRI_R          114
  #define DEF_NATURE_SUB_BRI_G          111
  #define DEF_NATURE_SUB_BRI_B          111
  #define DEF_NATURE_DLC                _DISABLE
  #endif
  #ifdef _MENUFUNC_C // for MenuFunc.c only
  //////////////////////////////////////////////////////////////////////////
  // Independent Color Control
  //////////////////////////////////////////////////////////////////////////
  BYTE code tColorRangeTbl[]={0x20,0x28,0x20,0x20,0x28,0x20,0x19,0x29,0x19};
  BYTE code tColorControlTbl[][18]={ //0x3A~0x4B
  // 3A   3B   3C   3D   3E   3F   40   41   42   43   44   45   46   47   48   49   4A   4B
  {0x05,0x48,0x48,0x5c,0x00,0x00,0x4f,0x38,0x00,0x44,0x48,0x00,0x00,0x00,0x70,0x10,0x70,0x6c}, //std
  {0x42,0x00,0x00,0x00,0x02,0x00,0x02,0x00,0x02,0x04,0x02,0x44,0x00,0x00,0x00,0x00,0x00,0x00}, //MM
  {0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x02,0x02,0x05,0x00,0x42,0x02,0x00,0x00,0x00,0x00,0x00}, //Game
  {0x02,0x00,0x48,0x00,0x00,0x02,0x46,0x00,0x05,0x00,0x43,0x45,0x02,0x44,0x02,0x02,0x42,0x44}, //Movie
  //{0x08,0x00,0x10,0x08,0x40,0x04,0x4C,0x48,0x00,0x00,0x50,0x04,0x40,0x50,0x00,0x00,0x48,0x00}, //Sports
  //{0x00,0x04,0x08,0x08,0x00,0x06,0x00,0x08,0x10,0x00,0x46,0x06,0x00,0x08,0x00,0x00,0x00,0x28}  //Nature
  };

  //////////////////////////////////////////////////////////////////////////
  // Matrix for VIDEO color correcttion
  //////////////////////////////////////////////////////////////////////////
  //code short tStandardColorCorrectionMatrix[][3]=
  code short tStandardColorCorrectionMatrix[]=
  {
   0x03FF, 0x0000, 0x0000, 0x0000, 0x03FF, 0x0000, 0x0000, 0x0000,
   0x03FF,-0x0369, 0x01AB,-0x051B, 0x0012,-0x01D9, 0x0777,-0x0378,
  -0x0735, 0x017A, 0x019E,-0x026E, 0x0274, 0x0687,-0x07A6, 0x0280,
  -0x0831, 0x0000,-0x0500, 0x0500,-0x0005, 0x0000, 0x0000, 0x0000,
  };

  code short tVivdColorCorrectionMatrix[]=
  {
   0x0448,-0x0145, 0x00FC,-0x00F1, 0x060B,-0x011A,-0x01BD, 0x024C,
   0x0370,-0x034B, 0x0196,-0x068B, 0x03C9,-0x0439, 0x0032,-0x0004,
  -0x07EE, 0x04E7, 0x07CB,-0x04C3, 0x0404, 0x023B,-0x023E, 0x01D5,
  -0x0831, 0x0100,-0x0505, 0x0005,-0x0500, 0x0000, 0x0000, 0x0000,
  };

  // Smooth (X)
// R Array (1,1), G Array (0,0), B Array (0,0)
// R Adj. (17), G Adj. (-30), B Adj. (-11)
  //code short tMultimediaMatrix[][3]=
  code short tMultimediaMatrix[]=
  {
   0x041E,-0x0018,-0x0006, 0x000F, 0x03E2, 0x000F,-0x000B, 0x0015,
   0x03F4,-0x02E6, 0x0288,-0x05BB, 0x07A4,-0x062C, 0x06F3,-0x073C,
  -0x0024, 0x01BF, 0x07EF,-0x0116, 0x01EE, 0x052C,-0x03BB, 0x00B1,
  -0x0831, 0x0100,-0x0101, 0x0000,-0x0000, 0x0011,-0x001E,-0x000B,
  };


  // Smooth (X)
// R Array (2,2), G Array (1,1), B Array (0,0)
// R Adj. (-59), G Adj. (-18), B Adj. (-18)
  //code short tMovieColorCorrectionMatrix[][3]=
  code short tMovieColorCorrectionMatrix[]=
  {
   0x03EE,-0x0014, 0x0025,-0x0052, 0x0489,-0x0037, 0x0001,-0x0004,
   0x0404,-0x034B, 0x0196,-0x068B, 0x03C9,-0x0439, 0x0032,-0x0004,
  -0x07EE, 0x04E7, 0x07CB,-0x04C3, 0x0404, 0x023B,-0x023E, 0x01D5,
  -0x0831, 0x0100,-0x0202, 0x0101,-0x0000,-0x003B,-0x0012,-0x0012,
  };


  // Smooth (X)
// R Array (1,1), G Array (1,1), B Array (0,0)
// R Adj. (-58), G Adj. (-100), B Adj. (-18)
  //code short tGameMatrix[][3]=
  code short tGameMatrix[]=
  {
   0x03D3, 0x000D, 0x001F,-0x0009, 0x0411,-0x0008, 0x0010,-0x0015,
   0x0404,-0x0369, 0x01AB,-0x051B, 0x0012,-0x01D9, 0x0777,-0x0378,
  -0x0735, 0x017A, 0x019E,-0x026E, 0x0274, 0x0687,-0x07A6, 0x0280,
  -0x0831, 0x0100,-0x0101, 0x0101,-0x0000,-0x003A,-0x0064,-0x0012,
  };




// Smooth (X)
// R Array (1,1), G Array (3,1), B Array (2,2)
// R Adj. (0), G Adj. (0), B Adj. (0)
  //code short tVideoSportsColorCorrectionMatrix[][3]=
  code short tVideoSportsColorCorrectionMatrix[]=
  {
   0x03E5, 0x0064,-0x0049,-0x006C, 0x04F3,-0x0087, 0x0060,-0x0102,
   0x04A1,-0x0369, 0x01AB,-0x051B, 0x0012,-0x01D9, 0x0777,-0x0378,
  -0x0735, 0x017A, 0x019E,-0x026E, 0x0274, 0x0687,-0x07A6, 0x0280,
  -0x0831, 0x0100,-0x0101, 0x0301,-0x0202, 0x0000, 0x0000, 0x0000,
  };

// Smooth (X)
// R Array (2,2), G Array (1,0), B Array (0,0)
// R Adj. (0), G Adj. (-100), B Adj. (0)
  //code short tVideoNatureColorCorrectionMatrix[][3]=
  code short tVideoNatureColorCorrectionMatrix[]=
  {
   0x0406, 0x0014,-0x001A,-0x0011, 0x0408, 0x000A, 0x001B,-0x0054,
   0x0439,-0x034C, 0x07AF,-0x06E4, 0x0468,-0x00CF, 0x0095,-0x0607,
  -0x0493, 0x0422, 0x004F,-0x048C, 0x04A1, 0x0501,-0x03E8, 0x0049,
  -0x0831, 0x0100,-0x0202, 0x0100,-0x0000, 0x0000,-0x0064, 0x0000,
  };

  ////////////////////////////////////////////////////////////////////
  /// DLC Table
  ////////////////////////////////////////////////////////////////////
  BYTE code t_MWEDLC_GraphicsGame_Table[]=
  {
   0x07,0x17,0x27,0x37,0x47,0x57,0x67,0x77,0x87,0x97,0xa7,0xb7,0xc7,0xd7,0xe7,0xf7, //joseph
   0x87,0x9B,0x0F,0xC2,0xBD,0x4E,0xC6,0xFD,0xF3,0x3E,0xE9,0x35,0x75,0xED,0x76,0x8D,
   0xC1,0x74,0xD4,0x3C,0x3A,0x18,0xE0,0x0A,0xD6,0xE3,0x33,0x0C,0x0A,0x84,0xB7,0xA0,
  };
  BYTE code t_MWEDLC_VideoMovie_Table[]=
  {
   0x04,0x0C,0x17,0x28,0x39,0x4B,0x5F,0x74,0x86,0x98,0xAA,0xBA,0xC9,0xD7,0xE7,0xF7,
   0x87,0x9B,0x86,0x87,0xBF,0xA6,0x2A,0x80,0x8B,0x4C,0x87,0xAF,0x0E,0xE4,0xB4,0x68,
   0x40,0xCF,0xE8,0x95,0xE6,0x07,0x6C,0x93,0x24,0x22,0xC0,0x4F,0x44,0x8C,0x0C,0xA1,
  };

  BYTE code t_MWEDLC_VideoSports_Table[]=
  {
   0x05,0x11,0x1d,0x2b,0x3c,0x4c,0x5e,0x72,0x85,0x9a,0xad,0xbc,0xcd,0xde,0xed,0xf8, //joseph
   0x87,0x9B,0x0F,0xC2,0xBD,0x4E,0xC6,0xFD,0xF3,0x3E,0xE9,0x35,0x75,0xED,0x76,0x8D,
   0xC1,0x74,0xD4,0x3C,0x3A,0x18,0xE0,0x0A,0xD6,0xE3,0x33,0x0C,0x0A,0x84,0xB7,0xA0,
  };

  BYTE code t_MWEDLC_VideoNature_Table[]=
  {
   0x07,0x17,0x27,0x37,0x47,0x57,0x67,0x77,0x87,0x97,0xa7,0xb7,0xc7,0xd7,0xe7,0xf7,  //joseph
   0x87,0x9B,0x0F,0xC2,0xBD,0x4E,0xC6,0xFD,0xF3,0x3E,0xE9,0x35,0x75,0xED,0x76,0x8D,
   0xC1,0x74,0xD4,0x3C,0x3A,0x18,0xE0,0x0A,0xD6,0xE3,0x33,0x0C,0x0A,0x84,0xB7,0xA0,
  };

  /* Table Structure
  0. numOfTbls (1 byte)
  1. lenOfTbls (4 bytes)
  2. tblHeader (1 bytes) : 0xAB
  4. tblType (1 bytes)
  5. tblLen (2 bytes)
  6. tblData (n bytes)
  7. tblEnder(1 bytes) : 0xBA
  */
  BYTE code tUserColorMode[] =
  {
    0x04, 0x00, 0x00, 0x03, 0xFB, 0xAB, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA,
    0xAB, 0x06, 0x00, 0x0C, 0xD0, 0x01, 0x18, 0x02, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xBA, 0xAB, 0x0C, 0x00, 0x10, 0x0A, 0x01, 0x1B, 0x02, 0x29, 0x01, 0x35, 0x02, 0x44, 0x02, 0x56,
    0x02, 0x67, 0x01, 0x78, 0x03, 0xBA, 0xAB, 0x0F, 0x03, 0xC0, 0x1E, 0x00, 0x11, 0x18, 0x1E, 0xF0,
    0x22, 0x26, 0x29, 0x2D, 0xBF, 0x30, 0x32, 0x35, 0x38, 0xAA, 0x3A, 0x3C, 0x3F, 0x41, 0xAA, 0x43,
    0x45, 0x47, 0x49, 0xAA, 0x4A, 0x4C, 0x4E, 0x50, 0xAA, 0x51, 0x53, 0x54, 0x56, 0x56, 0x58, 0x59,
    0x5B, 0x5C, 0x55, 0x5D, 0x5F, 0x60, 0x62, 0x55, 0x63, 0x64, 0x66, 0x67, 0x55, 0x68, 0x69, 0x6B,
    0x6C, 0x55, 0x6D, 0x6E, 0x6F, 0x71, 0x55, 0x72, 0x73, 0x74, 0x75, 0x55, 0x76, 0x77, 0x78, 0x79,
    0x55, 0x7A, 0x7C, 0x7D, 0x7E, 0x55, 0x7F, 0x80, 0x81, 0x82, 0x55, 0x83, 0x84, 0x85, 0x86, 0x55,
    0x87, 0x88, 0x88, 0x89, 0x55, 0x8A, 0x8B, 0x8C, 0x8D, 0x55, 0x8E, 0x8F, 0x90, 0x91, 0x55, 0x92,
    0x92, 0x93, 0x94, 0x55, 0x95, 0x96, 0x97, 0x98, 0x55, 0x98, 0x99, 0x9A, 0x9B, 0x55, 0x9C, 0x9D,
    0x9D, 0x9E, 0x55, 0x9F, 0xA0, 0xA1, 0xA1, 0x55, 0xA2, 0xA3, 0xA4, 0xA4, 0x55, 0xA5, 0xA6, 0xA7,
    0xA8, 0x55, 0xA8, 0xA9, 0xAA, 0xAB, 0x55, 0xAB, 0xAC, 0xAD, 0xAD, 0x55, 0xAE, 0xAF, 0xB0, 0xB0,
    0x55, 0xB1, 0xB2, 0xB3, 0xB3, 0x55, 0xB4, 0xB5, 0xB5, 0xB6, 0x55, 0xB7, 0xB7, 0xB8, 0xB9, 0x55,
    0xB9, 0xBA, 0xBB, 0xBB, 0x55, 0xBC, 0xBD, 0xBD, 0xBE, 0x55, 0xBF, 0xBF, 0xC0, 0xC1, 0x55, 0xC1,
    0xC2, 0xC3, 0xC3, 0x55, 0xC4, 0xC5, 0xC5, 0xC6, 0x55, 0xC7, 0xC7, 0xC8, 0xC8, 0x55, 0xC9, 0xCA,
    0xCA, 0xCB, 0x55, 0xCC, 0xCC, 0xCD, 0xCD, 0x55, 0xCE, 0xCF, 0xCF, 0xD0, 0x55, 0xD0, 0xD1, 0xD2,
    0xD2, 0x55, 0xD3, 0xD3, 0xD4, 0xD5, 0x55, 0xD5, 0xD6, 0xD6, 0xD7, 0x55, 0xD7, 0xD8, 0xD9, 0xD9,
    0x55, 0xDA, 0xDA, 0xDB, 0xDB, 0x55, 0xDC, 0xDD, 0xDD, 0xDE, 0x55, 0xDE, 0xDF, 0xDF, 0xE0, 0x55,
    0xE0, 0xE1, 0xE2, 0xE2, 0x55, 0xE3, 0xE3, 0xE4, 0xE4, 0x55, 0xE5, 0xE5, 0xE6, 0xE6, 0x55, 0xE7,
    0xE8, 0xE8, 0xE9, 0x55, 0xE9, 0xEA, 0xEA, 0xEB, 0x55, 0xEB, 0xEC, 0xEC, 0xED, 0x55, 0xED, 0xEE,
    0xEE, 0xEF, 0x55, 0xEF, 0xF0, 0xF0, 0xF1, 0x55, 0xF1, 0xF2, 0xF2, 0xF3, 0x55, 0xF4, 0xF4, 0xF5,
    0xF5, 0x55, 0xF6, 0xF6, 0xF7, 0xF7, 0x54, 0xF8, 0xF8, 0xF9, 0xF9, 0x44, 0xFA, 0xFA, 0xFB, 0xFB,
    0x00, 0xFB, 0xFC, 0xFC, 0xFD, 0x00, 0xFD, 0xFE, 0xFE, 0xFF, 0x1E, 0x00, 0x11, 0x18, 0x1E, 0xF0,
    0x22, 0x26, 0x29, 0x2D, 0xBF, 0x30, 0x32, 0x35, 0x38, 0xAA, 0x3A, 0x3C, 0x3F, 0x41, 0xAA, 0x43,
    0x45, 0x47, 0x49, 0xAA, 0x4A, 0x4C, 0x4E, 0x50, 0xAA, 0x51, 0x53, 0x54, 0x56, 0x56, 0x58, 0x59,
    0x5B, 0x5C, 0x55, 0x5D, 0x5F, 0x60, 0x62, 0x55, 0x63, 0x64, 0x66, 0x67, 0x55, 0x68, 0x69, 0x6B,
    0x6C, 0x55, 0x6D, 0x6E, 0x6F, 0x71, 0x55, 0x72, 0x73, 0x74, 0x75, 0x55, 0x76, 0x77, 0x78, 0x79,
    0x55, 0x7A, 0x7C, 0x7D, 0x7E, 0x55, 0x7F, 0x80, 0x81, 0x82, 0x55, 0x83, 0x84, 0x85, 0x86, 0x55,
    0x87, 0x88, 0x88, 0x89, 0x55, 0x8A, 0x8B, 0x8C, 0x8D, 0x55, 0x8E, 0x8F, 0x90, 0x91, 0x55, 0x92,
    0x92, 0x93, 0x94, 0x55, 0x95, 0x96, 0x97, 0x98, 0x55, 0x98, 0x99, 0x9A, 0x9B, 0x55, 0x9C, 0x9D,
    0x9D, 0x9E, 0x55, 0x9F, 0xA0, 0xA1, 0xA1, 0x55, 0xA2, 0xA3, 0xA4, 0xA4, 0x55, 0xA5, 0xA6, 0xA7,
    0xA8, 0x55, 0xA8, 0xA9, 0xAA, 0xAB, 0x55, 0xAB, 0xAC, 0xAD, 0xAD, 0x55, 0xAE, 0xAF, 0xB0, 0xB0,
    0x55, 0xB1, 0xB2, 0xB3, 0xB3, 0x55, 0xB4, 0xB5, 0xB5, 0xB6, 0x55, 0xB7, 0xB7, 0xB8, 0xB9, 0x55,
    0xB9, 0xBA, 0xBB, 0xBB, 0x55, 0xBC, 0xBD, 0xBD, 0xBE, 0x55, 0xBF, 0xBF, 0xC0, 0xC1, 0x55, 0xC1,
    0xC2, 0xC3, 0xC3, 0x55, 0xC4, 0xC5, 0xC5, 0xC6, 0x55, 0xC7, 0xC7, 0xC8, 0xC8, 0x55, 0xC9, 0xCA,
    0xCA, 0xCB, 0x55, 0xCC, 0xCC, 0xCD, 0xCD, 0x55, 0xCE, 0xCF, 0xCF, 0xD0, 0x55, 0xD0, 0xD1, 0xD2,
    0xD2, 0x55, 0xD3, 0xD3, 0xD4, 0xD5, 0x55, 0xD5, 0xD6, 0xD6, 0xD7, 0x55, 0xD7, 0xD8, 0xD9, 0xD9,
    0x55, 0xDA, 0xDA, 0xDB, 0xDB, 0x55, 0xDC, 0xDD, 0xDD, 0xDE, 0x55, 0xDE, 0xDF, 0xDF, 0xE0, 0x55,
    0xE0, 0xE1, 0xE2, 0xE2, 0x55, 0xE3, 0xE3, 0xE4, 0xE4, 0x55, 0xE5, 0xE5, 0xE6, 0xE6, 0x55, 0xE7,
    0xE8, 0xE8, 0xE9, 0x55, 0xE9, 0xEA, 0xEA, 0xEB, 0x55, 0xEB, 0xEC, 0xEC, 0xED, 0x55, 0xED, 0xEE,
    0xEE, 0xEF, 0x55, 0xEF, 0xF0, 0xF0, 0xF1, 0x55, 0xF1, 0xF2, 0xF2, 0xF3, 0x55, 0xF4, 0xF4, 0xF5,
    0xF5, 0x55, 0xF6, 0xF6, 0xF7, 0xF7, 0x54, 0xF8, 0xF8, 0xF9, 0xF9, 0x44, 0xFA, 0xFA, 0xFB, 0xFB,
    0x00, 0xFB, 0xFC, 0xFC, 0xFD, 0x00, 0xFD, 0xFE, 0xFE, 0xFF, 0x1E, 0x00, 0x11, 0x18, 0x1E, 0xF0,
    0x22, 0x26, 0x29, 0x2D, 0xBF, 0x30, 0x32, 0x35, 0x38, 0xAA, 0x3A, 0x3C, 0x3F, 0x41, 0xAA, 0x43,
    0x45, 0x47, 0x49, 0xAA, 0x4A, 0x4C, 0x4E, 0x50, 0xAA, 0x51, 0x53, 0x54, 0x56, 0x56, 0x58, 0x59,
    0x5B, 0x5C, 0x55, 0x5D, 0x5F, 0x60, 0x62, 0x55, 0x63, 0x64, 0x66, 0x67, 0x55, 0x68, 0x69, 0x6B,
    0x6C, 0x55, 0x6D, 0x6E, 0x6F, 0x71, 0x55, 0x72, 0x73, 0x74, 0x75, 0x55, 0x76, 0x77, 0x78, 0x79,
    0x55, 0x7A, 0x7C, 0x7D, 0x7E, 0x55, 0x7F, 0x80, 0x81, 0x82, 0x55, 0x83, 0x84, 0x85, 0x86, 0x55,
    0x87, 0x88, 0x88, 0x89, 0x55, 0x8A, 0x8B, 0x8C, 0x8D, 0x55, 0x8E, 0x8F, 0x90, 0x91, 0x55, 0x92,
    0x92, 0x93, 0x94, 0x55, 0x95, 0x96, 0x97, 0x98, 0x55, 0x98, 0x99, 0x9A, 0x9B, 0x55, 0x9C, 0x9D,
    0x9D, 0x9E, 0x55, 0x9F, 0xA0, 0xA1, 0xA1, 0x55, 0xA2, 0xA3, 0xA4, 0xA4, 0x55, 0xA5, 0xA6, 0xA7,
    0xA8, 0x55, 0xA8, 0xA9, 0xAA, 0xAB, 0x55, 0xAB, 0xAC, 0xAD, 0xAD, 0x55, 0xAE, 0xAF, 0xB0, 0xB0,
    0x55, 0xB1, 0xB2, 0xB3, 0xB3, 0x55, 0xB4, 0xB5, 0xB5, 0xB6, 0x55, 0xB7, 0xB7, 0xB8, 0xB9, 0x55,
    0xB9, 0xBA, 0xBB, 0xBB, 0x55, 0xBC, 0xBD, 0xBD, 0xBE, 0x55, 0xBF, 0xBF, 0xC0, 0xC1, 0x55, 0xC1,
    0xC2, 0xC3, 0xC3, 0x55, 0xC4, 0xC5, 0xC5, 0xC6, 0x55, 0xC7, 0xC7, 0xC8, 0xC8, 0x55, 0xC9, 0xCA,
    0xCA, 0xCB, 0x55, 0xCC, 0xCC, 0xCD, 0xCD, 0x55, 0xCE, 0xCF, 0xCF, 0xD0, 0x55, 0xD0, 0xD1, 0xD2,
    0xD2, 0x55, 0xD3, 0xD3, 0xD4, 0xD5, 0x55, 0xD5, 0xD6, 0xD6, 0xD7, 0x55, 0xD7, 0xD8, 0xD9, 0xD9,
    0x55, 0xDA, 0xDA, 0xDB, 0xDB, 0x55, 0xDC, 0xDD, 0xDD, 0xDE, 0x55, 0xDE, 0xDF, 0xDF, 0xE0, 0x55,
    0xE0, 0xE1, 0xE2, 0xE2, 0x55, 0xE3, 0xE3, 0xE4, 0xE4, 0x55, 0xE5, 0xE5, 0xE6, 0xE6, 0x55, 0xE7,
    0xE8, 0xE8, 0xE9, 0x55, 0xE9, 0xEA, 0xEA, 0xEB, 0x55, 0xEB, 0xEC, 0xEC, 0xED, 0x55, 0xED, 0xEE,
    0xEE, 0xEF, 0x55, 0xEF, 0xF0, 0xF0, 0xF1, 0x55, 0xF1, 0xF2, 0xF2, 0xF3, 0x55, 0xF4, 0xF4, 0xF5,
    0xF5, 0x55, 0xF6, 0xF6, 0xF7, 0xF7, 0x54, 0xF8, 0xF8, 0xF9, 0xF9, 0x44, 0xFA, 0xFA, 0xFB, 0xFB,
    0x00, 0xFB, 0xFC, 0xFC, 0xFD, 0x00, 0xFD, 0xFE, 0xFE, 0xFF, 0xBA,
  };




 #else
  extern BYTE  code tColorRangeTbl[];
  extern BYTE code tColorControlTbl[][18];

  extern code short tStandardColorCorrectionMatrix[];

  // Smooth (X)
// R Array (1,1), G Array (0,0), B Array (0,0)
// R Adj. (17), G Adj. (-30), B Adj. (-11)
  //code short tMultimediaMatrix[][3]=
 extern code short tMultimediaMatrix[];


  // Smooth (X)
// R Array (2,2), G Array (1,1), B Array (0,0)
// R Adj. (-59), G Adj. (-18), B Adj. (-18)
  //code short tMovieColorCorrectionMatrix[][3]=
extern  code short tMovieColorCorrectionMatrix[];


  // Smooth (X)
// R Array (1,1), G Array (1,1), B Array (0,0)
// R Adj. (-58), G Adj. (-100), B Adj. (-18)
  //code short tGameMatrix[][3]=
extern code short tGameMatrix[];

// Smooth (X)
// R Array (1,1), G Array (3,1), B Array (2,2)
// R Adj. (0), G Adj. (0), B Adj. (0)
  //code short tVideoSportsColorCorrectionMatrix[][3]=
extern code short tVideoSportsColorCorrectionMatrix[];

// Smooth (X)
// R Array (2,2), G Array (1,0), B Array (0,0)
// R Adj. (0), G Adj. (-100), B Adj. (0)
  //code short tVideoNatureColorCorrectionMatrix[][3]=
extern code short tVideoNatureColorCorrectionMatrix[];
 ////////////////////////////////////////////////////////////////////
  /// DLC Table
  ////////////////////////////////////////////////////////////////////
extern BYTE code t_MWEDLC_GraphicsGame_Table[];
extern  BYTE code t_MWEDLC_VideoMovie_Table[];
extern  BYTE code t_MWEDLC_VideoSports_Table[];
extern  BYTE code t_MWEDLC_VideoNature_Table[];
extern BYTE code tUserColorMode[];
  #endif //_MENUFUNC_C

#endif  //PANELTYPE

//Jison 080502
#if ((DEF_MULTIMEDIA_SUB_BRIGHTNESS==0xFF || DEF_GAME_SUB_BRIGHTNESS==0xFF || DEF_MOVIE_SUB_BRIGHTNESS==0xFF || DEF_SPORTS_SUB_BRIGHTNESS==0xFF || DEF_NATURE_SUB_BRIGHTNESS==0xFF) && !defined(_DIFFER_SUB_BRIGHTNESS_RGB_))
#define _DIFFER_SUB_BRIGHTNESS_RGB_
#endif

//Jison 080628 if not defined DLC on/off, the default for GAME/MOVIE/SPORTS/NATURE is _ENABLE(for old settings compatible).
#if !defined(DEF_GAME_DLC)
#define DEF_GAME_DLC    _ENABLE
#endif
#if !defined(DEF_MOVIE_DLC)
#define DEF_MOVIE_DLC   _ENABLE
#endif
#if !defined(DEF_SPORTS_DLC)
#define DEF_SPORTS_DLC  _ENABLE
#endif
#if !defined(DEF_NATURE_DLC)
#define DEF_NATURE_DLC  _ENABLE
#endif

#endif //_COLORFINETUNE_H

