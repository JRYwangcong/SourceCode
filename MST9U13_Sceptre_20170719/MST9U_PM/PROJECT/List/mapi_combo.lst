C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAPI_COMBO
OBJECT MODULE PLACED IN .\Obj\mapi_combo.obj
COMPILER INVOKED BY: C:\Keil4\C51\BIN\C51.EXE ..\Code\mapi_combo.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\Code\INC;..\Code\D
                    -RIVER\INC;..\Code\DRIVER\MST9U\INC;..\Code\DRIVER\MST9U3\INC) DEFINE(ModelName=MST9U3_DEMO,CHIP_ID=MST9U3) DEBUG OBJECTE
                    -XTEND PRINT(.\List\mapi_combo.lst) OBJECT(.\Obj\mapi_combo.obj)

line level    source

   1          ///////////////////////////////////////////////////////////////////////////////////////////////////
   2          ///
   3          /// @file   Mapi_combo.c
   4          /// @author MStar Semiconductor Inc.
   5          /// @brief  MHL driver Function
   6          ///////////////////////////////////////////////////////////////////////////////////////////////////
   7          
   8          #ifndef _MAPI_COMBO_C_
   9          #define _MAPI_COMBO_C_
  10          
  11          //-------------------------------------------------------------------------------------------------
  12          //  Include Files
  13          //-------------------------------------------------------------------------------------------------
  14          #include "Global.h"
  15          #include "mapi_combo.h"
  16          #include "drvADC.h"
  17          #include "mapi_mhl.h"
  18          #include "mapi_tmds.h"
  19          #include "mdrv_tmds.h"
  20          #include "mhal_tmds.h"
  21          
  22          #ifdef _WORK_ON_PM_
              #include "mhal_combo.c"
              #include "mdrv_combo.c"
              #include "mdrv_combo.h"
              #include "mhal_combo.h"
              //-------------------------------------------------------------------------------------------------
              //  Local Defines
              //-------------------------------------------------------------------------------------------------
              
              //-------------------------------------------------------------------------------------------------
              //  Local Structures
              //-------------------------------------------------------------------------------------------------
              
              //-------------------------------------------------------------------------------------------------
              //  Combo EDID table
              //-------------------------------------------------------------------------------------------------
              BYTE tEDID_TABLE_COMBO_VGA[128] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
              };
              
              #if(COMBO_USE_DISPLAY_ID_PORT0)
              BYTE tEDID_TABLE_COMBO_PORT0[384] =
              {
              
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 2   

              
                      //Sony 4K2K
                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x4D, 0xD9, 0x01, 0xFD, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x14, 0x01, 0x03, 0x80, 0x90, 0x51, 0x78, 0x0A, 0x0D, 0xC9, 0xA0, 0x57, 0x47, 0x98, 0x27,
                      0x12, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C,
                      0x45, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80,
                      0xB0, 0x58, 0x8A, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x3A,
                      0x3E, 0x0F, 0x46, 0x0F, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC,
                      0x00, 0x53, 0x4F, 0x4E, 0x59, 0x20, 0x54, 0x56, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x02, 0x34,
              
                      0x02, 0x03, 0x34, 0xF0, 0x4A, 0x10, 0x04, 0x05, 0x03, 0x02, 0x07, 0x06, 0x20, 0x01, 0x3C, 0x26,
                      0x09, 0x07, 0x07, 0x15, 0x07, 0x50, 0x83, 0x01, 0x00, 0x00, 0x76, 0x03, 0x0C, 0x00, 0x20, 0x00,
                      0xB8, 0x3C, 0x2F, 0x88, 0x0C, 0x20, 0x90, 0x08, 0x10, 0x18, 0x10, 0x28, 0x10, 0x78, 0x10, 0x06,
                      0x26, 0xE2, 0x00, 0x7B, 0x01, 0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00,
                      0xA0, 0x2A, 0x53, 0x00, 0x00, 0x9E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E,
                      0x96, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x18, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10,
                      0x10, 0x3E, 0x96, 0x00, 0x38, 0x2A, 0x43, 0x00, 0x00, 0x18, 0x8C, 0x0A, 0xA0, 0x14, 0x51, 0xF0,
                      0x16, 0x00, 0x26, 0x7C, 0x43, 0x00, 0x38, 0x2A, 0x43, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x8F,
              
                      0x70, 0x11, 0x79, 0x06, 0x00, 0x03, 0x00, 0x3C, 0x03, 0x74, 0x00, 0x04, 0xFF, 0x0E, 0x9F, 0x05,
                      0x1F, 0x84, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00, 0x03, 0x74, 0x00, 0x04,
                      0xFF, 0x0E, 0x7B, 0x06, 0xFB, 0x84, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00,
                      0x03, 0x74, 0x00, 0x04, 0xFF, 0x0F, 0x7B, 0x05, 0xFB, 0x83, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00,
                      0x07, 0x80, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x90,
              
              /*
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              */
              };
              
              #else
              BYTE tEDID_TABLE_COMBO_PORT0[256] =
              {
              
              //DP 4K2K(3840x2160@60Hz / 4096x2160@60Hz) - native = 3840x2160@30Hz
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 3   

              
              
              0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x36, 0x74, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00,
              0x2C, 0x12, 0x01, 0x04, 0xA5, 0xA0, 0x64, 0x78, 0xFA, 0xCF, 0x74, 0xA3, 0x57, 0x4C, 0xB0, 0x23,
              0x09, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x81, 0xC0, 0xA9, 0x40, 0xD1, 0xC0, 0x01, 0x01, 0x01, 0x01,
              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80, 0xB0, 0x58,
              0x8A, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40,
              0x58, 0x2C, 0x45, 0x00, 0xC4, 0x8E, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
              0x53, 0x74, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6D, 0x6F, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
              0x00, 0x3B, 0x3C, 0x1F, 0x46, 0x07, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x74,
              
              0x70, 0x11, 0x79, 0x06, 0x00, 0x03, 0x00, 0x3C, 0x03, 0x74, 0x00, 0x04, 0xFF, 0x0E, 0x2F, 0x02,
              0xAF, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00, 0x07, 0xE8, 0x00, 0x04,
              0xFF, 0x0E, 0x2F, 0x02, 0xAF, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00,
              0x07, 0xE8, 0x00, 0x04, 0xFF, 0x0F, 0x2F, 0x01, 0x57, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00,
              0x07, 0x80, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBC, 0x90,
              
              
              
              /*
                      //DP 4K2K(3840x2160@60Hz / 4096x2160@30Hz) - native = 3840x2160@30Hz
              
              
                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x36, 0x74, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00,
                      0x2C, 0x12, 0x01, 0x04, 0xA5, 0xA0, 0x64, 0x78, 0xFA, 0xCF, 0x74, 0xA3, 0x57, 0x4C, 0xB0, 0x23,
                      0x09, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x81, 0xC0, 0xA9, 0x40, 0xD1, 0xC0, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80, 0xB0, 0x58,
                      0x8A, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40,
                      0x58, 0x2C, 0x45, 0x00, 0xC4, 0x8E, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
                      0x53, 0x74, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6D, 0x6F, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                      0x00, 0x3B, 0x3C, 0x1F, 0x46, 0x07, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x74,
              
                      0x70, 0x11, 0x79, 0x06, 0x00, 0x03, 0x00, 0x3C, 0x03, 0x74, 0x00, 0x04, 0xFF, 0x0E, 0x2F, 0x02,
                      0xAF, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00, 0x07, 0xE8, 0x00, 0x04,
                      0xFF, 0x0E, 0x2F, 0x02, 0xAF, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00,
                      0x03, 0x74, 0x00, 0x04, 0xFF, 0x0F, 0x2F, 0x01, 0x57, 0x80, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00,
                      0x07, 0x80, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x90,
              */
                  //DP 4K2K - native = 4K2K 30Hz
              /*
                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x36, 0x74, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00,
                      0x2C, 0x12, 0x01, 0x04, 0xA5, 0xA0, 0x64, 0x78, 0xFA, 0xCF, 0x74, 0xA3, 0x57, 0x4C, 0xB0, 0x23,
                      0x09, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x81, 0xC0, 0xA9, 0x40, 0xD1, 0xC0, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80, 0xB0, 0x58,
                      0x8A, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40,
                      0x58, 0x2C, 0x45, 0x00, 0xC4, 0x8E, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
                      0x53, 0x74, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6D, 0x6F, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                      0x00, 0x3B, 0x3C, 0x1F, 0x46, 0x07, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x74,
              
                      0x70, 0x11, 0x79, 0x06, 0x00, 0x03, 0x00, 0x3C, 0x03, 0x74, 0x00, 0x04, 0xFF, 0x0E, 0x9F, 0x05,
                      0x1F, 0x84, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00, 0x03, 0x74, 0x00, 0x04,
                      0xFF, 0x0E, 0x7B, 0x06, 0xFB, 0x84, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00, 0x07, 0x80, 0x09, 0x00,
                      0x03, 0x74, 0x00, 0x04, 0xFF, 0x0F, 0x7B, 0x05, 0xFB, 0x83, 0x57, 0x00, 0x6F, 0x08, 0x59, 0x00,
                      0x07, 0x80, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 4   

                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x90,
              */
              
                  //DP 4K2K - native = 1080P
              /*
                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x36, 0x74, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00,
                      0x2C, 0x12, 0x01, 0x04, 0xA5, 0xA0, 0x64, 0x78, 0xFA, 0xCF, 0x74, 0xA3, 0x57, 0x4C, 0xB0, 0x23,
                      0x09, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x81, 0xC0, 0xA9, 0x40, 0xD1, 0xC0, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x04, 0x74, 0x00, 0x30, 0xF2, 0x70, 0x5A, 0x80, 0xB0, 0x58,
                      0x8A, 0x00, 0xA0, 0x2A, 0x53, 0x00, 0x00, 0x1E, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40,
                      0x58, 0x2C, 0x45, 0x00, 0xC4, 0x8E, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
                      0x53, 0x74, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6D, 0x6F, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                      0x00, 0x3B, 0x3C, 0x1F, 0x46, 0x07, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x74,
              
                      0x70, 0x12, 0x1D, 0x03, 0x00, 0x03, 0x00, 0x14, 0x43, 0xCD, 0x00, 0x04, 0x00, 0x0F, 0x9F, 0x00,
                      0x2F, 0x80, 0x1F, 0x00, 0x70, 0x08, 0x1E, 0x00, 0x02, 0x00, 0x09, 0x00, 0x06, 0x81, 0x03, 0x04,
                      0x03, 0x01, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90,
              */
                      //4K2K ----- NG
                      /*
                                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3A, 0xC4, 0xF4, 0x27, 0x55, 0xFD, 0x01, 0x00,
                                      0x14, 0x17, 0x01, 0x04, 0xA5, 0x3C, 0x22, 0x78, 0x2B, 0xEE, 0xD5, 0xA5, 0x55, 0x48, 0x9B, 0x26,
                                      0x12, 0x50, 0x54, 0xBF, 0xEF, 0x00, 0x71, 0x4F, 0x81, 0xC0, 0x81, 0x40, 0x81, 0x80, 0x95, 0x00,
                                      0x95, 0x0F, 0xB3, 0x00, 0xD1, 0xC0, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C,
                                      0x45, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x41, 0x37, 0x4C,
                                      0x4D, 0x54, 0x46, 0x31, 0x33, 0x30, 0x33, 0x38, 0x39, 0x0A, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x32,
                                      0x55, 0x18, 0x5C, 0x11, 0x04, 0x11, 0x50, 0xD2, 0xF8, 0x58, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFC,
                                      0x00, 0x4E, 0x56, 0x44, 0x20, 0x47, 0x45, 0x46, 0x4F, 0x52, 0x43, 0x45, 0x20, 0x20, 0x01, 0x16,
                                      0x70, 0x12, 0x1D, 0x03, 0x00, 0x03, 0x00, 0x14, 0x43, 0xCD, 0x00, 0x04, 0x00, 0x0F, 0x9F, 0x00,
                                      0x2F, 0x80, 0x1F, 0x00, 0x70, 0x08, 0x1E, 0x00, 0x02, 0x00, 0x09, 0x00, 0x06, 0x81, 0x03, 0x04,
                                      0x03, 0x01, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90,
                      */
                                      //2560 120Hz
                                      /*
                                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x10, 0xAC, 0x57, 0xA0, 0x53, 0x31, 0x31, 0x31,
                                      0x30, 0x13, 0x01, 0x04, 0xB5, 0x3C, 0x22, 0x78, 0x3A, 0x8E, 0x05, 0xAD, 0x4F, 0x33, 0xB0, 0x26,
                                      0x0D, 0x50, 0x54, 0xA5, 0x4B, 0x00, 0x81, 0x00, 0xB3, 0x00, 0xD1, 0x00, 0x71, 0x4F, 0xA9, 0x40,
                                      0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0xAC, 0xBC, 0x00, 0xA0, 0xA0, 0xA0, 0x29, 0x50, 0x30, 0x20,
                                      0x35, 0x00, 0x55, 0x50, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x48, 0x48, 0x31,
                                      0x31, 0x37, 0x38, 0x32, 0x39, 0x31, 0x31, 0x31, 0x53, 0x0A, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x44,
                                      0x45, 0x4C, 0x4C, 0x20, 0x55, 0x32, 0x37, 0x31, 0x31, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                                      0x00, 0x31, 0x79, 0x1D, 0x71, 0x0B, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xE1,
                                      0x02, 0x03, 0x1D, 0xF1, 0x50, 0x90, 0x05, 0x04, 0x03, 0x02, 0x07, 0x16, 0x01, 0x06, 0x11, 0x12,
                                      0x15, 0x13, 0x14, 0x1F, 0x20, 0x23, 0x0D, 0x7F, 0x07, 0x83, 0x0F, 0x00, 0x00, 0x02, 0x3A, 0x80,
                                      0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C, 0x25, 0x00, 0x55, 0x50, 0x21, 0x00, 0x00, 0x1E, 0x01,
                                      0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x55, 0x50, 0x21, 0x00, 0x00,
                                      0x9E, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x55, 0x50, 0x21,
                                      0x00, 0x00, 0x1E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x55,
                                      0x50, 0x21, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4B,
                                      */
                                      //1080P 120Hz
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 5   

                                      /*
                                      0x00,   0xFF,   0xFF,   0xFF,   0xFF,   0xFF,   0xFF,   0x00,   0x36,   0x74,   0x00,   0x01,   0x00,   0x00,   0x00,   0x00,
                                      0x16,   0x13,   0x01,   0x04,   0x80,   0x33,   0x1C,   0x78,   0xEE,   0xEF,   0x91,   0xA3,   0x54,   0x4C,   0x9B,   0x26,
                                      0x0F,   0x50,   0x54,   0x00,   0x00,   0x00,   0x01,   0x01,   0x01,   0x01,   0x01,   0x01,   0x01,   0x00,   0x01,   0x01,
                                      0x01,   0x01,   0x01,   0x01,   0x01,   0x01,   0x86,   0x6F,   0x80,   0xA0,   0x70,   0x38,   0x40,   0x40,   0x30,   0x20,
                                      0x35,   0x00,   0xFE,   0x1F,   0x11,   0x00,   0x00,   0x1E,   0x00,   0x00,   0x00,   0xFF,   0x00,   0x30,   0x30,   0x30,
                                      0x30,   0x30,   0x31,   0x0A,   0x20,   0x20,   0x20,   0x20,   0x20,   0x20,   0x00,   0x00,   0x00,   0xFC,   0x00,   0x4D,
                                      0x53,   0x74,   0x61,   0x72,   0x20,   0x46,   0x48,   0x44,   0x0A,   0x20,   0x20,   0x20,   0x00,   0x00,   0x00,   0xFD,
                                      0x00,   0x3B,   0x79,   0x3E,   0x8E,   0x1E,   0x00,   0x0A,   0x20,   0x20,   0x20,   0x20,   0x20,   0x20,   0x00,   0x16,
                                      */
              
                                      //2560x1600@60Hz
              /*
                                              0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x04,0x43,0x14,0x80,0x89,0xDA,0x07,0x00,0x0A,0x12,0x01,0x04,0x
             -80,0x41,0x29,0x78,0xE2,0x8F,0x95,0xAD,0x4F,0x32,0xB2,0x25,
                                              0x0F,0x50,0x54,0xA5,0x4B,0x00,0x81,0x80,0xA9,0x40,0xD1,0x00,0xD1,0x40,0x71,0x4F,0x81,0x00,0x01,0x01,0x
             -01,0x01,0xB0,0x68,0x00,0xA0,0xA0,0x40,0x2E,0x60,0x30,0x20,
                                              0x36,0x00,0x81,0x90,0x21,0x00,0x00,0x3E,0x00,0x00,0x00,0xFF,0x00,0x44,0x50,0x31,0x39,0x30,0x35,0x32,0x
             -38,0x38,0x37,0x45,0x54,0x0A,0x00,0x00,0x00,0xFC,0x00,0x41,
                                              0x42,0x43,0x20,0x33,0x30,0x32,0x30,0x30,0x38,0x57,0x53,0x0A,0x00,0x00,0x00,0xFD,0x00,0x31,0x56,0x1D,0x
             -71,0x1C,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0xC9,
                                              0x70,0x11,0x06,0x03,0x00,0x10,0x00,0x03,0x02,0x00,0x01,0xD0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                                              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                                              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                                              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x90
                      */
                                      //Dell EDID
                      /*
                                              0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x10, 0xAC, 0x46, 0xF0, 0x4C, 0x4A, 0x34, 0x41,
                                              0x0F, 0x17, 0x01, 0x04, 0xB5, 0x34, 0x20, 0x78, 0x3A, 0x1D, 0xF5, 0xAE, 0x4F, 0x35, 0xB3, 0x25,
                                              0x0D, 0x50, 0x54, 0xA5, 0x4B, 0x00, 0x81, 0x80, 0xA9, 0x40, 0xD1, 0x00, 0x71, 0x4F, 0x01, 0x01,
                                              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x28, 0x3C, 0x80, 0xA0, 0x70, 0xB0, 0x23, 0x40, 0x30, 0x20,
                                              0x36, 0x00, 0x06, 0x44, 0x21, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x36, 0x56, 0x4E,
                                              0x58, 0x35, 0x33, 0x34, 0x44, 0x41, 0x34, 0x4A, 0x4C, 0x0A, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x44,
                                              0x45, 0x4C, 0x4C, 0x20, 0x55, 0x32, 0x34, 0x31, 0x33, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                                              0x00, 0x38, 0x4C, 0x1E, 0x51, 0x11, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x39,
              
                                              0x02, 0x03, 0x1D, 0xF1, 0x50, 0x90, 0x05, 0x04, 0x03, 0x02, 0x07, 0x16, 0x01, 0x1F, 0x12, 0x13,
                                              0x14, 0x20, 0x15, 0x11, 0x06, 0x23, 0x09, 0x1F, 0x07, 0x82, 0x01, 0x00, 0x00, 0x02, 0x3A, 0x80,
                                              0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x06, 0x44, 0x21, 0x00, 0x00, 0x1E, 0x01,
                                              0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x06, 0x44, 0x21, 0x00, 0x00,
                                              0x9E, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x06, 0x44, 0x21,
                                              0x00, 0x00, 0x1E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x06,
                                              0x44, 0x21, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
                      */
                              /*
                      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3E, 0x93, 0x08, 0xC0, 0x00, 0x00, 0x00, 0x00,
                      0x20, 0x15, 0x01, 0x04, 0xA5, 0x33, 0x1D, 0x78, 0x22, 0x1E, 0x55, 0xA0, 0x59, 0x56, 0x9F, 0x27,
                      0x0D, 0x50, 0x54, 0xBD, 0x4B, 0x00, 0xD1, 0xC0, 0x81, 0x80, 0x95, 0x0F, 0x95, 0x00, 0xB3, 0x00,
                      0x81, 0xC0, 0x01, 0x01, 0x01, 0x01, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C,
                      0x45, 0x00, 0xFD, 0x1E, 0x11, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x0A, 0x20, 0x20,
                      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x56,
                      0x53, 0x32, 0x33, 0x30, 0x50, 0x47, 0x4C, 0x57, 0x0A, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
                      0x00, 0x38, 0x4C, 0x1E, 0x53, 0x11, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x6E,
                      0x02, 0x03, 0x0C, 0xC1, 0x23, 0x09, 0x17, 0x07, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 6   

                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
                              */
              
              };
              
              #endif
              
              #if(COMBO_USE_DISPLAY_ID_PORT1)
              BYTE tEDID_TABLE_COMBO_PORT1[384] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #else
              BYTE tEDID_TABLE_COMBO_PORT1[256] =
              {
                  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x38, 0xA3, 0x0E, 0x68, 0x00, 0x00, 0x00, 0x00,
                  0x24, 0x14, 0x01, 0x04, 0xA5, 0x26, 0x1E, 0x78, 0xE2, 0xB7, 0xF5, 0xA0, 0x58, 0x56, 0x9F, 0x28,
                  0x0B, 0x50, 0x54, 0xBF, 0xEF, 0x80, 0x71, 0x4F, 0x81, 0x40, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01,
                  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0x2A, 0x00, 0x98, 0x51, 0x00, 0x2A, 0x40, 0x30, 0x70,
                  0x13, 0x00, 0x78, 0x2D, 0x11, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFD, 0x00, 0x32, 0x4C, 0x1F,
                  0x52, 0x0E, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x45,
                  0x41, 0x31, 0x39, 0x32, 0x4D, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFF,
                  0x00, 0x38, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x54, 0x42, 0x0A, 0x20, 0x20, 0x01, 0x74,
                  0x02, 0x03, 0x11, 0xC1, 0x44, 0x84, 0x13, 0x03, 0x12, 0x23, 0x09, 0x07, 0x07, 0x83, 0x01, 0x00,
                  0x00, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x78, 0x2D, 0x11,
                  0x00, 0x00, 0x1E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x78,
                  0x2D, 0x11, 0x00, 0x00, 0x18, 0x8C, 0x0A, 0xD0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0C, 0x40, 0x55,
                  0x00, 0x78, 0x2D, 0x11, 0x00, 0x00, 0x18, 0x01, 0x1D, 0x00, 0xBC, 0x52, 0xD0, 0x1E, 0x20, 0xB8,
                  0x28, 0x55, 0x40, 0x78, 0x2D, 0x11, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55,
              
              };
              
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 7   

              #endif
              
              #if(COMBO_USE_DISPLAY_ID_PORT2)
              BYTE tEDID_TABLE_COMBO_PORT2[384] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #else
              BYTE tEDID_TABLE_COMBO_PORT2[256] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #endif
              
              #if(COMBO_USE_DISPLAY_ID_PORT3)
              BYTE tEDID_TABLE_COMBO_PORT3[384] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 8   

                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #else
              BYTE tEDID_TABLE_COMBO_PORT3[256] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #endif
              
              #if(COMBO_USE_DISPLAY_ID_PORT4)
              BYTE tEDID_TABLE_COMBO_PORT4[384] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 9   

                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #else
              BYTE tEDID_TABLE_COMBO_PORT4[256] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
              
              #endif
              
              #if(COMBO_USE_DISPLAY_ID_PORT5)
              BYTE tEDID_TABLE_COMBO_PORT5[384] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x18,0x0F,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x25,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
                  0x02,0x03,0x1D,0xF2,0x4A,0x05,0x84,0x03,0x02,0x01,0x12,0x93,0x14,0x16,0x07,0x23,
                  0x09,0x07,0x07,0x83,0x01,0x00,0x00,0x65,0x03,0x0C,0x00,0x10,0x00,0x8C,0x0A,0xD0,
                  0x8A,0x20,0xE0,0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,
                  0x0A,0xA0,0x14,0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,
                  0x99,0x01,0x1D,0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,
                  0x00,0x00,0x1F,0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,
                  0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,
              };
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 10  

              
              #else
              BYTE tEDID_TABLE_COMBO_PORT5[256] =
              {
                  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x36,0x74,0x30,0x00,0x01,0x00,0x00,0x00,
                  0x0A,0x14,0x01,0x03,0x80,0x73,0x41,0x78,0x0A,0xCF,0x74,0xA3,0x57,0x4C,0xB0,0x23,
                  0x09,0x48,0x4C,0x00,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,
                  0x01,0x01,0x01,0x01,0x01,0x20,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,
                  0x55,0x00,0xC4,0x8E,0x21,0x00,0x00,0x1E,0x01,0x1D,0x80,0x18,0x71,0x1C,0x16,0x20,
                  0x58,0x2C,0x25,0x00,0xC4,0x8E,0x21,0x00,0x00,0x9E,0x00,0x00,0x00,0xFC,0x00,0x4D,
                  0x53,0x74,0x61,0x72,0x20,0x44,0x65,0x6D,0x6F,0x0A,0x20,0x20,0x00,0x00,0x00,0xFD,
                  0x00,0x3B,0x3C,0x1F,0x2D,0x08,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x01,0x2E,
                  0x02,0x03,0x2A,0xF2,0x4D,0x05,0x84,0x03,0x01,0x12,0x93,0x14,0x16,0x07,0x10,0x1F,
                  0x20,0x22,0x26,0x09,0x07,0x07,0x11,0x07,0x06,0x83,0x01,0x00,0x00,0x6C,0x03,0x0C,
                  0x00,0x10,0x00,0xB8,0x2D,0x20,0xA0,0x02,0x01,0x41,0x8C,0x0A,0xD0,0x8A,0x20,0xE0,
                  0x2D,0x10,0x10,0x3E,0x96,0x00,0xC4,0x8E,0x21,0x00,0x00,0x18,0x8C,0x0A,0xA0,0x14,
                  0x51,0xF0,0x16,0x00,0x26,0x7C,0x43,0x00,0xC4,0x8E,0x21,0x00,0x00,0x99,0x01,0x1D,
                  0x00,0xBC,0x52,0xD0,0x1E,0x20,0xB8,0x28,0x55,0x40,0xC4,0x8E,0x21,0x00,0x00,0x1F,
                  0x01,0x1D,0x80,0xD0,0x72,0x1C,0x16,0x20,0x10,0x2C,0x25,0x80,0xC4,0x8E,0x21,0x00,
                  0x00,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD8,
              };
              
              #endif
              
              BYTE tMHL_EDID_SIZE_PORT[7] =
              {
                  COMBO_EDID_SIZE_PORT0,
                  COMBO_EDID_SIZE_PORT1,
                  COMBO_EDID_SIZE_PORT2,
                  COMBO_EDID_SIZE_PORT3,
                  COMBO_EDID_SIZE_PORT4,
                  COMBO_EDID_SIZE_PORT5,
                  COMBO_EDID_SIZE_VGA,
              };
              
              BYTE *tCOMBO_EDID_TALBE_PORT[7] =
              {
                  tEDID_TABLE_COMBO_PORT0,
                  tEDID_TABLE_COMBO_PORT1,
                  tEDID_TABLE_COMBO_PORT2,
                  tEDID_TABLE_COMBO_PORT3,
                  tEDID_TABLE_COMBO_PORT4,
                  tEDID_TABLE_COMBO_PORT5,
                  tEDID_TABLE_COMBO_VGA,
              };
              
              BYTE *tMHL_EDID_TALBE_PORT[6] =
              {
                  tEDID_TABLE_COMBO_PORT0,
                  tEDID_TABLE_COMBO_PORT1,
                  tEDID_TABLE_COMBO_PORT2,
                  tEDID_TABLE_COMBO_PORT3,
                  tEDID_TABLE_COMBO_PORT4,
                  tEDID_TABLE_COMBO_PORT5,
              };
              
              #endif
 599          //-------------------------------------------------------------------------------------------------
 600          //  Global Variables
 601          //-------------------------------------------------------------------------------------------------
 602          
 603          //-------------------------------------------------------------------------------------------------
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 11  

 604          //  Combo HDCP key
 605          //-------------------------------------------------------------------------------------------------
 606          #if ENABLE_SYNC_CHECK_AGAIN
 607          code BYTE tCOMBO_HDCP_BKSV[5] =
 608          {
 609              0x89, 0x38, 0xae, 0x0d, 0xed
 610          };
 611          
 612          code BYTE tCOMBO_HDCP_KEY_TABLE[] =
 613          {
 614              0x00, 0xE6, 0xD2, 0xD0, 0xA4, 0x0A, 0xF9, 0xAB, 0x2F, 0x9A, 0x2D, 0x3A,
 615              0xB5, 0xFF, 0x9D, 0x37, 0xB3, 0x63, 0x23, 0x6E, 0xA3, 0x4E, 0x58, 0xEF,
 616              0xD2, 0x78, 0x6D, 0x3B, 0xDE, 0xFD, 0x7E, 0x4D, 0xAA, 0xB6, 0x0C, 0x59,
 617              0x4F, 0x74, 0x3C, 0xF8, 0xDA, 0x65, 0x6E, 0x2F, 0xB4, 0xAB, 0xAD, 0x7F,
 618              0x89, 0xA1, 0x92, 0x25, 0x1A, 0xCD, 0x50, 0x93, 0x50, 0x00, 0x63, 0x88,
 619              0x7B, 0xD0, 0xD8, 0x4D, 0x46, 0x95, 0xA8, 0xFC, 0x9B, 0x0D, 0xD1, 0x08,
 620              0x06, 0xB2, 0x67, 0xBE, 0xA2, 0x90, 0xA7, 0x84, 0x2A, 0x4B, 0x28, 0xC8,
 621              0xDD, 0x8F, 0xC9, 0x48, 0xA3, 0x0A, 0x7D, 0xCA, 0xDA, 0xBC, 0xCE, 0xFA,
 622              0x9B, 0x9F, 0x61, 0x90, 0x9E, 0x46, 0x24, 0x2B, 0xA6, 0x7B, 0xB1, 0x6F,
 623              0xC4, 0x4C, 0x63, 0xAF, 0x44, 0xE1, 0x3A, 0xDD, 0x0D, 0xED, 0xF4, 0x45,
 624              0x36, 0x47, 0x0B, 0x48, 0x0A, 0xB1, 0xE6, 0xE9, 0xB6, 0xED, 0x78, 0x37,
 625              0xDC, 0xB0, 0x07, 0x72, 0x83, 0xDC, 0x73, 0x26, 0x31, 0x49, 0x03, 0x52,
 626              0x7C, 0xE6, 0xC6, 0xE8, 0x3C, 0xD1, 0x62, 0xFE, 0xF0, 0x01, 0x73, 0x23,
 627              0x90, 0x70, 0xA9, 0x52, 0x8C, 0x75, 0x1C, 0xE5, 0x63, 0x7C, 0xA9, 0x98,
 628              0x5F, 0xD9, 0x7C, 0x62, 0x25, 0x6C, 0x61, 0x6C, 0xB5, 0xF9, 0xDB, 0xD8,
 629              0x91, 0x2F, 0x25, 0xF6, 0x3E, 0x37, 0xBE, 0xE2, 0x92, 0x08, 0x07, 0x3C,
 630              0xE6, 0xC9, 0xE3, 0xB0, 0x4D, 0xF6, 0xAD, 0x54, 0x3C, 0xED, 0x92, 0x5A,
 631              0x97, 0x93, 0xC0, 0x48, 0xEA, 0x23, 0x6C, 0xDD, 0x9A, 0x00, 0xBA, 0xF1,
 632              0xB4, 0xE7, 0x7E, 0x84, 0x9A, 0xB5, 0xD5, 0xF4, 0xB0, 0x42, 0x49, 0x5E,
 633              0x15, 0x5A, 0x43, 0x2D, 0xA9, 0xB0, 0x0A, 0x1C, 0x75, 0xDE, 0x2E, 0x08,
 634              0xF7, 0xDF, 0x38, 0x03, 0xEB, 0x6A, 0x75, 0xEB, 0xDA, 0x1C, 0xA0, 0xC9,
 635              0x2F, 0x2A, 0x69, 0x3F, 0x13, 0xFB, 0xA4, 0x23, 0x0A, 0xE5, 0x0A, 0xA5,
 636              0xEF, 0xCC, 0x8D, 0xB6, 0x5E, 0x6C, 0xB6, 0xE8, 0x84, 0xEF, 0x03, 0xDC,
 637              0xC5, 0x8A, 0xA3, 0x4B, 0xEF, 0x44, 0x12, 0x7F
 638          };
 639          #endif
 640          //-------------------------------------------------------------------------------------------------
 641          //  Local Variables
 642          //-------------------------------------------------------------------------------------------------
 643          ST_COMBO_IP_PARAMETER XDATA stComboIPParameter = {FALSE, FALSE, 0, 0, 0, 0, 0, 0, 0, 0};
 644          
 645          //-------------------------------------------------------------------------------------------------
 646          //  Local Functions
 647          //-------------------------------------------------------------------------------------------------
 648          
 649          //**************************************************************************
 650          //  [Function Name]:
 651          //                  mapi_combo_GetComboMask()
 652          //  [Description]
 653          //
 654          //  [Arguments]:
 655          //
 656          //  [Return]:
 657          //
 658          //**************************************************************************
 659          BYTE mapi_combo_GetComboMask(EN_COMBO_IP_SELECT ucComboSelect)
 660          {
 661   1          BYTE ucComboMask = 0;
 662   1      
 663   1          switch(ucComboSelect)
 664   1          {
 665   2              case COMBO_IP_SELECT_PORT0:
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 12  

 666   2                  ucComboMask = COMBO_IP_MASK_PORT0;
 667   2                  break;
 668   2      
 669   2              case COMBO_IP_SELECT_PORT1:
 670   2                  ucComboMask = COMBO_IP_MASK_PORT1;
 671   2                  break;
 672   2      
 673   2              case COMBO_IP_SELECT_PORT2:
 674   2                  ucComboMask = COMBO_IP_MASK_PORT2;
 675   2                  break;
 676   2      
 677   2              case COMBO_IP_SELECT_PORT3:
 678   2                  ucComboMask = COMBO_IP_MASK_PORT3;
 679   2                  break;
 680   2      
 681   2              case COMBO_IP_SELECT_PORT4:
 682   2                  ucComboMask = COMBO_IP_MASK_PORT4;
 683   2                  break;
 684   2      
 685   2              case COMBO_IP_SELECT_PORT5:
 686   2                  ucComboMask = COMBO_IP_MASK_PORT5;
 687   2                  break;
 688   2      
 689   2              case COMBO_IP_SELECT_VGA:
 690   2                  ucComboMask = COMBO_IP_MASK_VGA;
 691   2                  break;
 692   2      
 693   2              default:
 694   2      
 695   2                  break;
 696   2          };
 697   1      
 698   1          return ucComboMask;
 699   1      }
 700          
 701          //**************************************************************************
 702          //  [Function Name]:
 703          //                  mapi_combo_GetComboType()
 704          //  [Description]
 705          //
 706          //  [Arguments]:
 707          //
 708          //  [Return]:
 709          //
 710          //**************************************************************************
 711          EN_COMBO_IP_TYPE mapi_combo_GetComboType(EN_COMBO_IP_SELECT ucComboSelect)
 712          {
 713   1          BYTE ucComboMask = mapi_combo_GetComboMask(ucComboSelect);
 714   1          EN_COMBO_IP_TYPE ucComboIPType = COMBO_IP_TYPE_HDMI;
 715   1      
 716   1          if(stComboIPParameter.ucHDMIEnableIndex & ucComboMask)
 717   1          {
 718   2              ucComboIPType = COMBO_IP_TYPE_HDMI;
 719   2          }
 720   1          else if(stComboIPParameter.ucDPEnableIndex & ucComboMask)
 721   1          {
 722   2              ucComboIPType = COMBO_IP_TYPE_DP;
 723   2          }
 724   1          else if(stComboIPParameter.ucDualEnableIndex & ucComboMask)
 725   1          {
 726   2              ucComboIPType = COMBO_IP_TYPE_DUAL;
 727   2          }
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 13  

 728   1          else if(stComboIPParameter.ucDVIEnableIndex & ucComboMask)
 729   1          {
 730   2              ucComboIPType = COMBO_IP_TYPE_DVI;
 731   2          }
 732   1          else if(stComboIPParameter.ucMHLEnableIndex & ucComboMask)
 733   1          {
 734   2              ucComboIPType = COMBO_IP_TYPE_MHL;
 735   2          }
 736   1      
 737   1          return ucComboIPType;
 738   1      }
 739          
 740          //**************************************************************************
 741          //  [Function Name]:
 742          //                  mapi_combo_GetComboInputPort()
 743          //  [Description]
 744          //
 745          //  [Arguments]:
 746          //
 747          //  [Return]:
 748          //
 749          //**************************************************************************
 750          BYTE mapi_combo_GetComboInputPort(EN_COMBO_IP_SELECT ucComboSelect)
 751          {
 752   1          BYTE ucInputPort = COMBO_INPUT_SELECT_PORT0;
 753   1      
 754   1          switch(ucComboSelect)
 755   1          {
 756   2              case COMBO_IP_SELECT_PORT0:
 757   2                  ucInputPort = COMBO_INPUT_SELECT_PORT0;
 758   2                  break;
 759   2      
 760   2              case COMBO_IP_SELECT_PORT1:
 761   2                  ucInputPort = COMBO_INPUT_SELECT_PORT1;
 762   2                  break;
 763   2      
 764   2              case COMBO_IP_SELECT_PORT2:
 765   2                  ucInputPort = COMBO_INPUT_SELECT_PORT2;
 766   2                  break;
 767   2      
 768   2              case COMBO_IP_SELECT_PORT3:
 769   2                  ucInputPort = COMBO_INPUT_SELECT_PORT3;
 770   2                  break;
 771   2      
 772   2              case COMBO_IP_SELECT_PORT4:
 773   2                  ucInputPort = COMBO_INPUT_SELECT_PORT4;
 774   2                  break;
 775   2      
 776   2              case COMBO_IP_SELECT_PORT5:
 777   2                  ucInputPort = COMBO_INPUT_SELECT_PORT5;
 778   2                  break;
 779   2      
 780   2              case COMBO_IP_SELECT_VGA:
 781   2                  ucInputPort = COMBO_INPUT_SELECT_VGA;
 782   2                  break;
 783   2      
 784   2              default:
 785   2      
 786   2                  break;
 787   2          };
 788   1      
 789   1          return ucInputPort;
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 14  

 790   1      }
 791          
 792          #ifdef _WORK_ON_PM_
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_combo_SetConfiguration()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_SetConfiguration(void)
              {
                  BYTE ucEDIDEnableIndex = stComboIPParameter.ucDPEnableIndex;
                  BYTE ucHDCPEnableIndex = stComboIPParameter.ucDPEnableIndex;
              
                  if(stComboIPParameter.bVGAEnableIndex)
                  {
                      ucEDIDEnableIndex |= COMBO_IP_MASK_VGA;
                  }
              
                  ucHDCPEnableIndex |= stComboIPParameter.ucDVIEnableIndex;
                  ucHDCPEnableIndex |= stComboIPParameter.ucDualEnableIndex;
                  ucHDCPEnableIndex |= stComboIPParameter.ucHDMIEnableIndex;
              
              #if(COMBO_TMDS_USE_INTERNAL_EDID)
                  ucEDIDEnableIndex |= ucHDCPEnableIndex;
              #endif
              
                  mdrv_combo_SetConfiguration(ucEDIDEnableIndex, ucHDCPEnableIndex, stComboIPParameter.ucDPEnableIndex);
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_combo_LoadEDID()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_LoadEDID(BYTE *pEDIDSize, BYTE **pComboEDID)
              {
                  mdrv_combo_LoadEDID(pEDIDSize, pComboEDID);
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_combo_AudioInitial()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_AudioInitial(void)
              {
                  mdrv_combo_AudioInitial();
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 15  

              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_combo_RtermConfiguration()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_RtermConfiguration(void)
              {
                  static BYTE ucDisplayEnableIndex = 0;
                  BYTE ucComboMask = 0;
                  BYTE ucRtermEnableIndex = 0;
                  BYTE ucRtermDisableIndex = 0;
                  BYTE ucInputPort = COMBO_INPUT_SELECT_PORT0;
                  EN_COMBO_IP_SELECT ucComboSelect = COMBO_IP_SELECT_PORT0;
              
                  if(ucDisplayEnableIndex != stComboIPParameter.ucDisplayEnableIndex)
                  {
                      // Display change
                      ucRtermDisableIndex = ucDisplayEnableIndex ^stComboIPParameter.ucDisplayEnableIndex;
                      // Rtern enable
                      ucRtermEnableIndex = ucRtermDisableIndex &stComboIPParameter.ucDisplayEnableIndex;
                      // Rtern disable
                      ucRtermDisableIndex = ucRtermDisableIndex &ucDisplayEnableIndex;
              
                      for(ucComboSelect = COMBO_IP_SELECT_PORT0; ucComboSelect < COMBO_IP_SELECT_MASK; ucComboSelect++)
                      {
                          ucComboMask = mapi_combo_GetComboMask(ucComboSelect);
                          ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
              
                          if(ucRtermEnableIndex & ucComboMask)
                          {
                              switch(mapi_combo_GetComboType(ucComboSelect))
                              {
                                  case COMBO_IP_TYPE_DVI:
                                  case COMBO_IP_TYPE_HDMI:
                                  case COMBO_IP_TYPE_MHL:
                                      mdrv_combo_ClockRtermControl(ucInputPort, TRUE);
              
                                      if(!mapi_mhl_GetCableDetectPort(ucInputPort))
                                      {
                                          mdrv_combo_DataRtermControl(ucInputPort, TRUE);
                                      }
              
                                      break;
              
                                  case COMBO_IP_TYPE_DUAL:
                                      mdrv_combo_ClockRtermControl(ucInputPort, TRUE);
                                      mdrv_combo_ClockRtermControl(ucInputPort +1, TRUE);
                                      mdrv_combo_DataRtermControl(ucInputPort, TRUE);
                                      mdrv_combo_DataRtermControl(ucInputPort +1, TRUE);
                                      break;
              
                                  case COMBO_IP_TYPE_DP:
                                      mdrv_combo_ClockRtermControl(ucInputPort, TRUE);
                                      mdrv_combo_DataRtermControl(ucInputPort, TRUE);
                                      break;
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 16  

              
                                  default:
              
                                      break;
                              };
                          }
                          else if(ucRtermDisableIndex & ucComboMask)
                          {
                              switch(mapi_combo_GetComboType(ucComboSelect))
                              {
                                  case COMBO_IP_TYPE_DVI:
                                  case COMBO_IP_TYPE_HDMI:
                                  case COMBO_IP_TYPE_MHL:
                                      //mdrv_combo_ClockRtermControl(ucInputPort, FALSE);
              
                                      if(!mapi_mhl_GetCableDetectPort(ucInputPort))
                                      {
                                          //mdrv_combo_DataRtermControl(ucComboSelect, FALSE);
                                      }
              
                                      break;
              
                                  case COMBO_IP_TYPE_DUAL:
                                      //mdrv_combo_ClockRtermControl(ucInputPort, FALSE);
                                      //mdrv_combo_ClockRtermControl(ucInputPort +1, FALSE);
                                      //mdrv_combo_DataRtermControl(ucInputPort, FALSE);
                                      //mdrv_combo_DataRtermControl(ucInputPort +1, FALSE);
                                      break;
              
                                  case COMBO_IP_TYPE_DP:
                                      //mdrv_combo_ClockRtermControl(ucInputPort, FALSE);
                                      //mdrv_combo_DataRtermControl(ucInputPort, FALSE);
                                      break;
              
                                  default:
              
                                      break;
                              };
                          }
                      }
              
                      ucDisplayEnableIndex = stComboIPParameter.ucDisplayEnableIndex;
                  }
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_combo_ClockRtermControl()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_ClockRtermControl(BYTE ucComboSelect, Bool bRtermEnable)
              {
                  mdrv_combo_ClockRtermControl(ucComboSelect, bRtermEnable);
              }
              
              //**************************************************************************
              //  [Function Name]:
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 17  

              //                  mapi_combo_DoSWReset()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void mapi_combo_DoSWReset(BYTE ucComboSelect, DWORD ulSWResetValue)
              {
                  mdrv_combo_DoSWReset(ucComboSelect, ulSWResetValue);
              }
              
              //-------------------------------------------------------------------------------------------------
              //  Global Functions
              //-------------------------------------------------------------------------------------------------
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPConfiguration()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPConfiguration(Bool bDisplayEnable, EN_COMBO_IP_SELECT ucComboSelect, EN_INPUTPORT_TYPE 
             -ucComboType)
              {
                  BYTE ucComboMask = mapi_combo_GetComboMask(ucComboSelect);
              
                  if(!stComboIPParameter.bConfigFinish)
                  {
                      if(ucComboType &TYPE_ANALOG)
                      {
                          stComboIPParameter.bVGAEnableIndex = FALSE;//TRUE;
                      }
              
                      if(ucComboType &TYPE_DVI_SINGLE)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucDVIEnableIndex, ucComboMask);
                      }
              
                      if(ucComboType &TYPE_DVI_DUAL)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucDualEnableIndex, ucComboMask);
                      }
              
                      if(ucComboType &TYPE_HDMI)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucHDMIEnableIndex, ucComboMask);
                      }
              
                      if(ucComboType &TYPE_MHL)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucMHLEnableIndex, ucComboMask);
                      }
              
                      if(ucComboType &TYPE_DP)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucDPEnableIndex, ucComboMask);
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 18  

                      }
              
                      if(ucComboType &TYPE_HBR2_0)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucHBR0EnableIndex, ucComboMask);
                      }
              
                      if(ucComboType &TYPE_HBR2_1)
                      {
                          SET_COMBO_IP_PARAMETER(stComboIPParameter.ucHBR1EnableIndex, ucComboMask);
                      }
                  }
              
                  if(bDisplayEnable)
                  {
                      SET_COMBO_IP_PARAMETER(stComboIPParameter.ucDisplayEnableIndex, ucComboMask);
                  }
                  else
                  {
                      CLR_COMBO_IP_PARAMETER(stComboIPParameter.ucDisplayEnableIndex, ucComboMask);
                  }
              
                  mapi_combo_SetConfiguration();
              
              #if ENABLE_VGA_INPUT
                  msADC_SetConfiguration(stComboIPParameter.ucDisplayEnableIndex);
              #endif
              
                  mapi_tmds_SetConfiguration(stComboIPParameter.ucDVIEnableIndex, stComboIPParameter.ucDualEnableIndex, 
             -stComboIPParameter.ucHDMIEnableIndex, stComboIPParameter.ucDisplayEnableIndex);
              
              #if ENABLE_DP_INPUT
                  mapi_DP_SetConfiguration(stComboIPParameter.ucHBR0EnableIndex, stComboIPParameter.ucHBR1EnableIndex,st
             -ComboIPParameter.ucDPEnableIndex,stComboIPParameter.ucDisplayEnableIndex);
              #endif
              
                  mapi_mhl_SetConfiguration(stComboIPParameter.ucMHLEnableIndex, stComboIPParameter.ucDisplayEnableIndex
             -);
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPPMIsrHandler()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPPMIsrHandler(void)
              {
                  mapi_mhl_IsrHandler(E_INT_IRQ_PM_IRQ_OUT);
              
              #if ENABLE_DP_INPUT
                  mapi_DP_IsrHandler(E_INT_IRQ_PM_IRQ_OUT);
              #endif
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPIsrHandler()
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 19  

              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPIsrHandler(InterruptNum eIntNum)
              {
                  UNUSED(eIntNum);
              
              #if ENABLE_DP_INPUT
                  ISR_DPHBR2(0);
                //ISR_DPHBR2(1);
              #endif
              
                  MsOS_EnableInterrupt(E_INT_IRQ_COMB);
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPInitial()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPInitial(void)
              {
                  stComboIPParameter.bConfigFinish = TRUE;
              
                  mapi_combo_LoadEDID(tMHL_EDID_SIZE_PORT, tCOMBO_EDID_TALBE_PORT);
              
                  mapi_combo_RtermConfiguration();
              
              #if ENABLE_VGA_INPUT
                  msADC_init();
              #endif
              
                  mapi_tmds_Initial();
              
              #if ENABLE_DP_INPUT
                  DPRxInit();
              #endif
              
                  mapi_mhl_Initial(tMHL_EDID_TALBE_PORT);
                  //mapi_mhl_SetSystemControlFlag(MHL_SYSTEM_FORCE_DISPLAY_ENABLE);
              
                  mapi_combo_AudioInitial();
              
                  mapi_combo_LoadHDCPKey(tCOMBO_HDCP_KEY_TABLE, tCOMBO_HDCP_BKSV);
              
                  MsOS_AttachInterrupt(E_INT_IRQ_COMB, msAPI_combo_IPIsrHandler);
                  MsOS_EnableInterrupt(E_INT_IRQ_COMB);
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPHandler()
              //  [Description]
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 20  

              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPHandler(void)
              {
                  mapi_combo_RtermConfiguration();
              
                  mapi_tmds_Handler();
              
              #if ENABLE_DP_INPUT
                  DPRxHandle();
              #endif
              
                  mapi_mhl_Handler();
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPTimerIsrHandler()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPTimerIsrHandler(void)
              {
                  mapi_mhl_TimerInterrupt();
              
                  mapi_tmds_TimerInterrupt();
              
              #if ENABLE_DP_INPUT
                  mapi_DP_TimerInterrupt();
              #endif
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPGetColorFormat()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]: 0 = RGB, 1 = YCbCr422, 2 = YCbCr 444
              //
              //**************************************************************************
              ST_COMBO_COLOR_FORMAT msAPI_combo_IPGetColorFormat(EN_COMBO_IP_SELECT ucComboSelect)
              {
                  ST_COMBO_COLOR_FORMAT ucColorFormat = {COMBO_COLOR_FORMAT_DEFAULT, COMBO_COLOR_RANGE_DEFAULT, COMBO_CO
             -LORIMETRY_NONE};
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
              
                  switch(ucComboIPType)
                  {
                      case COMBO_IP_TYPE_DVI:
                      case COMBO_IP_TYPE_DUAL:
              
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 21  

                          break;
              
                      case COMBO_IP_TYPE_HDMI:
                      case COMBO_IP_TYPE_MHL:
                          ucColorFormat = mapi_tmds_Get_Color_Format(ucInputPort);
                          break;
              
                      case COMBO_IP_TYPE_DP:
                          ucColorFormat.ucColorType = (EN_COLOR_FORMAT_TYPE)mapi_DP_GetColorSpace(ucInputPort);
                          break;
              
                      default:
              
                          break;
                  };
              
                  return ucColorFormat;
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPGetPacketContent()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPGetPacketContent(EN_COMBO_IP_SELECT ucComboSelect, EN_PACKET_DEFINE_TYPE ucPacketType, 
             -BYTE ucPacketLength, BYTE *pPacketData)
              {
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
              
                  if(ucPacketLength > 0)
                  {
                      switch(ucComboIPType)
                      {
                          case COMBO_IP_TYPE_DVI:
                          case COMBO_IP_TYPE_DUAL:
              
                              break;
              
                          case COMBO_IP_TYPE_HDMI:
                          case COMBO_IP_TYPE_MHL:
                              mapi_tmds_GetPacketContent(ucInputPort, ucPacketType, ucPacketLength, pPacketData);
                              break;
              
                          case COMBO_IP_TYPE_DP:
                              if(ucPacketType == COMBO_PACKET_DP_MISC)
                              {
                                  mapi_DP_Get_Misc(ucInputPort , pPacketData);
                              }
              
                              break;
              
                          default:
              
                              break;
                      };
                  }
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 22  

              }
              #endif
1282          
1283          #if ENABLE_CABLE_DET
              //**************************************************************************
              //  [Function Name]:
              //                  mapi_DP_GetCableDetectPort()
              //  [Description]
              //                  mapi_DP_GetCableDetectPort
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              BYTE mapi_DP_GetCableDetectPort(BYTE ucInputPort)
              {
                       EN_COMBO_IP_CABLE ucComboIPCableDetect = COMBO_IP_CABLE_NONE;
              
                      switch(ucInputPort)
                      {
                      case 0:
                              ucComboIPCableDetect = (hwSDMDP0Pin_Pin ? COMBO_IP_CABLE_NONE : COMBO_IP_CABLE_DP);
                          break;
                         case 1:
                              ucComboIPCableDetect = (hwSDMDP1Pin_Pin ? COMBO_IP_CABLE_NONE : COMBO_IP_CABLE_DP);
                          break;
              
                      default:
                          break;
                      }
              
                      return ucComboIPCableDetect;
              }
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPGetCableDetect()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              EN_COMBO_IP_CABLE msAPI_combo_IPGetCableDetect(EN_COMBO_IP_SELECT ucComboSelect)
              {
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
                  EN_COMBO_IP_CABLE ucComboIPCableDetect = COMBO_IP_CABLE_NONE;
              
                  switch(ucComboIPType)
                  {
                      case COMBO_IP_TYPE_DVI:
                      case COMBO_IP_TYPE_DUAL:
                          if (mapi_tmds_DetectCablePlug(ucInputPort))
                              ucComboIPCableDetect = COMBO_IP_CABLE_DVI;
                          else
                              ucComboIPCableDetect = COMBO_IP_CABLE_NONE;
                          break;
              
                      case COMBO_IP_TYPE_HDMI:
                      case COMBO_IP_TYPE_MHL:
                          if(mapi_mhl_GetCableDetectPort(ucInputPort))
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 23  

                          {
                              ucComboIPCableDetect = COMBO_IP_CABLE_MHL;
                          }
                          else if (mapi_tmds_DetectCablePlug(ucInputPort))
                              ucComboIPCableDetect = COMBO_IP_CABLE_HDMI;
                          else
                              ucComboIPCableDetect = COMBO_IP_CABLE_NONE;
              
                          break;
              
                      case COMBO_IP_TYPE_DP:
                          if(mapi_DP_GetCableDetectPort(ucInputPort))
                          {
                              ucComboIPCableDetect = COMBO_IP_CABLE_DP;
                          }
              
                          break;
              
                      default:
              
                          break;
                  };
              
                  return ucComboIPCableDetect;
              }
              #endif
1368          
1369          #ifdef _WORK_ON_PM_
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPControlHPD()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPControlHPD(EN_COMBO_IP_SELECT ucComboSelect, Bool bSetHPD)
              {
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
              
                  switch(ucComboIPType)
                  {
                      case COMBO_IP_TYPE_DVI:
                      case COMBO_IP_TYPE_DUAL:
                          mapi_tmds_Set_HPD(ucInputPort, bSetHPD);
                                      break;
              
                      case COMBO_IP_TYPE_HDMI:
                      case COMBO_IP_TYPE_MHL:
                          if(!mapi_mhl_GetCableDetectPort(ucInputPort))
                          {
                              mapi_tmds_Set_HPD(ucInputPort, bSetHPD);
                          }
              
                          break;
              
                      case COMBO_IP_TYPE_DP:
              
                          break;
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 24  

              
                      default:
              
                          break;
                  };
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPCreateAudioPath()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPCreateAudioPath(EN_COMBO_IP_SELECT ucComboSelect)
              {
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
              
                  switch(ucComboIPType)
                  {
                      case COMBO_IP_TYPE_DVI:
                      case COMBO_IP_TYPE_DUAL:
              
                          break;
              
                      case COMBO_IP_TYPE_HDMI:
                      case COMBO_IP_TYPE_MHL:
                          mapi_tmds_ConfigAudioPort(ucInputPort);
                          break;
              
                      case COMBO_IP_TYPE_DP:
                                      #if ENABLE_DP_INPUT
                                              DPRxSetAUPLL(ucInputPort);
                                      #endif
                          break;
              
                      default:
              
                          break;
                  };
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPClockControl()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPClockControl(EN_COMBO_IP_SELECT ucComboSelect, Bool bClockHigh)
              {
                  BYTE ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
                  EN_COMBO_IP_TYPE ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
              
                  switch(ucComboIPType)
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 25  

                  {
                      case COMBO_IP_TYPE_DVI:
                      case COMBO_IP_TYPE_DUAL:
                          mapi_combo_ClockRtermControl(ucInputPort, bClockHigh);
              
                          if(!bClockHigh)
                          {
                              mapi_combo_DoSWReset(ucInputPort, COMBO_SW_RESET_HDCP |COMBO_SW_RESET_HDMI);
                          }
              
                          break;
              
                      case COMBO_IP_TYPE_HDMI:
                      case COMBO_IP_TYPE_MHL:
                          if(!mapi_mhl_GetCableDetectPort(ucInputPort))
                          {
                              mapi_combo_ClockRtermControl(ucInputPort, bClockHigh);
              
                              if(!bClockHigh)
                              {
                                  mapi_combo_DoSWReset(ucInputPort, COMBO_SW_RESET_HDCP |COMBO_SW_RESET_HDMI);
                              }
                          }
              
                          break;
              
                      case COMBO_IP_TYPE_DP:
              
                          break;
              
                      default:
              
                          break;
                  };
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPPowerOn()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPPowerOn(void)
              {
              
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPPowerDown()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPPowerDown(void)
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 26  

              {
              
              }
              
              //**************************************************************************
              //  [Function Name]:
              //                  msAPI_combo_IPPowerSaving()
              //  [Description]
              //
              //  [Arguments]:
              //
              //  [Return]:
              //
              //**************************************************************************
              void msAPI_combo_IPPowerSaving(void)
              {
              
              }
              #endif
1547          
1548          
1549          
1550          //**************************************************************************
1551          //  [Function Name]:
1552          //                  mapi_combo_LoadHDCPKey()
1553          //  [Description]
1554          //
1555          //  [Arguments]:
1556          //
1557          //  [Return]:
1558          //
1559          //**************************************************************************
1560          #if ENABLE_SYNC_CHECK_AGAIN
1561          void mapi_combo_LoadHDCPKey(void)
1562          {
1563   1          EN_COMBO_IP_SELECT ucComboSelect = COMBO_IP_SELECT_PORT0;
1564   1              BYTE ucInputPort = COMBO_INPUT_SELECT_PORT0;
1565   1          EN_COMBO_IP_TYPE  ucComboIPType = COMBO_IP_TYPE_HDMI;
1566   1      
1567   1              mdrv_tmds_LoadKeyViaEfuse(tCOMBO_HDCP_KEY_TABLE, tCOMBO_HDCP_BKSV, EFUSE_0);
1568   1      
1569   1          for(ucComboSelect = COMBO_IP_SELECT_PORT0; ucComboSelect < COMBO_IP_SELECT_MASK; ucComboSelect++)
1570   1          {
1571   2              ucInputPort = mapi_combo_GetComboInputPort(ucComboSelect);
1572   2                      ucComboIPType = mapi_combo_GetComboType(ucComboSelect);
1573   2      
1574   2              switch(ucComboIPType)
1575   2              {
1576   3                  case COMBO_IP_TYPE_DVI:
1577   3                      mdrv_tmds_LoadHDCPKey(ucInputPort, 0x00, tCOMBO_HDCP_KEY_TABLE, tCOMBO_HDCP_BKSV);
1578   3                      break;
1579   3      
1580   3                  case COMBO_IP_TYPE_DUAL:
1581   3                      mdrv_tmds_LoadHDCPKey(ucInputPort, 0x00, tCOMBO_HDCP_KEY_TABLE, tCOMBO_HDCP_BKSV);
1582   3                      mdrv_tmds_LoadHDCPKey(mdrv_tmds_GetDVIDualMainPort(ucInputPort), 0x00, tCOMBO_HDCP_KEY_TAB
             -LE, tCOMBO_HDCP_BKSV);
1583   3                      break;
1584   3      
1585   3                  case COMBO_IP_TYPE_HDMI:
1586   3                  case COMBO_IP_TYPE_MHL:
1587   3                      mdrv_tmds_LoadHDCPKey(ucInputPort, 0x80, tCOMBO_HDCP_KEY_TABLE, tCOMBO_HDCP_BKSV);
1588   3                      break;
C51 COMPILER V9.00   MAPI_COMBO                                                            07/03/2017 18:41:26 PAGE 27  

1589   3      
1590   3                  case COMBO_IP_TYPE_DP:
1591   3                   //   mdrv_combo_LoadHDCPKey(ucInputPort, 0x00, pHDCPKey, pBKSV);
1592   3                      break;
1593   3      
1594   3                  default:
1595   3      
1596   3                      break;
1597   3              }
1598   2          }
1599   1      }
1600          #endif
1601          #endif // end of #ifndef _MAPI_COMBO_C_
1602          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =    289    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
